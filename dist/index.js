!function(e){var t={};function s(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(i,n,function(t){return e[t]}.bind(null,n));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=16)}([function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.classNames=void 0;t.classNames={slider:"slider",sliderVertical:"slider slider_orientation-vertical",trackOutStart:"slider__out slider__out-start js-slider__out js-slider__out-start",trackOutEnd:"slider__out slider__out-end js-slider__out js-slider__out-end",track:"slider__track js-slider__track",scale:"slider__scale js-slider__scale ",scaleFsZero:"slider__scale-value_not-visible",bar:"slider__bar js-slider__bar",rollerFirst:"slider__roller js-slider__roller slider__roller_first js-slider__roller_first",rollerSecond:"slider__roller_second js-slider__roller js-slider__roller_second slider__roller",firstTooltip:"slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip",secondTooltip:"slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip",tooltipWhite:"slider__tooltip_white",tooltipDisplay:"slider__tooltip_is-visible",scaleMarker:"slider__scale-value  js-slider__scale-value",divisionValue:"slider__division-value js-slider__division-value slider__element-",division:"slider__division js-slider__division"}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var i=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var s=this.events[e];s&&s.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var s=t.isSeparate,i=t.separate,n="";if(!1===s)n=e.toString();else{var o="."===i,a=" "===i;","===i&&(i="en-US"),o&&(i="de-DE"),a&&(i=void 0),n=e.toLocaleString(i)}return n}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var i={min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:s(13).allColors,isVertical:!1,isDouble:!1};t.standardOptions=i},function(e,t,s){"use strict";var i,n=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},o=function(){var e={};return function(t){if(void 0===e[t]){var s=document.querySelector(t);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(e){s=null}e[t]=s}return e[t]}}(),a=[];function r(e){for(var t=-1,s=0;s<a.length;s++)if(a[s].identifier===e){t=s;break}return t}function l(e,t){for(var s={},i=[],n=0;n<e.length;n++){var o=e[n],l=t.base?o[0]+t.base:o[0],c=s[l]||0,u="".concat(l," ").concat(c);s[l]=c+1;var p=r(u),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==p?(a[p].references++,a[p].updater(d)):a.push({identifier:u,updater:v(d,t),references:1}),i.push(u)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var n=s.nc;n&&(i.nonce=n)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,p=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function d(e,t,s,i){var n=s?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=p(t,n);else{var o=document.createTextNode(n),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function f(e,t,s){var i=s.css,n=s.media,o=s.sourceMap;if(n?e.setAttribute("media",n):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h=null,m=0;function v(e,t){var s,i,n;if(t.singleton){var o=m++;s=h||(h=c(t)),i=d.bind(null,s,o,!1),n=d.bind(null,s,o,!0)}else s=c(t),i=f.bind(null,s,t),n=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(s)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else n()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=n());var s=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<s.length;i++){var n=r(s[i]);a[n].references--}for(var o=l(e,t),c=0;c<s.length;c++){var u=r(s[c]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}s=o}}}},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__spreadArrays||function(){for(var e=0,t=0,s=arguments.length;t<s;t++)e+=arguments[t].length;var i=Array(e),n=0;for(t=0;t<s;t++)for(var o=arguments[t],a=0,r=o.length;a<r;a++,n++)i[n]=o[a];return i};Object.defineProperty(t,"__esModule",{value:!0});var o=s(6),a=s(3);s(14),function(e){e.fn.colorSlider=function(e){for(var t,s=[],r=1;r<arguments.length;r++)s[r-1]=arguments[r];var l={init:function(e,t){var s=i(i({},a.standardOptions),t);return e.data("presenter",new o.Presenter(s,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe("newData",t),void 0===t||e.data("presenter").emitter.subscribe("newData",t),this}},c="object"==typeof e||!e;return"string"==typeof e?(t=l[e]).call.apply(t,n([this,this],s)):c?l.init(this,e):void 0}}(jQuery)},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var n=s(7),o=s(8),a=s(1),r=s(3),l=function(){function e(e,t){this.element=t,this.emitter=new a.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=i(i({},r.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new n.Model(e)},e.prototype.createView=function(e,t){return new o.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe("newData",this.getNewData),this.view.emitter.subscribe("newPosition",this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit("newData",e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,s=i(i({},t),e);this.model.setData(s)},e}();t.Presenter=l},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var n=s(1),o=function(){function e(e){this.emitter=new n.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),s=this.validateMinMaxStep(e);this.state=i(i(i({},e),t),s),this.emitter.emit("newData",this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,s=e.max,i=e.step;i<=0&&(e.step=.1);var n=t>=s&&s>0||s<0&&s<t;return s<=t&&s<0&&(e.min=t-i),n&&(e.min=t,e.max=t+i),e},e.prototype.validateFromTo=function(e){var t=e.from,s=e.to,i=e.max,n=e.min,o=e.step,a=e.isDouble;a&&(e.to=i);var r=i<0&&0===n,l=!a&&t>=s,c=t>0&&(n<0&&i<0);return t>i&&(e.from=i-o),t<n&&(e.from=n),s>i&&(e.to=i),r&&(e.from=n,e.to=n),l&&(e.from=s-o),c&&(e.from=n),s<=n&&(e.to=n+o,e.from=n),i<n&&(e.to=n+o),e},e}();t.Model=o},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var n=s(1),o=s(9),a=s(10),r=s(11),l=s(12),c=s(0),u=function(){function e(e,t){this.emitter=new n.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),s=this.getOneStep(e),n=this.slider;return i(i({},e),{size:t,oneStep:s,slider:n})},e.prototype.createSlider=function(e,t){var s=e.isVertical,i=document.createElement("div");return i.className=c.classNames.slider,s&&(i.className=c.classNames.sliderVertical),t.append(i),i},e.prototype.createTrack=function(e){return new a.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new o.Rollers(e)},e.prototype.createScale=function(e){return new r.Scale(e)},e.prototype.upData=function(e){var t=i(i({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.setOut(t),this.state=i({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,s=e.max,i=e.step,n=Math.ceil((s-t)/i);return this.getSliderSize(e)/n},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var s=this.drag.bind(this,t),i=function(){document.removeEventListener("mousemove",s),t.removeEventListener("touchmove",s),document.removeEventListener("mouseup",i),t.removeEventListener("touchend",i)};document.addEventListener("mousemove",s),t.addEventListener("touchmove",s),document.addEventListener("mouseup",i),t.addEventListener("touchend",i)}},e.prototype.drag=function(e,t){var s=this.state.isVertical;t.preventDefault();var i=0;if(!!/tooltip || roller/.test(e.className)){var n="touchmove"===t.type&&!s,o="mousemove"===t.type&&!s,a="touchmove"===t.type&&s,r="mousemove"===t.type&&s;n&&(i=this.convertPxToValue(t.touches[0].clientX)),o&&(i=this.convertPxToValue(t.clientX)),a&&(i=this.convertPxToValue(t.touches[0].clientY)),r&&(i=this.convertPxToValue(t.clientY)),this.updatePosition(i,e)}},e.prototype.getTargetType=function(e){var t=this.slider.querySelectorAll(".js-slider__roller");return t[0].contains(e)?"from":t[1].contains(e)?"to":"undefined"},e.prototype.handleScaleClick=function(e){var t,s=this.state.scalePostfix,i=this.state.separate;" "===i&&(i="&nbsp;"),t=e.detail.value.split(s).join("").split(i).join("");var n=String(t).split(",").join(".");this.updatePosition(Number(n))},e.prototype.handleTrackClick=function(e){var t=this.state.isVertical,s=e.target,i=0;if(!/scale/.test(s.className)){i=t?e.clientY:e.clientX;var n=this.convertPxToValue(i);this.updatePosition(n)}},e.prototype.updatePosition=function(e,t){var s=this.state,i=s.from,n=s.to,o=s.step,a=s.isDouble,r=Math.abs(i-e),l=Math.abs(n-e);if(a&&r)return this.emitter.emit("newPosition",{from:e}),void this.convertValueToColor(e);var c=r<l?"from":"to",u=!t&&"to"===c;!t&&"from"===c&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),u&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e));var p=t&&this.getTargetType(t),d="from"===p&&!a,f="to"===p&&!a,h=f&&e<i+o;d&&e>n-o?this.emitter.emit("newPosition",{from:n-o}):(d&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),h?this.emitter.emit("newPosition",{to:i+o}):f&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e)))},e.prototype.convertPxToValue=function(e){var t=this.state,s=t.min,i=t.max,n=t.step,o=t.oneStep,a=t.size,r=t.isVertical,l=this.getSliderPosition(),c=0;return(c=r?l+a-e:e-l)>a?i:c<0?s:Math.round(c/o)*n+s},e.prototype.convertValueToColor=function(e){var t=this.state,s=t.color,i=t.gradient,n=this.state,o=n.max,a=n.isColor,r=n.changeColor,l=e/o,c=a&&r,u=0,p=0;a&&!r&&(u=Math.round(255*l*255*255),p=Math.round(255*l*254*254)),c&&(u=Math.round(256*l*256*255),p=Math.round(254*l*254*254));var d=Math.abs(p);s="#"+Math.abs(u).toString(16),i="#"+d.toString(16),this.emitter.emit("newPosition",{color:s}),this.emitter.emit("newPosition",{gradient:i})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e.prototype.getSliderSize=function(e){return e.isVertical?this.slider.getBoundingClientRect().height:this.slider.getBoundingClientRect().width},e}();t.View=u},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var i=s(2),n=s(0),o=function(){function e(e){this.rollers=this.create(e),this.tooltips=this.createTooltip(),this.moveRollersAtValue(e),this.toggleRollers(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=n.classNames.rollerFirst;var i=document.createElement("div");return i.className=n.classNames.rollerSecond,t.append(s),t.append(i),[s,i]},e.prototype.createTooltip=function(){var e=document.createElement("div");e.className=n.classNames.firstTooltip;var t=document.createElement("div");return t.className=n.classNames.secondTooltip,this.rollers[0].append(e),this.rollers[1].append(t),[e,t]},e.prototype.updataOutTooltip=function(e){var t=e.to,s=e.from,n=e.isPostfix,o=e.isLabel,a=e.isPrefix,r=e.postfix;n||(r="");var l=o&&a;o&&!a&&(this.tooltips[0].innerHTML=""+i.correctSeparate(s,e)+r,this.tooltips[1].innerHTML=""+i.correctSeparate(t,e)+r),l&&(this.tooltips[0].innerHTML=""+r+i.correctSeparate(s,e),this.tooltips[1].innerHTML=""+r+i.correctSeparate(t,e)),this.setColor(e)},e.prototype.setColor=function(e){var t=e.color,s=e.gradient,i=e.isColorOut,o=e.allColors,a=e.isChangeColor,r=e.isLabel,l=o[t],c=o[s];c||(c=s),l||(l=t),a&&i&&(this.tooltips[0].innerHTML=String(l),this.tooltips[1].innerHTML=String(c),this.tooltips[0].style.backgroundColor=""+t,this.tooltips[1].style.backgroundColor=""+s,this.tooltips[0].classList.add(n.classNames.tooltipWhite),this.tooltips[1].classList.add(n.classNames.tooltipWhite)),r||(this.tooltips[0].classList.add(n.classNames.tooltipDisplay),this.tooltips[1].classList.add(n.classNames.tooltipDisplay))},e.prototype.updataColor=function(e){var t=e.color,s=e.isGradient,i=e.gradient,n=e.isChangeColor,o=e.gradientDeg,a=n&&!s;n&&s&&(this.rollers[0].style.background="linear-gradient("+o+"deg, "+t+", "+i+")",this.rollers[1].style.background="linear-gradient("+o+"deg, "+t+", "+i+")"),a&&(this.rollers[0].style.background=t,this.rollers[1].style.background=t)},e.prototype.moveRollersAtValue=function(e){var t=e.to,s=e.from,i=e.isVertical,n=this.convertValueToPx(t,e),o=this.convertValueToPx(s,e),a=this.convertPxToProcent(n,e),r=this.convertPxToProcent(o,e);i?(this.rollers[0].style.bottom=r+"%",this.rollers[1].style.bottom=a+"%"):(this.rollers[0].style.left=r+"%",this.rollers[1].style.left=a+"%"),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.upData=function(e){this.moveRollersAtValue(e),this.toggleRollers(e),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.convertValueToPx=function(e,t){var s=t.min,i=t.max,n=t.step,o=t.size,a=t.oneStep;return e===i?o:Math.round((e-s)/n)*a},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e){var t=e.isDouble;this.rollers[1].style.display=t?"none":"block"},e}();t.Rollers=o},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var i=s(2),n=s(0),o=function(){function e(e){this.track=this.create(e),this.outElements=this.createOutElements(),this.setOut(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");return s.className=n.classNames.track,t.append(s),s},e.prototype.createOutElements=function(){var e=document.createElement("div"),t=document.createElement("div");return e.className=n.classNames.trackOutStart,t.className=n.classNames.trackOutEnd,this.track.append(e),this.track.append(t),[e,t]},e.prototype.setOut=function(e){var t=e.min,s=e.max,n=e.from,o=e.to,a=e.minMax,r=e.fromTo,l=e.isTrackPostfix,c=e.isPrefix,u=e.trackPostfix;l||(u=""),a&&(this.outElements[0].innerHTML=""+i.correctSeparate(t,e)+u,this.outElements[1].innerHTML=""+i.correctSeparate(s,e)+u),r&&(this.outElements[0].innerHTML=""+i.correctSeparate(n,e)+u,this.outElements[1].innerHTML=""+i.correctSeparate(o,e)+u);var p=r&&c;a&&c&&(this.outElements[0].innerHTML=""+u+i.correctSeparate(t,e),this.outElements[1].innerHTML=""+u+i.correctSeparate(s,e)),p&&(this.outElements[0].innerHTML=""+u+i.correctSeparate(n,e),this.outElements[1].innerHTML=""+u+i.correctSeparate(o,e))},e}();t.Track=o},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var n=s(2),o=s(0),a=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=o.classNames.scale,t.append(s),this.addEventListeners(s),this.addScaleMarker(e,s),this.checkScale(e,s)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__scale");this.options=i(i({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,s=e.slider,i=e.color;s.querySelectorAll(".js-slider__scale-value").forEach((function(e){t&&e.classList.add(o.classNames.scaleFsZero)})),document.documentElement.style.setProperty("--scale-color"," "+i)},e.prototype.checkScale=function(e,t){var s=e.isScale;s||(t.style.display="none"),s&&(t.style.display="")},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var s=e.min,i=e.max,n=e.step,o=e.size,a=e.oneStep,r=this.getIncrement(e),l=r/n*a,c=document.createDocumentFragment(),u=0,p=0,d=s;d<i&&!(u>o-50);d+=r,p+=1){var f={fragment:c,value:d,position:u,options:e,val:p};this.createScaleMarker(f),u+=l}var h={fragment:c,value:i,position:o,options:e,val:5};this.createScaleMarker(h),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,s=e.oneStep,i=e.step,n=Math.ceil(t/s);return Math.ceil(n/5)*i},e.prototype.createScaleMarker=function(e){var t=e.fragment,s=e.value,i=e.position,a=e.options,r=e.val,l=a.isScalePostfix,c=a.isPrefix,u=a.onlyDivisions,p=a.isVertical,d=a.scalePostfix,f=document.createElement("span");f.className=o.classNames.scaleMarker;var h=document.createElement("span"),m=document.createElement("span");h.className=""+o.classNames.divisionValue+r,m.className=o.classNames.division,f.append(h),f.append(m),t.append(f);var v=h;u||(v=f),l||(d=""),v.innerHTML=""+n.correctSeparate(s,a)+d,c&&(v.innerHTML=""+d+n.correctSeparate(s,a)),this.updataScaleMarker(a);var b=this.convertPxToPercent(i,a);p?f.style.bottom=b+"%":f.style.left=b+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,s=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var i=!t.classList.contains("slider__division-value")&&s,n=!t.classList.contains("slider__scale-value")&&!s;if(!i&&!n){var o=t.innerHTML,a=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:o}});t.dispatchEvent(a)}}},e}();t.Scale=a},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var i=s(0),n=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=i.classNames.bar,t.append(s),this.updataColor(e,s),this.updataBar(e,s)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__bar");this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var s=e.color,i=e.isGradient,n=e.gradient,o=e.gradientDeg,a=e.isChangeColor,r=a&&!i;a&&i&&(t.style.background="linear-gradient("+o+"deg, "+s+", "+n+")"),r&&(t.style.background=s)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(".js-slider__roller");return[this.calculatePosition(t[0],e),this.calculatePosition(t[1],e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var s=t.isVertical?"top":"left",i=Number.parseInt(getComputedStyle(e).width,10);return e.getBoundingClientRect()[s]+i/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var s=e.isVertical,i=e.isDouble,n=s?"top":"left",o=s?"height":"width",a=this.getRollerPositions(e),r=this.getNewSliderPos(e);if(i&&!s){var l=this.convertPxToProcent(Math.abs(a[1]-r),e);t.style[n]="0%",t.style[o]=l+"%"}else{l=100-(c=this.convertPxToProcent(Math.abs(a[1]-r),e));t.style[n]=c+"%",t.style[o]=l+"%"}if(!i){var c=this.convertPxToProcent(Math.abs(a[0]-r),e);l=this.convertPxToProcent(Math.abs(a[1]-a[0]),e);t.style[n]=c+"%",t.style[o]=l+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e}();t.Bar=n},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,s){var i=s(4),n=s(15);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[e.i,n,""]]);var o={insert:"head",singleton:!1};i(n,o);e.exports=n.locals||{}},function(e,t,s){},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=s(17);s(19),s(5);var n=$(".js-test");n.colorSlider({isScale:!1,isChangeColor:!1}),n.colorSlider("getValue",(function(e){$(".js-custom-from").val(e.from),$(".js-custom-to").val(e.to)})),$(".js-custom-btn").click((function(){n.colorSlider("change",{color:"red",gradient:"blue",max:1e3,from:200,to:800,onlyDivisions:!0,fromTo:!0})}));var o=[{isVertical:!0,isDouble:!1,isColorOut:!0,isScale:!1},{gradient:"red",color:"#6698db",max:15e3,from:5e3,to:1e4,fromTo:!0,separate:".",onlyDivisions:!1},{isVertical:!0,gradient:"blue",color:"yellow",postfix:"",scalePostfix:"",min:-5e3,max:-100,step:2,from:-4e3,to:-700,changeColor:!1,separate:",",onlyDivisions:!1},{isGradient:!1,color:"black",max:1500,from:500,to:1e3,fromTo:!0,separate:" ",postfix:"$",scalePostfix:"$",trackPostfix:"$",isPrefix:!0,isColor:!1,onlyDivisions:!0},{isScale:!1,isLabel:!1,color:"green",isDouble:!0},{gradient:"black",color:"#900202",max:1500.5,from:500.2,to:1000.3,step:3.7,min:-100.2,separate:".",postfix:"€",scalePostfix:"€",trackPostfix:"€",isColor:!1,onlyDivisions:!1}];$(".js-slider").each((function(e,t){new i.Demo($(t).colorSlider(o[e]).colorSlider("change"))}))},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Demo=void 0;var n=s(18),o=function(){function e(e){this.slider=e,this.state=e.getOptions(),this.demoTools=this.createTools(),this.init()}return e.prototype.upData=function(e){this.state=i(i({},this.state),e),this.initTools()},e.prototype.init=function(){this.createSettings(),this.initTools(),this.upData=this.upData.bind(this),this.slider.emitter.subscribe("newData",this.upData)},e.prototype.createTools=function(){var e=document.createElement("div");return e.className="panel__tools",e},e.prototype.createSettings=function(){this.slider.element.after(this.demoTools),this.demoTools.insertAdjacentHTML("beforeend",n.demoTemplate)},e.prototype.initTools=function(){var e=this,t=this.state,s=t.isScale,i=t.isLabel,n=t.from,o=t.to,a=t.min,r=t.max,l=t.postfix,c=t.step,u=t.color,p=t.isScalePostfix,d=t.scalePostfix,f=t.minMax,h=t.fromTo,m=t.isTrackPostfix,v=t.trackPostfix,b=t.isColor,_=t.gradient,y=t.isColorOut,g=t.changeColor,S=t.isGradient,x=t.gradientDeg,k=t.onlyDivisions,j=t.isPostfix,P=t.isChangeColor,T=t.separate,C=t.isSeparate,w=t.isPrefix,M=t.isVertical,O=t.isDouble,D=this.demoTools.querySelector(".js-btn-scale"),E=this.demoTools.querySelector(".js-btn-view"),L=this.demoTools.querySelector(".js-btn-postfix"),N=this.demoTools.querySelector(".js-btn-color"),q=this.demoTools.querySelector(".js-menu-scale"),V=this.demoTools.querySelector(".js-menu-view"),R=this.demoTools.querySelector(".js-menu-postfix"),H=this.demoTools.querySelector(".js-color-setting"),B=this.demoTools.querySelector(".js-orientation"),A=this.demoTools.querySelector(".js-isScale"),z=this.demoTools.querySelector(".js-isColorOut"),F=this.demoTools.querySelector(".js-isLabel"),$=this.demoTools.querySelector(".js-isDouble"),G=this.demoTools.querySelector(".js-from"),I=this.demoTools.querySelector(".js-to"),U=this.demoTools.querySelector(".js-min"),W=this.demoTools.querySelector(".js-max"),X=this.demoTools.querySelector(".js-marker"),Y=this.demoTools.querySelector(".js-step"),Z=this.demoTools.querySelector(".js-separate"),J=this.demoTools.querySelector(".js-color"),Q=this.demoTools.querySelector(".js-isPostfix"),K=this.demoTools.querySelector(".js-isPrefix-all"),ee=this.demoTools.querySelector(".js-scale-postfix"),te=this.demoTools.querySelector(".js-isChangeColor"),se=this.demoTools.querySelector(".js-minMax"),ie=this.demoTools.querySelector(".js-isScaleDel"),ne=this.demoTools.querySelector(".js-fromTo"),oe=this.demoTools.querySelector(".js-division"),ae=this.demoTools.querySelector(".js-isTrackPostfix"),re=this.demoTools.querySelector(".js-isPostfixTool"),le=this.demoTools.querySelector(".js-track-postfix"),ce=this.demoTools.querySelector(".js-isColor"),ue=this.demoTools.querySelector(".js-changeColor"),pe=this.demoTools.querySelector(".js-gradient"),de=this.demoTools.querySelector(".js-gradient-out"),fe=this.demoTools.querySelector(".js-gradient-deg");E.onclick=function(){V.classList.toggle("panel_is-visible")},D.onclick=function(){q.classList.toggle("panel_is-visible")},N.onclick=function(){H.classList.toggle("panel_is-visible")},L.onclick=function(){R.classList.toggle("panel_is-visible")},B.onchange=function(){M||e.setState({isVertical:!0}),M&&e.setState({isVertical:!1})},Q.onchange=function(){p&&e.setState({isScalePostfix:!1}),p||e.setState({isScalePostfix:!0})},re.onchange=function(){j&&e.setState({isPostfix:!1}),j||e.setState({isPostfix:!0})},K.onchange=function(){w&&e.setState({isPrefix:!1}),w||e.setState({isPrefix:!0})},pe.onchange=function(){S&&e.setState({isGradient:!1}),S||e.setState({isGradient:!0})},te.onchange=function(){P&&e.setState({isChangeColor:!1}),P||e.setState({isChangeColor:!0})},ie.onchange=function(){C&&e.setState({isSeparate:!1}),C||e.setState({isSeparate:!0})},z.onchange=function(){y&&e.setState({isColorOut:!1}),y||e.setState({isColorOut:!0})},A.onchange=function(){s?e.setState({isScale:!1}):e.setState({isScale:!0})},F.onchange=function(){i&&e.setState({isLabel:!1}),i||e.setState({isLabel:!0})},$.onchange=function(){O||e.setState({isDouble:!0}),O&&e.setState({isDouble:!1})},se.onchange=function(){f?e.setState({minMax:!1}):e.setState({minMax:!0})},ne.onchange=function(){h?e.setState({fromTo:!1}):e.setState({fromTo:!0})},oe.onchange=function(){k?e.setState({onlyDivisions:!1}):e.setState({onlyDivisions:!0})},ae.onchange=function(){m?e.setState({isTrackPostfix:!1}):e.setState({isTrackPostfix:!0})},ce.onchange=function(){b?e.setState({isColor:!1}):e.setState({isColor:!0})},ue.onchange=function(){g?e.setState({changeColor:!1}):e.setState({changeColor:!0})},X.value=l,X.onchange=function(){var t=X.value;e.setState({postfix:t})},G.value=String(n),G.onchange=function(){var t=Number(G.value);e.setState({from:t})},I.value=String(o),I.onchange=function(){var t=Number(I.value);e.setState({to:t})},U.value=String(a),U.onchange=function(){var t=Number(U.value);e.setState({min:t})},W.value=String(r),W.onchange=function(){var t=Number(W.value);e.setState({max:t})},Y.value=String(c),Y.onchange=function(){var t=Number(Y.value);e.setState({step:t})},J.value=String(u),J.onchange=function(){var t=J.value;e.setState({color:t})},de.value=String(_),de.onchange=function(){var t=de.value;e.setState({gradient:t})},fe.value=String(x),fe.onchange=function(){var t=Number(fe.value);e.setState({gradientDeg:t})},ee.value=d,ee.onchange=function(){var t=ee.value;e.setState({scalePostfix:t})},le.value=v,le.onchange=function(){var t=le.value;e.setState({trackPostfix:t})},Z.value=void 0===T||" "===T?" ":T,Z.onchange=function(){var t=Z.value;"."!==t&&","!==t&&(t=" "),e.setState({separate:t})}},e.prototype.setState=function(e){this.state=i(i({},this.state),e),this.slider.setOptions(this.state),this.slider.upDataView()},e}();t.Demo=o},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.demoTemplate=void 0;t.demoTemplate='\n\n\n<h4  class="panel__title">Панель управления</h4>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">V/H Вид\n<input type="checkbox" class="panel__checkbox panel__inputs js-orientation" name="orientation" />\n</label>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isLabel" name="label"/>\n</label>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Range/Single\n<input type="checkbox" class="panel__checkbox panel__inputs js-isDouble" name="double"/>\n</label>\n</div>\n\n<button class="panel__button js-btn-view">Настройки отображения</button>\n<div class="panel__menu js-menu-view">\n\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать min/max\n<input type="checkbox" class="panel__checkbox panel__inputs js-minMax" name="minMax"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать from/to\n<input type="checkbox" class="panel__checkbox panel__inputs js-fromTo" name="fromTo"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Добавить/убрать разделитель\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScaleDel" name="scale"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Делитель\n<input type="text" class="panel__inputs js-separate" name="separate"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Выводить цвета/значения\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColorOut" name="color"/>\n</label>\n</div>\n\n\n\n<button type="button" class="panel__button js-btn-scale">Управление шкалой</button>\n<div class="panel__menu js-menu-scale">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Шкала с делениями/значениями\n<input type="checkbox" class="panel__checkbox panel__inputs js-division" name="division"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Шкалу\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScale" name="scale"/>\n</label>\n</div>\n</div>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Max\n<input type="number" class="panel__inputs js-max" name="max"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Min\n<input type="number" class="panel__inputs js-min" name="min"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">From\n<input type="number" class="panel__inputs js-from" name="from" />\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">To\n<input type="number" class="panel__inputs js-to" name="to"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Шаг\n<input type="number" class="panel__inputs js-step" name="step"/>\n</label>\n</div>\n</div>\n\n\n<button class="panel__button js-btn-color" type="button">Настройки цвета</button>\n<div class="panel__menu js-color-setting">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Откл/Вкл изменение цвета\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Использовать только css/переменной цвет\n<input type="checkbox" class="panel__checkbox panel__inputs js-isChangeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Сменить оттенок\n<input type="checkbox" class="panel__checkbox panel__inputs js-changeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Градиент вкл/откл\n<input type="checkbox" class="panel__checkbox panel__inputs js-gradient" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Цвет\n<input type="text" class="panel__inputs js-color" name="color"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Градиент\n<input type="text" class="panel__inputs js-gradient-out" name="gradient"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Угол градиента\n<input type="number" class="panel__inputs js-gradient-deg" name="gradient"/>\n</label>\n</div>\n</div>\n\n\n<button type="button" class="panel__button js-btn-postfix">Postfix/Prefix</button>\n<div class="panel__menu js-menu-postfix">\n<div class="panel__items">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Сменить Префикс/Постфикс\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPrefix-all" name="isPrefix"/>\n</label>\n</div>\n<label class="panel__labels panel__checkboxes js-label-postfix">Показать/Скрыть Pre/Postfix tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfixTool" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix шкалы\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix track\n<input type="checkbox" class="panel__checkbox panel__inputs js-isTrackPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix tooltip\n<input type="text" class="panel__inputs js-marker" name="marker"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix шкалы\n<input type="text" class="panel__inputs js-scale-postfix" name="js-prefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix track\n<input type="text" class="panel__inputs js-track-postfix" name="js-prefix"/>\n</label>\n</div>\n</div>\n\n'},function(e,t,s){var i=s(4),n=s(20);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[e.i,n,""]]);var o={insert:"head",singleton:!1};i(n,o);e.exports=n.locals||{}},function(e,t,s){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,