!function(e){var t={};function n(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(i,s,function(t){return e[t]}.bind(null,s));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=15)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var i=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var n=this.events[e];n&&n.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var n=t.isSeparate,i=t.separate,s="";if(!1===n)s=e.toString();else{var o="."===i,a=" "===i;","===i&&(i="en-US"),o&&(i="de-DE"),a&&(i=void 0),s=e.toLocaleString(i)}return s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var i={min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:n(12).allColors,isVertical:!1,isDouble:!1};t.standardOptions=i},function(e,t,n){"use strict";var i,s=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function r(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},i=[],s=0;s<e.length;s++){var o=e[s],l=t.base?o[0]+t.base:o[0],c=n[l]||0,u="".concat(l," ").concat(c);n[l]=c+1;var d=r(u),p={css:o[1],media:o[2],sourceMap:o[3]};-1!==d?(a[d].references++,a[d].updater(p)):a.push({identifier:u,updater:v(p,t),references:1}),i.push(u)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var s=n.nc;s&&(i.nonce=s)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function p(e,t,n,i){var s=n?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=d(t,s);else{var o=document.createTextNode(s),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function f(e,t,n){var i=n.css,s=n.media,o=n.sourceMap;if(s?e.setAttribute("media",s):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h=null,_=0;function v(e,t){var n,i,s;if(t.singleton){var o=_++;n=h||(h=c(t)),i=p.bind(null,n,o,!1),s=p.bind(null,n,o,!0)}else n=c(t),i=f.bind(null,n,t),s=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else s()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=s());var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<n.length;i++){var s=r(n[i]);a[s].references--}for(var o=l(e,t),c=0;c<n.length;c++){var u=r(n[c]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}n=o}}}},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)},s=this&&this.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var i=Array(e),s=0;for(t=0;t<n;t++)for(var o=arguments[t],a=0,r=o.length;a<r;a++,s++)i[s]=o[a];return i};Object.defineProperty(t,"__esModule",{value:!0});var o=n(5),a=n(2);n(13),function(e){e.fn.colorSlider=function(e){for(var t,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var l={init:function(e,t){var n=i(i({},a.standardOptions),t);return e.data("presenter",new o.Presenter(n,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe("newData",t),void 0===t||e.data("presenter").emitter.subscribe("newData",t),this}},c="object"==typeof e||!e;return"string"==typeof e?(t=l[e]).call.apply(t,s([this,this],n)):c?l.init(this,e):void 0}}(jQuery)},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var s=n(6),o=n(7),a=n(0),r=n(2),l=function(){function e(e,t){this.element=t,this.emitter=new a.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=i(i({},r.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new s.Model(e)},e.prototype.createView=function(e,t){return new o.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe("newData",this.getNewData),this.view.emitter.subscribe("newPosition",this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit("newData",e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,n=i(i({},t),e);this.model.setData(n)},e}();t.Presenter=l},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var s=n(0),o=function(){function e(e){this.emitter=new s.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),n=this.validateMinMaxStep(e);this.state=i(i(i({},e),t),n),this.emitter.emit("newData",this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,n=e.max,i=e.step;i<=0&&(e.step=.1);var s=t>=n&&n>0||n<0&&n<t;return n<=t&&n<0&&(e.min=t-i),s&&(e.min=t,e.max=t+i),e},e.prototype.validateFromTo=function(e){var t=e.from,n=e.to,i=e.max,s=e.min,o=e.step,a=e.isDouble;a&&(e.to=i);var r=i<0&&0===s,l=!a&&t>=n,c=t>0&&(s<0&&i<0);return t>i&&(e.from=i-o),t<s&&(e.from=s),n>i&&(e.to=i),r&&(e.from=s,e.to=s),l&&(e.from=n-o),c&&(e.from=s),n<=s&&(e.to=s+o,e.from=s),i<s&&(e.to=s+o),e},e}();t.Model=o},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var s=n(0),o=n(8),a=n(9),r=n(10),l=n(11),c=function(){function e(e,t){this.emitter=new s.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),n=this.getOneStep(e),s=this.slider;return i(i({},e),{size:t,oneStep:n,slider:s})},e.prototype.createSlider=function(e,t){var n=e.isVertical,i=document.createElement("div"),s="slider";return n&&(s="slider slider_orientation-vertical"),i.className=s,t.append(i),i},e.prototype.createTrack=function(e){return new a.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new o.Rollers(e)},e.prototype.createScale=function(e){return new r.Scale(e)},e.prototype.upData=function(e){var t=i(i({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.upData(t),this.state=i({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,n=e.max,i=e.step,s=Math.ceil((n-t)/i);return this.getSliderSize(e)/s},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var n=this.drag.bind(this,t),i=function(){document.removeEventListener("mousemove",n),t.removeEventListener("touchmove",n),document.removeEventListener("mouseup",i),t.removeEventListener("touchend",i)};document.addEventListener("mousemove",n),t.addEventListener("touchmove",n),document.addEventListener("mouseup",i),t.addEventListener("touchend",i)}},e.prototype.drag=function(e,t){var n=this.state.isVertical;t.preventDefault();var i=0;if(!!/tooltip || roller/.test(e.className)){var s="touchmove"===t.type&&!n,o="mousemove"===t.type&&!n,a="touchmove"===t.type&&n,r="mousemove"===t.type&&n;s&&(i=this.convertPxToValue(t.touches[0].clientX)),o&&(i=this.convertPxToValue(t.clientX)),a&&(i=this.convertPxToValue(t.touches[0].clientY)),r&&(i=this.convertPxToValue(t.clientY)),this.updatePosition(i,e)}},e.prototype.getTargetType=function(e){var t=this.slider.querySelectorAll(".js-slider__roller");return t[0].contains(e)?"from":t[1].contains(e)?"to":"undefined"},e.prototype.handleScaleClick=function(e){var t,n=this.state.scalePostfix,i=this.state.separate;" "===i&&(i="&nbsp;"),t=e.detail.value.split(n).join("").split(i).join("");var s=String(t).split(",").join(".");this.updatePosition(Number(s))},e.prototype.handleTrackClick=function(e){var t=this.state.isVertical,n=e.target,i=0;if(!/scale/.test(n.className)){i=t?e.clientY:e.clientX;var s=this.convertPxToValue(i);this.updatePosition(s)}},e.prototype.updatePosition=function(e,t){var n=this.state,i=n.from,s=n.to,o=n.step,a=n.isDouble,r=Math.abs(i-e),l=Math.abs(s-e);if(a&&r)return this.emitter.emit("newPosition",{from:e}),void this.convertValueToColor(e);var c=r<l?"from":"to",u=!t&&"to"===c;!t&&"from"===c&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),u&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e));var d=t&&this.getTargetType(t),p="from"===d&&!a,f="to"===d&&!a,h=f&&e<i+o;p&&e>s-o?this.emitter.emit("newPosition",{from:s-o}):(p&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),h?this.emitter.emit("newPosition",{to:i+o}):f&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e)))},e.prototype.convertPxToValue=function(e){var t=this.state,n=t.min,i=t.max,s=t.step,o=t.oneStep,a=t.size,r=t.isVertical,l=this.getSliderPosition(),c=0;return(c=r?l+a-e:e-l)>a?i:c<0?n:Math.round(c/o)*s+n},e.prototype.convertValueToColor=function(e){var t=this.state,n=t.color,i=t.gradient,s=this.state,o=s.max,a=s.isColor,r=s.changeColor,l=e/o,c=!0===a&&!0===r,u=0,d=0;!0===a&&!1===r&&(u=Math.round(255*l*255*255),d=Math.round(255*l*254*254)),c&&(u=Math.round(256*l*256*255),d=Math.round(254*l*254*254));var p=Math.abs(d);n="#"+Math.abs(u).toString(16),i="#"+p.toString(16),this.emitter.emit("newPosition",{color:n}),this.emitter.emit("newPosition",{gradient:i})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e.prototype.getSliderSize=function(e){return e.isVertical?this.slider.getBoundingClientRect().height:this.slider.getBoundingClientRect().width},e}();t.View=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var i=n(1),s=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=document.createElement("div");n.className="slider__roller js-slider__roller slider__roller_first js-slider__roller_first";var i=document.createElement("div");i.className="slider__roller_second js-slider__roller js-slider__roller_second slider__roller",t.append(n),t.append(i),this.createTooltip(n,i,e),this.moveRollersAtValue(e,n,i),this.toggleRollers(e,i),this.updataColor(e,n,i)},e.prototype.createTooltip=function(e,t,n){var i=document.createElement("div");i.className="slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip";var s=document.createElement("div");s.className="slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip",e.append(i),t.append(s),this.updataOutTooltip(i,s,n)},e.prototype.updataOutTooltip=function(e,t,n){var s=n.to,o=n.from,a=n.isPostfix,r=n.isLabel,l=n.isPrefix,c=n.postfix;!1===a&&(c="");var u=!0===r&&!0===l;!0===r&&!1===l&&(e.innerHTML=""+i.correctSeparate(o,n)+c,t.innerHTML=""+i.correctSeparate(s,n)+c),u&&(e.innerHTML=""+c+i.correctSeparate(o,n),t.innerHTML=""+c+i.correctSeparate(s,n)),this.setColor(e,t,n)},e.prototype.setColor=function(e,t,n){var i=n.color,s=n.gradient,o=n.isColorOut,a=n.allColors,r=n.isChangeColor,l=n.isLabel,c=a[i],u=a[s];void 0===u&&(u=s),void 0===c&&(c=i),!0===r&&!0===o&&(e.innerHTML=String(c),t.innerHTML=String(u),e.style.backgroundColor=""+i,t.style.backgroundColor=""+s,e.classList.add("slider__tooltip_white-color"),t.classList.add("slider__tooltip_white-color")),!1===l&&(e.classList.add("slider__tooltip_display-none"),t.classList.add("slider__tooltip_display-none"))},e.prototype.updataColor=function(e,t,n){var i=e.color,s=e.isGradient,o=e.gradient,a=e.isChangeColor,r=e.gradientDeg,l=!0===a&&!1===s;!0===a&&!0===s&&(t.style.background="linear-gradient("+r+"deg, "+i+", "+o+")",n.style.background="linear-gradient("+r+"deg, "+i+", "+o+")"),l&&(t.style.background=i,n.style.background=i)},e.prototype.moveRollersAtValue=function(e,t,n){var i=e.to,s=e.from,o=e.isVertical,a=this.convertValueToPx(i,e),r=this.convertValueToPx(s,e),l=this.convertPxToProcent(a,e),c=this.convertPxToProcent(r,e);o?(t.style.bottom=c+"%",n.style.bottom=l+"%"):(t.style.left=c+"%",n.style.left=l+"%")},e.prototype.upData=function(e){var t=e.slider,n=t.querySelector(".js-slider__roller_first"),i=t.querySelector(".js-slider__roller_second"),s=t.querySelector(".js-slider__tooltip_first"),o=t.querySelector(".js-slider__tooltip_second");this.moveRollersAtValue(e,n,i),this.toggleRollers(e,i),this.updataColor(e,n,i),this.updataOutTooltip(s,o,e)},e.prototype.convertValueToPx=function(e,t){var n=t.min,i=t.max,s=t.step,o=t.size,a=t.oneStep;return e===i?o:Math.round((e-n)/s)*a},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e,t){var n=e.isDouble;t.style.display=n?"none":"block"},e}();t.Rollers=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var i=n(1),s=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=document.createElement("div");n.className="slider__track js-slider__track",t.append(n),this.createOutElement(n,e)},e.prototype.createOutElement=function(e,t){var n=document.createElement("div"),i=document.createElement("div");n.className="slider__out slider__out-start js-slider__out js-slider__out-start",i.className="slider__out slider__out-end js-slider__out js-slider__out-end",e.append(n),e.append(i),this.setStartEndTrackOut(n,i,t)},e.prototype.setStartEndTrackOut=function(e,t,n){var s=n.min,o=n.max,a=n.from,r=n.to,l=n.minMax,c=n.fromTo,u=n.isTrackPostfix,d=n.isPrefix,p=n.trackPostfix;!1===u&&(p=""),!0===l&&(e.innerHTML=""+i.correctSeparate(s,n)+p,t.innerHTML=""+i.correctSeparate(o,n)+p),!0===c&&(e.innerHTML=""+i.correctSeparate(a,n)+p,t.innerHTML=""+i.correctSeparate(r,n)+p);var f=!0===c&&!0===d;!0===l&&!0===d&&(e.innerHTML=""+p+i.correctSeparate(s,n),t.innerHTML=""+p+i.correctSeparate(o,n)),f&&(e.innerHTML=""+p+i.correctSeparate(a,n),t.innerHTML=""+p+i.correctSeparate(r,n))},e.prototype.upData=function(e){var t=e.slider,n=t.querySelector(".js-slider__out-start"),i=t.querySelector(".js-slider__out-end");this.setStartEndTrackOut(n,i,e)},e}();t.Track=s},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var s=n(1),o=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,n=document.createElement("div");n.className="slider__scale js-slider__scale ",t.append(n),this.addEventListeners(n),this.addScaleMarker(e,n),this.checkScale(e,n)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__scale");this.options=i(i({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,n=e.slider,i=e.color;n.querySelectorAll(".js-slider__scale-value").forEach((function(e){!0===t?e.classList.add("slider__scale-value_fontSize-null"):e.classList.add("slider__scale-value_fontSize-normal")})),document.documentElement.style.setProperty("--scale-color"," "+i)},e.prototype.checkScale=function(e,t){var n=e.isScale;!1===n&&(t.style.display="none"),!0===n&&(t.style.display="")},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var n=e.min,i=e.max,s=e.step,o=e.size,a=e.oneStep,r=this.getIncrement(e),l=r/s*a,c=document.createDocumentFragment(),u=0,d=0,p=n;p<i&&!(u>o-50);p+=r,d+=1)this.createScaleMarker(c,p,u,e,d),u+=l;this.createScaleMarker(c,i,o,e,5),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,n=e.oneStep,i=e.step,s=Math.ceil(t/n);return Math.ceil(s/5)*i},e.prototype.createScaleMarker=function(e,t,n,i,o){var a=i.isScalePostfix,r=i.isPrefix,l=i.onlyDivisions,c=i.isVertical,u=i.scalePostfix,d=document.createElement("span");d.className="slider__scale-value  js-slider__scale-value";var p=document.createElement("span"),f=document.createElement("span");p.className="slider__division-value js-slider__division-value slider__division-value_"+o+"-element",f.className="slider__division js-slider__division",d.append(p),d.append(f),e.append(d);var h=p;!1===l&&(h=d),!1===a&&(u=""),h.innerHTML=""+s.correctSeparate(t,i)+u,!0===r&&(h.innerHTML=""+u+s.correctSeparate(t,i)),this.updataScaleMarker(i);var _=this.convertPxToPercent(n,i);c?d.style.bottom=_+"%":d.style.left=_+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,n=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var i=!t.classList.contains("slider__division-value")&&!0===n,s=!t.classList.contains("slider__scale-value")&&!1===n;if(!i&&!s){var o=t.innerHTML,a=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:o}});t.dispatchEvent(a)}}},e}();t.Scale=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=document.createElement("div");n.className="slider__bar js-slider__bar",t.append(n),this.updataColor(e,n),this.updataBar(e,n)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__bar");this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var n=e.color,i=e.isGradient,s=e.gradient,o=e.gradientDeg,a=e.isChangeColor,r=!0===a&&!1===i;!0===a&&!0===i&&(t.style.background="linear-gradient("+o+"deg, "+n+", "+s+")"),r&&(t.style.background=n)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(".js-slider__roller");return[this.calculatePosition(t[0],e),this.calculatePosition(t[1],e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var n=t.isVertical?"top":"left",i=Number.parseInt(getComputedStyle(e).width,10);return e.getBoundingClientRect()[n]+i/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var n=e.isVertical,i=e.isDouble,s=n?"top":"left",o=n?"height":"width",a=this.getRollerPositions(e),r=this.getNewSliderPos(e);if(i&&!n){var l=this.convertPxToProcent(Math.abs(a[1]-r),e);t.style[s]="0%",t.style[o]=l+"%"}else{l=100-(c=this.convertPxToProcent(Math.abs(a[1]-r),e));t.style[s]=c+"%",t.style[o]=l+"%"}if(!i){var c=this.convertPxToProcent(Math.abs(a[0]-r),e);l=this.convertPxToProcent(Math.abs(a[1]-a[0]),e);t.style[s]=c+"%",t.style[o]=l+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e}();t.Bar=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,n){var i=n(3),s=n(14);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var o={insert:"head",singleton:!1};i(s,o);e.exports=s.locals||{}},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(16);n(18),n(4);var s=$(".js-test");s.colorSlider({isScale:!1,isChangeColor:!1}),s.colorSlider("getValue",(function(e){$(".js-custom-from").val(e.from),$(".js-custom-to").val(e.to)})),$(".js-custom-btn").click((function(){s.colorSlider("change",{color:"red",gradient:"blue",max:1e3,from:200,to:800,onlyDivisions:!0,fromTo:!0})}));var o=[{isVertical:!0,isDouble:!1,isColorOut:!0,isScale:!1},{gradient:"red",color:"#6698db",max:15e3,from:5e3,to:1e4,fromTo:!0,separate:".",onlyDivisions:!1},{isVertical:!0,gradient:"blue",color:"yellow",postfix:"",scalePostfix:"",min:-5e3,max:-100,step:2,from:-4e3,to:-700,changeColor:!1,separate:",",onlyDivisions:!1},{isGradient:!1,color:"black",max:1500,from:500,to:1e3,fromTo:!0,separate:" ",postfix:"$",scalePostfix:"$",trackPostfix:"$",isPrefix:!0,isColor:!1,onlyDivisions:!0},{isScale:!1,isLabel:!1,color:"green",isDouble:!0},{gradient:"black",color:"#900202",max:1500.5,from:500.2,to:1000.3,step:3.7,min:-100.2,separate:".",postfix:"€",scalePostfix:"€",trackPostfix:"€",isColor:!1,onlyDivisions:!1}];$(".js-slider").each((function(e,t){new i.Demo($(t).colorSlider(o[e]).colorSlider("change"))}))},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Demo=void 0;var s=n(17),o=function(){function e(e){this.slider=e,this.state=e.getOptions(),this.demoTools=this.createTools(),this.init()}return e.prototype.upData=function(e){this.state=i(i({},this.state),e),this.initTools()},e.prototype.init=function(){this.createSettings(),this.initTools(),this.upData=this.upData.bind(this),this.slider.emitter.subscribe("newData",this.upData)},e.prototype.createTools=function(){var e=document.createElement("div");return e.className="panel__tools",e},e.prototype.createSettings=function(){this.slider.element.after(this.demoTools),this.demoTools.insertAdjacentHTML("beforeend",s.demoTemplate)},e.prototype.initTools=function(){var e=this,t=this.state,n=t.isScale,i=t.isLabel,s=t.from,o=t.to,a=t.min,r=t.max,l=t.postfix,c=t.step,u=t.color,d=t.isScalePostfix,p=t.scalePostfix,f=t.minMax,h=t.fromTo,_=t.isTrackPostfix,v=t.trackPostfix,m=t.isColor,b=t.gradient,y=t.isColorOut,g=t.changeColor,S=t.isGradient,x=t.gradientDeg,k=t.onlyDivisions,j=t.isPostfix,P=t.isChangeColor,T=t.separate,C=t.isSeparate,w=t.isPrefix,M=t.isVertical,D=t.isDouble,O=this.demoTools.querySelector(".js-btn-scale"),L=this.demoTools.querySelector(".js-btn-view"),E=this.demoTools.querySelector(".js-btn-postfix"),q=this.demoTools.querySelector(".js-btn-color"),V=this.demoTools.querySelector(".js-menu-scale"),N=this.demoTools.querySelector(".js-menu-view"),R=this.demoTools.querySelector(".js-menu-postfix"),H=this.demoTools.querySelector(".js-color-setting"),B=this.demoTools.querySelector(".js-orientation"),z=this.demoTools.querySelector(".js-isScale"),A=this.demoTools.querySelector(".js-isColorOut"),$=this.demoTools.querySelector(".js-isLabel"),G=this.demoTools.querySelector(".js-isDouble"),F=this.demoTools.querySelector(".js-from"),I=this.demoTools.querySelector(".js-to"),U=this.demoTools.querySelector(".js-min"),X=this.demoTools.querySelector(".js-max"),Y=this.demoTools.querySelector(".js-marker"),J=this.demoTools.querySelector(".js-step"),Q=this.demoTools.querySelector(".js-separate"),K=this.demoTools.querySelector(".js-color"),W=this.demoTools.querySelector(".js-isPostfix"),Z=this.demoTools.querySelector(".js-isPrefix-all"),ee=this.demoTools.querySelector(".js-scale-postfix"),te=this.demoTools.querySelector(".js-isChangeColor"),ne=this.demoTools.querySelector(".js-minMax"),ie=this.demoTools.querySelector(".js-isScaleDel"),se=this.demoTools.querySelector(".js-fromTo"),oe=this.demoTools.querySelector(".js-division"),ae=this.demoTools.querySelector(".js-isTrackPostfix"),re=this.demoTools.querySelector(".js-isPostfixTool"),le=this.demoTools.querySelector(".js-track-postfix"),ce=this.demoTools.querySelector(".js-isColor"),ue=this.demoTools.querySelector(".js-changeColor"),de=this.demoTools.querySelector(".js-gradient"),pe=this.demoTools.querySelector(".js-gradient-out"),fe=this.demoTools.querySelector(".js-gradient-deg");L.onclick=function(){N.classList.toggle("panel__close")},O.onclick=function(){V.classList.toggle("panel__close")},q.onclick=function(){H.classList.toggle("panel__close")},E.onclick=function(){R.classList.toggle("panel__close")},B.onchange=function(){!1===M&&e.setState({isVertical:!0}),!0===M&&e.setState({isVertical:!1})},W.onchange=function(){!0===d&&e.setState({isScalePostfix:!1}),!1===d&&e.setState({isScalePostfix:!0})},re.onchange=function(){!0===j&&e.setState({isPostfix:!1}),!1===j&&e.setState({isPostfix:!0})},Z.onchange=function(){!0===w&&e.setState({isPrefix:!1}),!1===w&&e.setState({isPrefix:!0})},de.onchange=function(){!0===S&&e.setState({isGradient:!1}),!1===S&&e.setState({isGradient:!0})},te.onchange=function(){!0===P&&e.setState({isChangeColor:!1}),!1===P&&e.setState({isChangeColor:!0})},ie.onchange=function(){!0===C&&e.setState({isSeparate:!1}),!1===C&&e.setState({isSeparate:!0})},A.onchange=function(){!0===y&&e.setState({isColorOut:!1}),!1===y&&e.setState({isColorOut:!0})},z.onchange=function(){!1===n?e.setState({isScale:!0}):e.setState({isScale:!1})},$.onchange=function(){!0===i&&e.setState({isLabel:!1}),!1===i&&e.setState({isLabel:!0})},G.onchange=function(){!1===D&&e.setState({isDouble:!0}),!0===D&&e.setState({isDouble:!1})},ne.onchange=function(){!1===f?e.setState({minMax:!0}):e.setState({minMax:!1})},se.onchange=function(){!1===h?e.setState({fromTo:!0}):e.setState({fromTo:!1})},oe.onchange=function(){!1===k?e.setState({onlyDivisions:!0}):e.setState({onlyDivisions:!1})},ae.onchange=function(){!1===_?e.setState({isTrackPostfix:!0}):e.setState({isTrackPostfix:!1})},ce.onchange=function(){!0===m?e.setState({isColor:!1}):e.setState({isColor:!0})},ue.onchange=function(){!0===g?e.setState({changeColor:!1}):e.setState({changeColor:!0})},Y.value=l,Y.onchange=function(){var t=Y.value;e.setState({postfix:t})},F.value=String(s),F.onchange=function(){var t=Number(F.value);e.setState({from:t})},I.value=String(o),I.onchange=function(){var t=Number(I.value);e.setState({to:t})},U.value=String(a),U.onchange=function(){var t=Number(U.value);e.setState({min:t})},X.value=String(r),X.onchange=function(){var t=Number(X.value);e.setState({max:t})},J.value=String(c),J.onchange=function(){var t=Number(J.value);e.setState({step:t})},K.value=String(u),K.onchange=function(){var t=K.value;e.setState({color:t})},pe.value=String(b),pe.onchange=function(){var t=pe.value;e.setState({gradient:t})},fe.value=String(x),fe.onchange=function(){var t=Number(fe.value);e.setState({gradientDeg:t})},ee.value=p,ee.onchange=function(){var t=ee.value;e.setState({scalePostfix:t})},le.value=v,le.onchange=function(){var t=le.value;e.setState({trackPostfix:t})},Q.value=void 0===T||" "===T?" ":T,Q.onchange=function(){var t=Q.value;"."!==t&&","!==t&&(t=" "),e.setState({separate:t})}},e.prototype.setState=function(e){this.state=i(i({},this.state),e),this.slider.setOptions(this.state),this.slider.upDataView()},e}();t.Demo=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.demoTemplate=void 0;t.demoTemplate='\n\n\n<h4  class="panel__title">Панель управления</h4>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">V/H Вид\n<input type="checkbox" class="panel__checkbox panel__inputs js-orientation" name="orientation" />\n</label>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isLabel" name="label"/>\n</label>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Range/Single\n<input type="checkbox" class="panel__checkbox panel__inputs js-isDouble" name="double"/>\n</label>\n</div>\n\n<button class="panel__button js-btn-view">Настройки отображения</button>\n<div class="panel__menu js-menu-view">\n\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать min/max\n<input type="checkbox" class="panel__checkbox panel__inputs js-minMax" name="minMax"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать from/to\n<input type="checkbox" class="panel__checkbox panel__inputs js-fromTo" name="fromTo"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Добавить/убрать разделитель\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScaleDel" name="scale"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Делитель\n<input type="text" class="panel__inputs js-separate" name="separate"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Выводить цвета/значения\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColorOut" name="color"/>\n</label>\n</div>\n\n\n\n<button type="button" class="panel__button js-btn-scale">Управление шкалой</button>\n<div class="panel__menu js-menu-scale">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Шкала с делениями/значениями\n<input type="checkbox" class="panel__checkbox panel__inputs js-division" name="division"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Шкалу\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScale" name="scale"/>\n</label>\n</div>\n</div>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Max\n<input type="number" class="panel__inputs js-max" name="max"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Min\n<input type="number" class="panel__inputs js-min" name="min"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">From\n<input type="number" class="panel__inputs js-from" name="from" />\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">To\n<input type="number" class="panel__inputs js-to" name="to"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Шаг\n<input type="number" class="panel__inputs js-step" name="step"/>\n</label>\n</div>\n</div>\n\n\n<button class="panel__button js-btn-color" type="button">Настройки цвета</button>\n<div class="panel__menu js-color-setting">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Откл/Вкл изменение цвета\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Использовать только css/переменной цвет\n<input type="checkbox" class="panel__checkbox panel__inputs js-isChangeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Сменить оттенок\n<input type="checkbox" class="panel__checkbox panel__inputs js-changeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Градиент вкл/откл\n<input type="checkbox" class="panel__checkbox panel__inputs js-gradient" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Цвет\n<input type="text" class="panel__inputs js-color" name="color"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Градиент\n<input type="text" class="panel__inputs js-gradient-out" name="gradient"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Угол градиента\n<input type="number" class="panel__inputs js-gradient-deg" name="gradient"/>\n</label>\n</div>\n</div>\n\n\n<button type="button" class="panel__button js-btn-postfix">Postfix/Prefix</button>\n<div class="panel__menu js-menu-postfix">\n<div class="panel__items">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Добавить/убрать Префикс tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPrefix-all" name="isPrefix"/>\n</label>\n</div>\n<label class="panel__labels panel__checkboxes js-label-postfix">Показать/Скрыть Pre/Postfix tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfixTool" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix шкалы\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix track\n<input type="checkbox" class="panel__checkbox panel__inputs js-isTrackPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix tooltip\n<input type="text" class="panel__inputs js-marker" name="marker"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix шкалы\n<input type="text" class="panel__inputs js-scale-postfix" name="js-prefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix track\n<input type="text" class="panel__inputs js-track-postfix" name="js-prefix"/>\n</label>\n</div>\n</div>\n\n'},function(e,t,n){var i=n(3),s=n(19);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var o={insert:"head",singleton:!1};i(s,o);e.exports=s.locals||{}},function(e,t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,