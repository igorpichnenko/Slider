!function(e){var t={};function n(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(i,s,function(t){return e[t]}.bind(null,s));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var i=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.unsubscribe=function(e,t){this.events[e]=this.events[e].filter((function(e){return t!==e}))},e.prototype.emit=function(e,t){var n=this.events[e];n&&n.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var i={orientation:"horizontal",type:"double",min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPostfix:!0,isLabel:!0,isScale:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,prettify:!0,allColors:n(11).allColors};t.standardOptions=i},function(e,t,n){"use strict";var i,s=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),r=[];function a(e){for(var t=-1,n=0;n<r.length;n++)if(r[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},i=[],s=0;s<e.length;s++){var o=e[s],l=t.base?o[0]+t.base:o[0],c=n[l]||0,u="".concat(l," ").concat(c);n[l]=c+1;var d=a(u),f={css:o[1],media:o[2],sourceMap:o[3]};-1!==d?(r[d].references++,r[d].updater(f)):r.push({identifier:u,updater:m(f,t),references:1}),i.push(u)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var s=n.nc;s&&(i.nonce=s)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var r=o(e.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function f(e,t,n,i){var s=n?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=d(t,s);else{var o=document.createTextNode(s),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(o,r[t]):e.appendChild(o)}}function p(e,t,n){var i=n.css,s=n.media,o=n.sourceMap;if(s?e.setAttribute("media",s):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h=null,b=0;function m(e,t){var n,i,s;if(t.singleton){var o=b++;n=h||(h=c(t)),i=f.bind(null,n,o,!1),s=f.bind(null,n,o,!0)}else n=c(t),i=p.bind(null,n,t),s=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else s()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=s());var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<n.length;i++){var s=a(n[i]);r[s].references--}for(var o=l(e,t),c=0;c<n.length;c++){var u=a(n[c]);0===r[u].references&&(r[u].updater(),r.splice(u,1))}n=o}}}},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var s=n(4),o=n(1);n(12),function(e){e.fn.colorSlider=function(t,n){var r={init:function(t,n){var r=e.extend({},o.standardOptions,n);return t.data("presenter",new s.Presenter(r,t)),t.data("options",i(i({},r),t.data("presenter").getOptions())),t},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe("newData",t),void 0===t||e.data("presenter").emitter.subscribe("newData",t),this}};return"string"==typeof t&&"change"===t?r[t].call(this,this,arguments[1]):("string"==typeof t&&"getValue"===t&&r[t].call(this,this,arguments[1]),"object"!=typeof t&&t?void 0:r.init(this,t))}}(jQuery)},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var s=n(5),o=n(6),r=n(0),a=n(1),l=function(){function e(e,t){this.element=t,this.emitter=new r.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=i(i({},a.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new s.Model(e)},e.prototype.createView=function(e,t){return new o.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe("newData",this.getNewData),this.view.emitter.subscribe("newPosition",this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit("newData",e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,n=i(i({},t),e);this.model.setData(n)},e}();t.Presenter=l},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var s=n(0),o=function(){function e(e){this.emitter=new s.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),n=this.validateMinMaxStep(e);this.state=i(i(i({},e),t),n),this.emitter.emit("newData",this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,n=e.max,i=e.step;i<1&&(e.step=1);var s=Math.abs(n)/2;return i>s&&(e.step=s),n<=t&&n<0&&(e.min=t-i),t>=n&&n>0&&(e.min=t,e.max=t+i),n<0&&n<t&&(e.max=t+i,e.min=t),e},e.prototype.validateFromTo=function(e){var t=e.from,n=e.to,i=e.max,s=e.min,o=e.type,r=e.step;return"single"===o&&(e.to=i),s>t&&(e.from=s),n>i&&(e.to=i),i<0&&0===s&&(e.from=s,e.to=s),"double"===o&&t>=n&&(e.from=n-r),n<=s&&(e.to=s+r,e.from=s),t>0&&s<0&&i<0&&(e.from=s),i<s&&(e.to=s+r),e},e}();t.Model=o},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var s=n(0),o=n(7),r=n(8),a=n(9),l=n(10),c=function(){function e(e,t){this.emitter=new s.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),n=this.getOneStep(e),s=this.slider;return i(i({},e),{size:t,oneStep:n,slider:s})},e.prototype.createSlider=function(e,t){var n=e.orientation,i=document.createElement("div");return i.className="slider slider_"+n,t.append(i),i},e.prototype.createTrack=function(e){return new r.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new o.Rollers(e)},e.prototype.createScale=function(e){return new a.Scale(e)},e.prototype.upData=function(e){var t=i(i({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.upData(t),this.state=i({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,n=e.max,i=e.step,s=Math.ceil((n-t)/i);return this.getSliderSize(e)/s},e.prototype.bindEventListeners=function(){this.onTrackClick=this.onTrackClick.bind(this),this.onScaleClick=this.onScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.onTrackClick),this.slider.addEventListener("scaleclick",this.onScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var n=this.drag.bind(this,t),i=function(){document.removeEventListener("mousemove",n),t.removeEventListener("touchmove",n),document.removeEventListener("mouseup",i),t.removeEventListener("touchend",i)};document.addEventListener("mousemove",n),t.addEventListener("touchmove",n),document.addEventListener("mouseup",i),t.addEventListener("touchend",i)}},e.prototype.drag=function(e,t){var n=this.state.orientation,i=0;t.preventDefault(),/roller/.test(e.className)&&(i="horizontal"===n?"touchmove"===t.type?this.convertPxToValue(t.touches[0].clientX):this.convertPxToValue(t.clientX):"touchmove"===t.type?this.convertPxToValue(t.touches[0].clientY):this.convertPxToValue(t.clientY),this.updatePosition(i,e))},e.prototype.getTargetType=function(e){var t=this.slider.querySelectorAll(".slider__roller");return t[0]&&t[0].contains(e)?"from":t[1].contains(e)?"to":"undefined"},e.prototype.onScaleClick=function(e){var t=e.detail.value;this.updatePosition(t)},e.prototype.onTrackClick=function(e){var t=this.state.orientation,n=e.target,i=0;if(!/scale/.test(n.className)){i="horizontal"===t?e.clientX:e.clientY;var s=this.convertPxToValue(i);this.updatePosition(s)}},e.prototype.updatePosition=function(e,t){var n=this.state,i=n.from,s=n.to,o=n.type,r=n.step;this.convertValueToColor(e);var a=Math.abs(i-e),l=Math.abs(s-e);"single"===o&&a?this.emitter.emit("newPosition",{from:e}):t?"from"===this.getTargetType(t)?(e>s-r&&(e=i),this.emitter.emit("newPosition",{from:e})):(e<i+r&&(e=s),this.emitter.emit("newPosition",{to:e})):"from"===(a<l?"from":"to")?this.emitter.emit("newPosition",{from:e}):this.emitter.emit("newPosition",{to:e})},e.prototype.convertPxToValue=function(e){var t=this.state,n=t.min,i=t.max,s=t.step,o=t.oneStep,r=t.size,a=t.orientation,l=this.getSliderPosition(),c=0;return(c="horizontal"===a?e-l:l+r-e)>r?i:c<0?n:Math.round(c/o)*s+n},e.prototype.convertValueToColor=function(e){var t=this.state,n=t.color,i=t.gradient,s=this.state,o=s.max,r=s.isColor,a=s.changeColor,l=e/o;if(!0===r){var c=0,u=0;!1===a?(c=Math.round(255*l*255*255),u=Math.round(255*l*254*254)):(c=Math.round(256*l*256*255),u=Math.round(254*l*254*254));var d=Math.abs(u);n="#"+Math.abs(c).toString(16),i="#"+d.toString(16),this.emitter.emit("newPosition",{color:n}),this.emitter.emit("newPosition",{gradient:i})}},e.prototype.getSliderPosition=function(){var e=this.state,t=e.orientation,n=e.slider;return"horizontal"===t?n.getBoundingClientRect().left:n.getBoundingClientRect().top},e.prototype.getSliderSize=function(e){return"horizontal"===e.orientation?this.slider.getBoundingClientRect().width:this.slider.getBoundingClientRect().height},e}();t.View=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=e.orientation,i=document.createElement("div");i.className="slider__roller slider__roller_first slider__roller_"+n;var s=document.createElement("div");s.className="slider__roller_second\n      slider__roller\n      slider__roller_"+n,t.append(i),t.append(s),this.createTooltip(i,s,e),this.moveRollersAtValue(e,i,s),this.toggleRollers(e,s),this.updataColor(e,i,s)},e.prototype.createTooltip=function(e,t,n){var i=n.orientation,s=document.createElement("div");s.className="slider__tooltip_first slider__tooltip slider__tooltip_"+i;var o=document.createElement("div");o.className="slider__tooltip_second slider__tooltip slider__tooltip_"+i,e.append(s),t.append(o),this.updataOutTooltip(s,o,n)},e.prototype.updataOutTooltip=function(e,t,n){var i=n.to,s=n.from,o=n.postfix,r=n.isPostfix,a=n.isLabel;n.isColorOut;!0===n.prettify?!0===a&&(!0===r&&(e.innerHTML=""+s.toLocaleString()+o,t.innerHTML=""+i.toLocaleString()+o),!1===r&&(e.innerHTML=s.toLocaleString(),t.innerHTML=i.toLocaleString())):!0===a&&(!0===r&&(e.innerHTML=""+String(s)+o,t.innerHTML=""+String(i)+o),!1===r&&(e.innerHTML=String(s),t.innerHTML=String(i))),this.setColor(e,t,n)},e.prototype.setColor=function(e,t,n){var i=n.color,s=n.gradient,o=n.isColorOut,r=n.allColors,a=n.isChangeColor,l=n.isLabel,c=r[i],u=r[s];void 0===u&&(u=s),void 0===c&&(c=i),!0===a&&!0===o&&(e.innerHTML=String(c),t.innerHTML=String(u),e.style.backgroundColor=""+i,t.style.backgroundColor=""+s,e.classList.add("slider__tooltip_bg"),t.classList.add("slider__tooltip_bg")),!1===l&&(e.classList.add("slider__tooltip_display-none"),t.classList.add("slider__tooltip_display-none"))},e.prototype.updataColor=function(e,t,n){var i=e.color,s=e.isGradient,o=e.gradient,r=e.isChangeColor,a=e.gradientDeg;!0===r&&(!0===s?(t.style.background="linear-gradient("+a+"deg, "+i+", "+o+")",n.style.background="linear-gradient("+a+"deg, "+i+", "+o+")"):(t.style.background=i,n.style.background=i))},e.prototype.moveRollersAtValue=function(e,t,n){var i=e.to,s=e.from,o=e.orientation,r=this.convertValueToPx(i,e),a=this.convertValueToPx(s,e),l=this.convertPxToProcent(r,e),c=this.convertPxToProcent(a,e);"horizontal"===o?(t.style.left=c+"%",n.style.left=l+"%"):(t.style.bottom=c+"%",n.style.bottom=l+"%")},e.prototype.upData=function(e){var t=e.slider,n=t.querySelector(".slider__roller_first"),i=t.querySelector(".slider__roller_second"),s=t.querySelector(".slider__tooltip_first"),o=t.querySelector(".slider__tooltip_second");this.moveRollersAtValue(e,n,i),this.toggleRollers(e,i),this.updataColor(e,n,i),this.updataOutTooltip(s,o,e)},e.prototype.convertValueToPx=function(e,t){var n=t.min,i=t.max,s=t.step,o=t.size,r=t.oneStep;return e===i?o:Math.round((e-n)/s)*r},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e,t){var n=e.type;t.style.display="single"===n?"none":"block"},e}();t.Rollers=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=e.orientation,i=document.createElement("div");i.className="slider__track slider__track_"+n,t.append(i),this.createOutElement(i,e)},e.prototype.createOutElement=function(e,t){var n=t.orientation,i=document.createElement("div"),s=document.createElement("div");i.className="slider__out slider__out-start slider__out-start_"+n,s.className="slider__out slider__out-end slider__out-end_"+n,e.append(i),e.append(s),this.setStartEndTrackOut(i,s,t)},e.prototype.setStartEndTrackOut=function(e,t,n){var i=n.min,s=n.max,o=n.from,r=n.to,a=n.minMax,l=n.fromTo,c=n.isTrackPostfix,u=n.prettify,d=n.trackPostfix;!1===c&&(d=""),!0===u?(!0===a&&(e.innerHTML=""+i.toLocaleString()+d,t.innerHTML=""+s.toLocaleString()+d),!0===l&&(e.innerHTML=""+o.toLocaleString()+d,t.innerHTML=""+r.toLocaleString()+d)):(!0===a&&(e.innerHTML=""+String(i)+d,t.innerHTML=""+String(s)+d),!0===l&&(e.innerHTML=""+String(o)+d,t.innerHTML=""+String(r)+d))},e.prototype.upData=function(e){var t=e.slider,n=t.querySelector(".slider__out-start"),i=t.querySelector(".slider__out-end");this.setStartEndTrackOut(n,i,e)},e}();t.Track=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=e.orientation,i=document.createElement("div");i.className="slider__scale slider__scale_"+n,t.append(i),this.addEventListeners(i),this.addScaleMarker(e,i),this.checkScale(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(".slider__scale");this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.scalePostfix,n=e.isScalePostfix,i=e.onlyDivisions,s=e.slider,o=e.color;s.querySelectorAll(".slider__scale-value").forEach((function(e){!0===n?e.setAttribute("data-text",""+t):e.setAttribute("data-text",""),!0===i?(e.setAttribute("data-text",""),e.classList.add("slider__scale-value_fs-0")):e.classList.add("slider__scale-value_fs-normal")})),document.documentElement.style.setProperty("--scale-color"," "+o)},e.prototype.checkScale=function(e,t){var n=e.isScale;!1===n&&(t.style.display="none"),!0===n&&(t.style.display="")},e.prototype.addEventListeners=function(e){this.onScaleClick=this.onScaleClick.bind(this),e.addEventListener("click",this.onScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var n=e.min,i=e.max,s=e.step,o=e.size,r=e.oneStep,a=this.getIncrement(e),l=a/s*r,c=document.createDocumentFragment(),u=0,d=n;d<i&&!(u>o-50);d+=a)this.createScaleMarker(c,d,u,e),u+=l;this.createScaleMarker(c,i,o,e),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,n=e.oneStep,i=e.step,s=Math.ceil(t/n);return Math.ceil(s/5)*i},e.prototype.createScaleMarker=function(e,t,n,i){var s=i.orientation,o=document.createElement("span");o.className="slider__scale-value slider__scale-value_"+s,e.append(o),o.innerHTML=t.toString(),this.updataScaleMarker(i);var r=this.convertPxToPercent(n,i);"horizontal"===s?o.style.left=r+"%":o.style.bottom=r+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.onScaleClick=function(e){var t=e.target;if(t instanceof HTMLElement&&t.classList.contains("slider__scale-value")){var n=Number(t.innerHTML),i=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:n}});t.dispatchEvent(i)}},e}();t.Scale=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=e.orientation,i=document.createElement("div");i.className="slider__bar slider__bar_"+n,t.append(i),this.updataColor(e,i),this.updataBar(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(".slider__bar");this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var n=e.color,i=e.isGradient,s=e.gradient,o=e.gradientDeg;!0===e.isChangeColor&&(t.style.background=!0===i?"linear-gradient("+o+"deg, "+n+", "+s+")":n)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(".slider__roller");return[this.calculatePosition(t[0],e),this.calculatePosition(t[1],e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var n="horizontal"===t.orientation?"left":"top",i=Number.parseInt(getComputedStyle(e).width,10);return e.getBoundingClientRect()[n]+i/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var n=e.type,i="horizontal"===e.orientation,s=i?"left":"top",o=i?"width":"height",r=this.getRollerPositions(e),a="single"===n,l=this.getNewSliderPos(e);if(a)if(i){var c=this.convertPxToProcent(Math.abs(r[1]-l),e);t.style[s]="0%",t.style[o]=c+"%"}else{c=100-(u=this.convertPxToProcent(Math.abs(r[1]-l),e));t.style[s]=u+"%",t.style[o]=c+"%"}else{var u=this.convertPxToProcent(Math.abs(r[0]-l),e);c=this.convertPxToProcent(Math.abs(r[1]-r[0]),e);t.style[s]=u+"%",t.style[o]=c+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.orientation,n=e.slider;return"horizontal"===t?n.getBoundingClientRect().left:n.getBoundingClientRect().top},e}();t.Bar=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,n){var i=n(2),s=n(13);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var o={insert:"head",singleton:!1};i(s,o);e.exports=s.locals||{}},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(15);n(17),n(3);var s=$(".js-test-slider");s.colorSlider({isScale:!1,isChangeColor:!1}),s.colorSlider("getValue",(function(e){$(".js-custom-from").val(e.from),$(".js-custom-to").val(e.to)})),$(".js-custom-btn").click((function(){s.colorSlider("change",{color:"red",gradient:"blue",max:1e3,from:200,to:800,onlyDivisions:!0,fromTo:!0})}));var o=[{orientation:"vertical",type:"double",isColorOut:!0,onlyDivisions:!0},{gradient:"red",color:"white",max:15e3,from:5e3,to:1e4,fromTo:!0},{orientation:"vertical",gradient:"blue",color:"yellow",scalePostfix:"$",postfix:"$",min:-5e3,max:-100,step:2,from:-4e3,to:-700,changeColor:!1},{orientation:"horizontal",type:"single",isScale:!1,isLabel:!1,color:"green"}];$(".js-toxin-slider").each((function(e,t){new i.Demo($(t).colorSlider(o[e]).colorSlider("change"))}))},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Demo=void 0;var s=n(16),o=function(){function e(e){this.slider=e,this.state=e.getOptions(),this.demoTools=this.createTools(),this.init()}return e.prototype.upData=function(e){this.state=i(i({},this.state),e),this.initTools()},e.prototype.init=function(){this.createSettings(),this.initTools(),this.upData=this.upData.bind(this),this.slider.emitter.subscribe("newData",this.upData)},e.prototype.createTools=function(){var e=document.createElement("div");return e.className="demoTools",e},e.prototype.createSettings=function(){this.slider.element.after(this.demoTools),this.demoTools.insertAdjacentHTML("beforeend",s.demoTemplate)},e.prototype.initTools=function(){var e=this,t=this.state,n=t.orientation,i=t.isScale,s=t.type,o=t.isLabel,r=t.from,a=t.to,l=t.min,c=t.max,u=t.postfix,d=t.step,f=t.color,p=t.isScalePostfix,h=t.scalePostfix,b=t.minMax,m=t.fromTo,v=t.isTrackPostfix,g=t.trackPostfix,y=t.isColor,j=t.gradient,S=t.isColorOut,_=t.changeColor,x=t.isGradient,k=t.gradientDeg,T=t.onlyDivisions,P=t.isPostfix,C=t.isChangeColor,w=t.prettify,M=this.demoTools.querySelector(".js-btn-scale"),L=this.demoTools.querySelector(".js-btn-view"),O=this.demoTools.querySelector(".js-btn-prefix"),E=this.demoTools.querySelector(".js-btn-color"),q=this.demoTools.querySelector(".js-menu-scale"),D=this.demoTools.querySelector(".js-menu-view"),N=this.demoTools.querySelector(".js-menu-prefix"),z=this.demoTools.querySelector(".js-color-setting"),V=this.demoTools.querySelector(".js-orientation"),H=this.demoTools.querySelector(".js-isScale"),R=this.demoTools.querySelector(".js-isColorOut"),B=this.demoTools.querySelector(".js-isLabel"),A=this.demoTools.querySelector(".js-isDouble"),$=this.demoTools.querySelector(".js-from"),F=this.demoTools.querySelector(".js-to"),G=this.demoTools.querySelector(".js-min"),I=this.demoTools.querySelector(".js-max"),X=this.demoTools.querySelector(".js-marker"),Y=this.demoTools.querySelector(".js-step"),U=this.demoTools.querySelector(".js-color"),J=this.demoTools.querySelector(".js-isPrefix"),Q=this.demoTools.querySelector(".js-prettify"),K=this.demoTools.querySelector(".js-scale-prefix"),W=this.demoTools.querySelector(".js-isChangeColor"),Z=this.demoTools.querySelector(".js-minMax"),ee=this.demoTools.querySelector(".js-fromTo"),te=this.demoTools.querySelector(".js-division"),ne=this.demoTools.querySelector(".js-isTrackPrefix"),ie=this.demoTools.querySelector(".js-isPrefixTool"),se=this.demoTools.querySelector(".js-track-prefix"),oe=this.demoTools.querySelector(".js-isColor"),re=this.demoTools.querySelector(".js-changeColor"),ae=this.demoTools.querySelector(".js-gradient"),le=this.demoTools.querySelector(".js-gradient-out"),ce=this.demoTools.querySelector(".js-gradient-deg");L.onclick=function(){D.classList.toggle("js-close-menu")},M.onclick=function(){q.classList.toggle("js-close-menu")},E.onclick=function(){z.classList.toggle("js-close-menu")},O.onclick=function(){N.classList.toggle("js-close-menu")},V.onchange=function(){"horizontal"===n&&e.setState({orientation:"vertical"}),"vertical"===n&&e.setState({orientation:"horizontal"})},J.onchange=function(){!0===p&&e.setState({isScalePostfix:!1}),!1===p&&e.setState({isScalePostfix:!0})},ie.onchange=function(){!0===P&&e.setState({isPostfix:!1}),!1===P&&e.setState({isPostfix:!0})},ae.onchange=function(){!0===x&&e.setState({isGradient:!1}),!1===x&&e.setState({isGradient:!0})},W.onchange=function(){!0===C&&e.setState({isChangeColor:!1}),!1===C&&e.setState({isChangeColor:!0})},R.onchange=function(){!0===S&&e.setState({isColorOut:!1}),!1===S&&e.setState({isColorOut:!0})},Q.onchange=function(){!0===w&&e.setState({prettify:!1}),!1===w&&e.setState({prettify:!0})},H.onchange=function(){!1===i?e.setState({isScale:!0}):e.setState({isScale:!1})},B.onchange=function(){!0===o&&e.setState({isLabel:!1}),!1===o&&e.setState({isLabel:!0})},A.onchange=function(){"single"===s?e.setState({type:"double"}):e.setState({type:"single"})},Z.onchange=function(){!1===b?e.setState({minMax:!0}):e.setState({minMax:!1})},ee.onchange=function(){!1===m?e.setState({fromTo:!0}):e.setState({fromTo:!1})},te.onchange=function(){!1===T?e.setState({onlyDivisions:!0}):e.setState({onlyDivisions:!1})},ne.onchange=function(){!1===v?e.setState({isTrackPostfix:!0}):e.setState({isTrackPostfix:!1})},oe.onchange=function(){!0===y?e.setState({isColor:!1}):e.setState({isColor:!0})},re.onchange=function(){!0===_?e.setState({changeColor:!1}):e.setState({changeColor:!0})},X.value=u,X.onchange=function(){var t=X.value;e.setState({postfix:t})},$.value=String(r),$.onchange=function(){var t=Number($.value);e.setState({from:t})},F.value=String(a),F.onchange=function(){var t=Number(F.value);e.setState({to:t})},G.value=String(l),G.onchange=function(){var t=Number(G.value);e.setState({min:t})},I.value=String(c),I.onchange=function(){var t=Number(I.value);e.setState({max:t})},Y.value=String(d),Y.onchange=function(){var t=Number(Y.value);e.setState({step:t})},U.value=String(f),U.onchange=function(){var t=U.value;e.setState({color:t})},le.value=String(j),le.onchange=function(){var t=le.value;e.setState({gradient:t})},ce.value=String(k),ce.onchange=function(){var t=Number(ce.value);e.setState({gradientDeg:t})},K.value=h,K.onchange=function(){var t=K.value;e.setState({scalePostfix:t})},se.value=g,se.onchange=function(){var t=se.value;e.setState({trackPostfix:t})}},e.prototype.setState=function(e){this.state=i(i({},this.state),e),this.slider.setOptions(this.state),this.slider.upDataView()},e}();t.Demo=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.demoTemplate=void 0;t.demoTemplate='\n\n\n  <h4  class="js-title">Панель управления</h4>\n  <div class="js-items">\n   <label class="js-labels js-label_checkbox">V/H Вид\n   <input type="checkbox" class="js-checkbox js-inputs js-orientation" name="orientation" />\n   </label>\n   </div>\n     <div class="js-items">\n   <label class="js-labels js-label_checkbox">Range/Single\n   <input type="checkbox" class="js-checkbox js-inputs js-isDouble" name="double"/>\n   </label>\n   </div>\n   \n   <button class="js-btn js-btn-view">Настройки отображения</button>\n   <div class="js-menu js-menu-view">\n\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть Tooltip\n   <input type="checkbox" class="js-checkbox js-inputs js-isLabel" name="label"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Доб./Убр. отступ для больших чисел\n   <input type="checkbox" class="js-checkbox js-inputs js-prettify" name="label"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать min/max\n   <input type="checkbox" class="js-checkbox js-inputs js-minMax" name="minMax"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать from/to\n   <input type="checkbox" class="js-checkbox js-inputs js-fromTo" name="fromTo"/>\n   </label>\n   </div>\n\n    <div class="js-items">\n   <label class="js-labels js-label_checkbox">Выводить цвета/значения\n   <input type="checkbox" class="js-checkbox js-inputs js-isColorOut" name="color"/>\n   </label>\n   </div>\n  \n   \n   \n   <button type="button" class="js-btn js-btn-scale">Управление шкалой</button>\n   <div class="js-menu js-menu-scale">\n       <div class="js-items">\n   <label class="js-labels js-label_checkbox">Оставить только деления\n   <input type="checkbox" class="js-checkbox js-inputs js-division" name="division"/>\n   </label>\n   </div>\n      <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть Шкалу\n   <input type="checkbox" class="js-checkbox js-inputs js-isScale" name="scale"/>\n   </label>\n     </div>\n   </div>\n   \n   \n   </div>\n    <div class="js-items">\n   <label class="js-labels">Max\n   <input type="number" class="js-inputs js-max" name="max"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">To\n   <input type="number" class="js-inputs js-to" name="to"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">From\n   <input type="number" class="js-inputs js-from" name="from" />\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Min\n   <input type="number" class="js-inputs js-min" name="min"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Шаг\n   <input type="number" class="js-inputs js-step" name="step"/>\n   </label>\n   </div>\n   \n   \n   <button class="js-btn js-btn-color" type="button">Настройки цвета</button>\n   <div class="js-menu js-color-setting">\n     <div class="js-items">\n   <label class="js-labels js-label_checkbox">Откл/Вкл изменение цвета\n   <input type="checkbox" class="js-checkbox js-inputs js-isColor" name="isColor"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Использовать только css/переменной цвет\n   <input type="checkbox" class="js-checkbox js-inputs js-isChangeColor" name="isColor"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Сменить оттенок\n   <input type="checkbox" class="js-checkbox js-inputs js-changeColor" name="isColor"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Градиент вкл/откл\n   <input type="checkbox" class="js-checkbox js-inputs js-gradient" name="isColor"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Цвет\n<input type="text" class="js-inputs js-color" name="color"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Градиент\n<input type="text" class="js-inputs js-gradient-out" name="gradient"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Угол градиента\n<input type="number" class="js-inputs js-gradient-deg" name="gradient"/>\n   </label>\n   </div>\n   </div>\n   \n   \n   <button type="button" class="js-btn js-btn-prefix">Настройки Postfix</button>\n   <div class="js-menu js-menu-prefix">\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть постфикс tooltip\n   <input type="checkbox" class="js-checkbox js-inputs js-isPrefixTool" name="isPrefix"/>\n   </label>\n   </div>\n      <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть постфикс шкалы\n   <input type="checkbox" class="js-checkbox js-inputs js-isPrefix" name="isPrefix"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть постфикс track\n   <input type="checkbox" class="js-checkbox js-inputs js-isTrackPrefix" name="isPrefix"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Постфикс tooltip\n   <input type="text" class="js-inputs js-marker" name="marker"/>\n   </label>\n   </div>\n      <div class="js-items">\n   <label class="js-labels">Постфикс шкалы\n<input type="text" class="js-inputs js-scale-prefix" name="js-prefix"/>\n   </label>\n   </div>\n    <div class="js-items">\n   <label class="js-labels">Постфикс track\n<input type="text" class="js-inputs js-track-prefix" name="js-prefix"/>\n   </label>\n   </div>\n   </div>\n  \n  '},function(e,t,n){var i=n(2),s=n(18);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var o={insert:"head",singleton:!1};i(s,o);e.exports=s.locals||{}},function(e,t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,