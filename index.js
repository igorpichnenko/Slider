!function(e){var t={};function s(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(i,n,function(t){return e[t]}.bind(null,n));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=17)}([function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.classNames=void 0;t.classNames={slider:"slider",sliderVertical:"slider slider_orientation-vertical",trackOutStart:"slider__out slider__out-start js-slider__out js-slider__out-start",trackOutEnd:"slider__out slider__out-end js-slider__out js-slider__out-end",findTrackOut:".js-slider__out",track:"slider__track js-slider__track",findTrack:".js-slider__track",scale:"slider__scale js-slider__scale ",findScale:".js-slider__scale",scaleFsZero:"slider__scale-value_not-visible",bar:"slider__bar js-slider__bar",findBar:".js-slider__bar",rollerFirst:"slider__roller js-slider__roller slider__roller_first js-slider__roller_first",rollerSecond:"slider__roller_second js-slider__roller js-slider__roller_second slider__roller",findRollers:".js-slider__roller",firstTooltip:"slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip",secondTooltip:"slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip",findFirstTooltip:".js-slider__tooltip_first",findSecondTooltip:".js-slider__tooltip_second",findTooltip:".js-slider__tooltip",tooltipWhite:"slider__tooltip_white",notVisible:"slider__element_not-visible",scaleMarker:"slider__scale-value  js-slider__scale-value",findScaleValue:".js-slider__scale-value",isScaleValue:"slider__scale-value",divisionValue:"slider__division-value js-slider__division-value slider__element-",isScaleDivison:"slider__division-value",division:"slider__division js-slider__division"}},function(e,t,s){"use strict";var i,n;Object.defineProperty(t,"__esModule",{value:!0}),t.Events=t.Direction=void 0,function(e){e[e.FORWARD=0]="FORWARD",e[e.BACKWARD=1]="BACKWARD",e[e.TARGET_FORWARD=2]="TARGET_FORWARD",e[e.TARGET_BACKWARD=3]="TARGET_BACKWARD"}(i||(i={})),t.Direction=i,function(e){e[e.NEW_DATA=0]="NEW_DATA",e[e.NEW_POSITION=1]="NEW_POSITION"}(n||(n={})),t.Events=n},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var i=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var s=this.events[e];s&&s.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var s=t.isSeparate,i=t.separate,n="";if(!1===s)n=e.toString();else{var a="."===i,o=" "===i;","===i&&(i="en-US"),a&&(i="de-DE"),o&&(i=void 0),n=e.toLocaleString(i)}return n}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var i={min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:s(14).allColors,isVertical:!1,isDouble:!1};t.standardOptions=i},function(e,t,s){"use strict";var i,n=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},a=function(){var e={};return function(t){if(void 0===e[t]){var s=document.querySelector(t);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(e){s=null}e[t]=s}return e[t]}}(),o=[];function r(e){for(var t=-1,s=0;s<o.length;s++)if(o[s].identifier===e){t=s;break}return t}function l(e,t){for(var s={},i=[],n=0;n<e.length;n++){var a=e[n],l=t.base?a[0]+t.base:a[0],c=s[l]||0,u="".concat(l," ").concat(c);s[l]=c+1;var d=r(u),p={css:a[1],media:a[2],sourceMap:a[3]};-1!==d?(o[d].references++,o[d].updater(p)):o.push({identifier:u,updater:v(p,t),references:1}),i.push(u)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var n=s.nc;n&&(i.nonce=n)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var o=a(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function p(e,t,s,i){var n=s?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=d(t,n);else{var a=document.createTextNode(n),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function f(e,t,s){var i=s.css,n=s.media,a=s.sourceMap;if(n?e.setAttribute("media",n):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h=null,m=0;function v(e,t){var s,i,n;if(t.singleton){var a=m++;s=h||(h=c(t)),i=p.bind(null,s,a,!1),n=p.bind(null,s,a,!0)}else s=c(t),i=f.bind(null,s,t),n=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(s)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else n()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=n());var s=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<s.length;i++){var n=r(s[i]);o[n].references--}for(var a=l(e,t),c=0;c<s.length;c++){var u=r(s[c]);0===o[u].references&&(o[u].updater(),o.splice(u,1))}s=a}}}},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__spreadArrays||function(){for(var e=0,t=0,s=arguments.length;t<s;t++)e+=arguments[t].length;var i=Array(e),n=0;for(t=0;t<s;t++)for(var a=arguments[t],o=0,r=a.length;o<r;o++,n++)i[n]=a[o];return i};Object.defineProperty(t,"__esModule",{value:!0});var a=s(7),o=s(1),r=s(4);s(15),function(e){e.fn.colorSlider=function(e){for(var t,s=[],l=1;l<arguments.length;l++)s[l-1]=arguments[l];var c={init:function(e,t){var s=i(i({},r.standardOptions),t);return e.data("presenter",new a.Presenter(s,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe(o.Events.NEW_DATA,t),void 0===t||e.data("presenter").emitter.subscribe(o.Events.NEW_DATA,t),this}},u="object"==typeof e||!e;return"string"==typeof e?(t=c[e]).call.apply(t,n([this,this],s)):u?c.init(this,e):void 0}}(jQuery)},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var n=s(8),a=s(9),o=s(1),r=s(2),l=s(4),c=function(){function e(e,t){this.element=t,this.emitter=new r.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=i(i({},l.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new n.Model(e)},e.prototype.createView=function(e,t){return new a.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe(o.Events.NEW_DATA,this.getNewData),this.view.emitter.subscribe(o.Events.NEW_POSITION,this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit(o.Events.NEW_DATA,e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,s=i(i({},t),e);this.model.setData(s)},e}();t.Presenter=c},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var n=s(1),a=s(2),o=function(){function e(e){this.emitter=new a.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),s=this.validateMinMaxStep(e);this.state=i(i(i({},e),t),s),this.emitter.emit(n.Events.NEW_DATA,this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,s=e.max,i=e.step;i<=0&&(e.step=.1);var n=t>=s&&s>0||s<0&&s<t;return s<=t&&s<0&&(e.min=t-i),n&&(e.min=t,e.max=t+i),e},e.prototype.validateFromTo=function(e){var t=e.from,s=e.to,i=e.max,n=e.min,a=e.step,o=e.isDouble;o&&(e.to=i);var r=i<0&&0===n,l=!o&&t>=s,c=t>0&&(n<0&&i<0);return t>i&&(e.from=i-a),t<n&&(e.from=n),s>i&&(e.to=i),r&&(e.from=n,e.to=n),l&&(e.from=s-a),c&&(e.from=n),s<=n&&(e.to=n+a,e.from=n),i<n&&(e.to=n+a),e},e}();t.Model=o},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var n=s(2),a=s(10),o=s(11),r=s(12),l=s(13),c=s(1),u=s(0),d=function(){function e(e,t){this.emitter=new n.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),s=this.getOneStep(e),n=this.slider;return i(i({},e),{size:t,oneStep:s,slider:n})},e.prototype.createSlider=function(e,t){var s=e.isVertical,i=document.createElement("div");return i.className=u.classNames.slider,s&&(i.className=u.classNames.sliderVertical),t.append(i),i},e.prototype.createTrack=function(e){return new o.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new a.Rollers(e)},e.prototype.createScale=function(e){return new r.Scale(e)},e.prototype.upData=function(e){var t=i(i({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.setOut(t),this.state=i({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,s=e.max,i=e.step,n=Math.ceil((s-t)/i);return this.getSliderSize(e)/n},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var s=this.drag.bind(this,t),i=function(){document.removeEventListener("mousemove",s),t.removeEventListener("touchmove",s),document.removeEventListener("mouseup",i),t.removeEventListener("touchend",i)};document.addEventListener("mousemove",s),t.addEventListener("touchmove",s),document.addEventListener("mouseup",i),t.addEventListener("touchend",i)}},e.prototype.drag=function(e,t){var s=this.state.isVertical;t.preventDefault();var i=0;if(!!/tooltip || roller/.test(e.className)){var n="touchmove"===t.type&&!s,a="mousemove"===t.type&&!s,o="touchmove"===t.type&&s,r="mousemove"===t.type&&s;n&&(i=this.convertPxToValue(t.touches[0].clientX)),a&&(i=this.convertPxToValue(t.clientX)),o&&(i=this.convertPxToValue(t.touches[0].clientY)),r&&(i=this.convertPxToValue(t.clientY)),this.updatePosition(i,e)}},e.prototype.getTargetType=function(e){var t=c.Direction.TARGET_FORWARD,s=c.Direction.TARGET_BACKWARD,i=this.slider.querySelectorAll(u.classNames.findRollers),n=[i[0],i[1]],a=n[1];return n[0].contains(e)?t:a.contains(e)?s:"undefined"},e.prototype.handleScaleClick=function(e){var t,s=this.state.scalePostfix,i=this.state.separate;" "===i&&(i="&nbsp;"),t=e.detail.value.split(s).join("").split(i).join("");var n=String(t).split(",").join(".");this.updatePosition(Number(n))},e.prototype.handleTrackClick=function(e){var t=this.state.isVertical,s=e.target,i=0;if(!/scale/.test(s.className)){i=t?e.clientY:e.clientX;var n=this.convertPxToValue(i);this.updatePosition(n)}},e.prototype.updatePosition=function(e,t){var s=this.state,i=s.from,n=s.to,a=s.step,o=s.isDouble,r=c.Direction.FORWARD,l=c.Direction.BACKWARD,u=c.Direction.TARGET_FORWARD,d=c.Direction.TARGET_BACKWARD,p=c.Events.NEW_POSITION,f=Math.abs(i-e),h=Math.abs(n-e);if(o&&f)return this.emitter.emit(p,{from:e}),void this.convertValueToColor(e);var m=f<h?r:l,v=!t&&m===l;!t&&m===r&&(this.emitter.emit(p,{from:e}),this.convertValueToColor(e)),v&&(this.emitter.emit(p,{to:e}),this.convertValueToColor(e));var _=t&&this.getTargetType(t),b=_===u&&!o,g=_===d&&!o,y=g&&e<i+a;b&&e>n-a?this.emitter.emit(p,{from:n-a}):(b&&(this.emitter.emit(p,{from:e}),this.convertValueToColor(e)),y?this.emitter.emit(p,{to:i+a}):g&&(this.emitter.emit(p,{to:e}),this.convertValueToColor(e)))},e.prototype.convertPxToValue=function(e){var t=this.state,s=t.min,i=t.max,n=t.step,a=t.oneStep,o=t.size,r=t.isVertical,l=this.getSliderPosition(),c=0;return(c=r?l+o-e:e-l)>o?i:c<0?s:Math.round(c/a)*n+s},e.prototype.convertValueToColor=function(e){var t=this.state,s=t.color,i=t.gradient,n=this.state,a=n.max,o=n.isColor,r=n.changeColor,l=e/a,u=o&&r,d=0,p=0;o&&!r&&(d=Math.round(255*l*255*255),p=Math.round(255*l*254*254)),u&&(d=Math.round(256*l*256*255),p=Math.round(254*l*254*254));var f=Math.abs(p);s="#"+Math.abs(d).toString(16),i="#"+f.toString(16);var h=c.Events.NEW_POSITION;this.emitter.emit(h,{color:s}),this.emitter.emit(h,{gradient:i})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e.prototype.getSliderSize=function(e){return e.isVertical?this.slider.getBoundingClientRect().height:this.slider.getBoundingClientRect().width},e}();t.View=d},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var i=s(3),n=s(0),a=function(){function e(e){this.rollers=this.create(e),this.tooltips=this.createTooltip(),this.moveRollersAtValue(e),this.toggleRollers(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=n.classNames.rollerFirst;var i=document.createElement("div");return i.className=n.classNames.rollerSecond,t.append(s),t.append(i),[s,i]},e.prototype.createTooltip=function(){var e=document.createElement("div");e.className=n.classNames.firstTooltip;var t=document.createElement("div");t.className=n.classNames.secondTooltip;var s=this.rollers,i=s[0],a=s[1];return i.append(e),a.append(t),[e,t]},e.prototype.updataOutTooltip=function(e){var t=e.to,s=e.from,n=e.isPostfix,a=e.isLabel,o=e.isPrefix,r=e.postfix,l=this.tooltips,c=l[0],u=l[1];n||(r="");var d=a&&o;a&&!o&&(c.innerHTML=""+i.correctSeparate(s,e)+r,u.innerHTML=""+i.correctSeparate(t,e)+r),d&&(c.innerHTML=""+r+i.correctSeparate(s,e),u.innerHTML=""+r+i.correctSeparate(t,e)),this.setColor(e)},e.prototype.setColor=function(e){var t=e.color,s=e.gradient,i=e.isColorOut,a=e.allColors,o=e.isChangeColor,r=e.isLabel,l=a[t],c=a[s];c||(c=s),l||(l=t);var u=this.tooltips,d=u[0],p=u[1];o&&i&&(d.innerHTML=String(l),p.innerHTML=String(c),d.style.backgroundColor=""+t,p.style.backgroundColor=""+s,d.classList.add(n.classNames.tooltipWhite),p.classList.add(n.classNames.tooltipWhite)),r||(d.classList.add(n.classNames.notVisible),p.classList.add(n.classNames.notVisible))},e.prototype.updataColor=function(e){var t=e.color,s=e.isGradient,i=e.gradient,n=e.isChangeColor,a=e.gradientDeg,o=this.rollers,r=o[0],l=o[1],c=n&&!s;n&&s&&(r.style.background="linear-gradient("+a+"deg, "+t+", "+i+")",l.style.background="linear-gradient("+a+"deg, "+t+", "+i+")"),c&&(r.style.background=t,l.style.background=t)},e.prototype.moveRollersAtValue=function(e){var t=e.to,s=e.from,i=e.isVertical,n=this.rollers,a=n[0],o=n[1],r=this.convertValueToPx(t,e),l=this.convertValueToPx(s,e),c=this.convertPxToProcent(r,e),u=this.convertPxToProcent(l,e);i?(a.style.bottom=u+"%",o.style.bottom=c+"%"):(a.style.left=u+"%",o.style.left=c+"%"),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.upData=function(e){this.moveRollersAtValue(e),this.toggleRollers(e),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.convertValueToPx=function(e,t){var s=t.min,i=t.max,n=t.step,a=t.size,o=t.oneStep;return e===i?a:Math.round((e-s)/n)*o},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e){var t=e.isDouble,s=this.rollers,i=s[0],a=s[1];t&&i?a.classList.add(n.classNames.notVisible):a.classList.remove(n.classNames.notVisible)},e}();t.Rollers=a},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var i=s(3),n=s(0),a=function(){function e(e){this.track=this.create(e),this.outElements=this.createOutElements(),this.setOut(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");return s.className=n.classNames.track,t.append(s),s},e.prototype.createOutElements=function(){var e=document.createElement("div"),t=document.createElement("div");return e.className=n.classNames.trackOutStart,t.className=n.classNames.trackOutEnd,this.track.append(e),this.track.append(t),[e,t]},e.prototype.setOut=function(e){var t=e.min,s=e.max,n=e.from,a=e.to,o=e.minMax,r=e.fromTo,l=e.isTrackPostfix,c=e.isPrefix,u=e.trackPostfix;l||(u="");var d=this.outElements,p=d[0],f=d[1];o&&(p.innerHTML=""+i.correctSeparate(t,e)+u,f.innerHTML=""+i.correctSeparate(s,e)+u),r&&(p.innerHTML=""+i.correctSeparate(n,e)+u,f.innerHTML=""+i.correctSeparate(a,e)+u);var h=r&&c;o&&c&&(p.innerHTML=""+u+i.correctSeparate(t,e),f.innerHTML=""+u+i.correctSeparate(s,e)),h&&(p.innerHTML=""+u+i.correctSeparate(n,e),f.innerHTML=""+u+i.correctSeparate(a,e))},e}();t.Track=a},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var n=s(3),a=s(0),o=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=a.classNames.scale,t.append(s),this.addEventListeners(s),this.addScaleMarker(e,s),this.checkScale(e,s)},e.prototype.upData=function(e){var t=e.slider.querySelector(a.classNames.findScale);this.options=i(i({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,s=e.slider,i=e.color;s.querySelectorAll(a.classNames.findScaleValue).forEach((function(e){t&&e.classList.add(a.classNames.scaleFsZero)})),document.documentElement.style.setProperty("--scale-color"," "+i)},e.prototype.checkScale=function(e,t){var s=e.isScale;s||t.classList.add(a.classNames.notVisible),s&&t.classList.remove(a.classNames.notVisible)},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var s=e.min,i=e.max,n=e.step,a=e.size,o=e.oneStep,r=this.getIncrement(e),l=r/n*o,c=document.createDocumentFragment(),u=0,d=0,p=s;p<i&&!(u>a-50);p+=r,d+=1){var f={fragment:c,value:p,position:u,options:e,val:d};this.createScaleMarker(f),u+=l}var h={fragment:c,value:i,position:a,options:e,val:5};this.createScaleMarker(h),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,s=e.oneStep,i=e.step,n=Math.ceil(t/s);return Math.ceil(n/5)*i},e.prototype.createScaleMarker=function(e){var t=e.fragment,s=e.value,i=e.position,o=e.options,r=e.val,l=o.isScalePostfix,c=o.isPrefix,u=o.onlyDivisions,d=o.isVertical,p=o.scalePostfix,f=document.createElement("span");f.className=a.classNames.scaleMarker;var h=document.createElement("span"),m=document.createElement("span");h.className=""+a.classNames.divisionValue+r,m.className=a.classNames.division,f.append(h),f.append(m),t.append(f);var v=h;u||(v=f),l||(p=""),v.innerHTML=""+n.correctSeparate(s,o)+p,c&&(v.innerHTML=""+p+n.correctSeparate(s,o)),this.updataScaleMarker(o);var _=this.convertPxToPercent(i,o);d?f.style.bottom=_+"%":f.style.left=_+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,s=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var i=!t.classList.contains(a.classNames.isScaleDivison)&&s,n=!t.classList.contains(a.classNames.isScaleValue)&&!s;if(!i&&!n){var o=t.innerHTML,r=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:o}});t.dispatchEvent(r)}}},e}();t.Scale=o},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var i=s(0),n=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=i.classNames.bar,t.append(s),this.updataColor(e,s),this.updataBar(e,s)},e.prototype.upData=function(e){var t=e.slider.querySelector(i.classNames.findBar);this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var s=e.color,i=e.isGradient,n=e.gradient,a=e.gradientDeg,o=e.isChangeColor,r=o&&!i;o&&i&&(t.style.background="linear-gradient("+a+"deg, "+s+", "+n+")"),r&&(t.style.background=s)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(i.classNames.findRollers),s=[t[0],t[1]],n=s[0],a=s[1];return[this.calculatePosition(n,e),this.calculatePosition(a,e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var s=t.isVertical,i=Number.parseInt(getComputedStyle(e).width,10);return s?e.getBoundingClientRect().top+i/2:e.getBoundingClientRect().left+i/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var s=e.isVertical,i=e.isDouble,n=s?"top":"left",a=s?"height":"width",o=this.getRollerPositions(e),r=this.getNewSliderPos(e);if(i&&!s){var l=this.convertPxToProcent(Math.abs(o[1]-r),e);t.style[n]="0%",t.style[a]=l+"%"}else{l=100-(c=this.convertPxToProcent(Math.abs(o[1]-r),e));t.style[n]=c+"%",t.style[a]=l+"%"}if(!i){var c=this.convertPxToProcent(Math.abs(o[0]-r),e);l=this.convertPxToProcent(Math.abs(o[1]-o[0]),e);t.style[n]=c+"%",t.style[a]=l+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e}();t.Bar=n},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,s){var i=s(5),n=s(16);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[e.i,n,""]]);var a={insert:"head",singleton:!1};i(n,a);e.exports=n.locals||{}},function(e,t,s){},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=s(18);s(20),s(6);var n=$(".js-test");n.colorSlider({isScale:!1,isChangeColor:!1}),n.colorSlider("getValue",(function(e){$(".js-custom-from").val(e.from),$(".js-custom-to").val(e.to)})),$(".js-custom-btn").click((function(){n.colorSlider("change",{color:"red",gradient:"blue",max:1e3,from:200,to:800,onlyDivisions:!0,fromTo:!0})}));var a=[{isVertical:!0,isDouble:!1,isColorOut:!0,isScale:!1},{gradient:"red",color:"#6698db",max:15e3,from:5e3,to:1e4,fromTo:!0,separate:".",onlyDivisions:!1},{isVertical:!0,gradient:"blue",color:"yellow",postfix:"",scalePostfix:"",min:-5e3,max:-100,step:2,from:-4e3,to:-700,changeColor:!1,separate:",",onlyDivisions:!1},{isGradient:!1,color:"black",max:1500,from:500,to:1e3,fromTo:!0,separate:" ",postfix:"$",scalePostfix:"$",trackPostfix:"$",isPrefix:!0,isColor:!1,onlyDivisions:!0},{isScale:!1,isLabel:!1,color:"green",isDouble:!0},{gradient:"black",color:"#900202",max:1500.5,from:500.2,to:1000.3,step:3.7,min:-100.2,separate:".",postfix:"€",scalePostfix:"€",trackPostfix:"€",isColor:!1,onlyDivisions:!1}];$(".js-slider").each((function(e,t){new i.Demo($(t).colorSlider(a[e]).colorSlider("change"))}))},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Demo=void 0;var n=s(1),a=s(19),o=function(){function e(e){this.slider=e,this.state=e.getOptions(),this.demoTools=this.createTools(),this.init()}return e.prototype.upData=function(e){this.state=i(i({},this.state),e),this.initTools()},e.prototype.init=function(){this.createSettings(),this.initTools(),this.upData=this.upData.bind(this),this.slider.emitter.subscribe(n.Events.NEW_DATA,this.upData)},e.prototype.createTools=function(){var e=document.createElement("div");return e.className="panel__tools",e},e.prototype.createSettings=function(){this.slider.element.after(this.demoTools),this.demoTools.insertAdjacentHTML("beforeend",a.demoTemplate)},e.prototype.initTools=function(){var e=this,t=this.state,s=t.isScale,i=t.isLabel,n=t.from,a=t.to,o=t.min,r=t.max,l=t.postfix,c=t.step,u=t.color,d=t.isScalePostfix,p=t.scalePostfix,f=t.minMax,h=t.fromTo,m=t.isTrackPostfix,v=t.trackPostfix,_=t.isColor,b=t.gradient,g=t.isColorOut,y=t.changeColor,S=t.isGradient,x=t.gradientDeg,T=t.onlyDivisions,k=t.isPostfix,j=t.isChangeColor,P=t.separate,C=t.isSeparate,D=t.isPrefix,M=t.isVertical,E=t.isDouble,O=this.demoTools.querySelector(".js-btn-scale"),N=this.demoTools.querySelector(".js-btn-view"),w=this.demoTools.querySelector(".js-btn-postfix"),L=this.demoTools.querySelector(".js-btn-color"),V=this.demoTools.querySelector(".js-menu-scale"),A=this.demoTools.querySelector(".js-menu-view"),R=this.demoTools.querySelector(".js-menu-postfix"),q=this.demoTools.querySelector(".js-color-setting"),W=this.demoTools.querySelector(".js-orientation"),B=this.demoTools.querySelector(".js-isScale"),H=this.demoTools.querySelector(".js-isColorOut"),F=this.demoTools.querySelector(".js-isLabel"),I=this.demoTools.querySelector(".js-isDouble"),G=this.demoTools.querySelector(".js-from"),z=this.demoTools.querySelector(".js-to"),$=this.demoTools.querySelector(".js-min"),K=this.demoTools.querySelector(".js-max"),U=this.demoTools.querySelector(".js-marker"),X=this.demoTools.querySelector(".js-step"),Y=this.demoTools.querySelector(".js-separate"),Z=this.demoTools.querySelector(".js-color"),J=this.demoTools.querySelector(".js-isPostfix"),Q=this.demoTools.querySelector(".js-isPrefix-all"),ee=this.demoTools.querySelector(".js-scale-postfix"),te=this.demoTools.querySelector(".js-isChangeColor"),se=this.demoTools.querySelector(".js-minMax"),ie=this.demoTools.querySelector(".js-isScaleDel"),ne=this.demoTools.querySelector(".js-fromTo"),ae=this.demoTools.querySelector(".js-division"),oe=this.demoTools.querySelector(".js-isTrackPostfix"),re=this.demoTools.querySelector(".js-isPostfixTool"),le=this.demoTools.querySelector(".js-track-postfix"),ce=this.demoTools.querySelector(".js-isColor"),ue=this.demoTools.querySelector(".js-changeColor"),de=this.demoTools.querySelector(".js-gradient"),pe=this.demoTools.querySelector(".js-gradient-out"),fe=this.demoTools.querySelector(".js-gradient-deg");N.onclick=function(){A.classList.toggle("panel_is-visible")},O.onclick=function(){V.classList.toggle("panel_is-visible")},L.onclick=function(){q.classList.toggle("panel_is-visible")},w.onclick=function(){R.classList.toggle("panel_is-visible")},W.onchange=function(){M||e.setState({isVertical:!0}),M&&e.setState({isVertical:!1})},J.onchange=function(){d&&e.setState({isScalePostfix:!1}),d||e.setState({isScalePostfix:!0})},re.onchange=function(){k&&e.setState({isPostfix:!1}),k||e.setState({isPostfix:!0})},Q.onchange=function(){D&&e.setState({isPrefix:!1}),D||e.setState({isPrefix:!0})},de.onchange=function(){S&&e.setState({isGradient:!1}),S||e.setState({isGradient:!0})},te.onchange=function(){j&&e.setState({isChangeColor:!1}),j||e.setState({isChangeColor:!0})},ie.onchange=function(){C&&e.setState({isSeparate:!1}),C||e.setState({isSeparate:!0})},H.onchange=function(){g&&e.setState({isColorOut:!1}),g||e.setState({isColorOut:!0})},B.onchange=function(){s?e.setState({isScale:!1}):e.setState({isScale:!0})},F.onchange=function(){i&&e.setState({isLabel:!1}),i||e.setState({isLabel:!0})},I.onchange=function(){E||e.setState({isDouble:!0}),E&&e.setState({isDouble:!1})},se.onchange=function(){f?e.setState({minMax:!1}):e.setState({minMax:!0})},ne.onchange=function(){h?e.setState({fromTo:!1}):e.setState({fromTo:!0})},ae.onchange=function(){T?e.setState({onlyDivisions:!1}):e.setState({onlyDivisions:!0})},oe.onchange=function(){m?e.setState({isTrackPostfix:!1}):e.setState({isTrackPostfix:!0})},ce.onchange=function(){_?e.setState({isColor:!1}):e.setState({isColor:!0})},ue.onchange=function(){y?e.setState({changeColor:!1}):e.setState({changeColor:!0})},U.value=l,U.onchange=function(){var t=U.value;e.setState({postfix:t})},G.value=String(n),G.onchange=function(){var t=Number(G.value);e.setState({from:t})},z.value=String(a),z.onchange=function(){var t=Number(z.value);e.setState({to:t})},$.value=String(o),$.onchange=function(){var t=Number($.value);e.setState({min:t})},K.value=String(r),K.onchange=function(){var t=Number(K.value);e.setState({max:t})},X.value=String(c),X.onchange=function(){var t=Number(X.value);e.setState({step:t})},Z.value=String(u),Z.onchange=function(){var t=Z.value;e.setState({color:t})},pe.value=String(b),pe.onchange=function(){var t=pe.value;e.setState({gradient:t})},fe.value=String(x),fe.onchange=function(){var t=Number(fe.value);e.setState({gradientDeg:t})},ee.value=p,ee.onchange=function(){var t=ee.value;e.setState({scalePostfix:t})},le.value=v,le.onchange=function(){var t=le.value;e.setState({trackPostfix:t})},Y.value=void 0===P||" "===P?" ":P,Y.onchange=function(){var t=Y.value;"."!==t&&","!==t&&(t=" "),e.setState({separate:t})}},e.prototype.setState=function(e){this.state=i(i({},this.state),e),this.slider.setOptions(this.state),this.slider.upDataView()},e}();t.Demo=o},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.demoTemplate=void 0;t.demoTemplate='\n\n\n<h4  class="panel__title">Панель управления</h4>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">V/H Вид\n<input type="checkbox" class="panel__checkbox panel__inputs js-orientation" name="orientation" />\n</label>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isLabel" name="label"/>\n</label>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Range/Single\n<input type="checkbox" class="panel__checkbox panel__inputs js-isDouble" name="double"/>\n</label>\n</div>\n\n<button class="panel__button js-btn-view">Настройки отображения</button>\n<div class="panel__menu js-menu-view">\n\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать min/max\n<input type="checkbox" class="panel__checkbox panel__inputs js-minMax" name="minMax"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать from/to\n<input type="checkbox" class="panel__checkbox panel__inputs js-fromTo" name="fromTo"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Добавить/убрать разделитель\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScaleDel" name="scale"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Делитель\n<input type="text" class="panel__inputs js-separate" name="separate"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Выводить цвета/значения\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColorOut" name="color"/>\n</label>\n</div>\n\n\n\n<button type="button" class="panel__button js-btn-scale">Управление шкалой</button>\n<div class="panel__menu js-menu-scale">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Шкала с делениями/значениями\n<input type="checkbox" class="panel__checkbox panel__inputs js-division" name="division"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Шкалу\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScale" name="scale"/>\n</label>\n</div>\n</div>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Max\n<input type="number" class="panel__inputs js-max" name="max"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Min\n<input type="number" class="panel__inputs js-min" name="min"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">From\n<input type="number" class="panel__inputs js-from" name="from" />\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">To\n<input type="number" class="panel__inputs js-to" name="to"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Шаг\n<input type="number" class="panel__inputs js-step" name="step"/>\n</label>\n</div>\n</div>\n\n\n<button class="panel__button js-btn-color" type="button">Настройки цвета</button>\n<div class="panel__menu js-color-setting">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Откл/Вкл изменение цвета\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Использовать только css/переменной цвет\n<input type="checkbox" class="panel__checkbox panel__inputs js-isChangeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Сменить оттенок\n<input type="checkbox" class="panel__checkbox panel__inputs js-changeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Градиент вкл/откл\n<input type="checkbox" class="panel__checkbox panel__inputs js-gradient" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Цвет\n<input type="text" class="panel__inputs js-color" name="color"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Градиент\n<input type="text" class="panel__inputs js-gradient-out" name="gradient"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Угол градиента\n<input type="number" class="panel__inputs js-gradient-deg" name="gradient"/>\n</label>\n</div>\n</div>\n\n\n<button type="button" class="panel__button js-btn-postfix">Postfix/Prefix</button>\n<div class="panel__menu js-menu-postfix">\n<div class="panel__items">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Сменить Префикс/Постфикс\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPrefix-all" name="isPrefix"/>\n</label>\n</div>\n<label class="panel__labels panel__checkboxes js-label-postfix">Показать/Скрыть Pre/Postfix tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfixTool" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix шкалы\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix track\n<input type="checkbox" class="panel__checkbox panel__inputs js-isTrackPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix tooltip\n<input type="text" class="panel__inputs js-marker" name="marker"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix шкалы\n<input type="text" class="panel__inputs js-scale-postfix" name="js-prefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix track\n<input type="text" class="panel__inputs js-track-postfix" name="js-prefix"/>\n</label>\n</div>\n</div>\n\n'},function(e,t,s){var i=s(5),n=s(21);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[e.i,n,""]]);var a={insert:"head",singleton:!1};i(n,a);e.exports=n.locals||{}},function(e,t,s){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9saWJzL2NsYXNzTmFtZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9pbnRlcmZhY2VzL2ludGVyZmFjZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9FdmVudEVtaXR0ZXIvRXZlbnRFbWl0dGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvbGlicy9jb3JyZWN0U2VwYXJhdGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9pbnRlcmZhY2VzL3N0YW5kYXJkT3B0aW9ucy50cyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9zbGlkZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9QcmVzZW50ZXIvUHJlc2VudGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvTW9kZWwvTW9kZWwudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9WaWV3L1ZpZXcudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9WaWV3L1JvbGxlcnMvUm9sbGVycy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL1ZpZXcvVHJhY2svVHJhY2sudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9WaWV3L1NjYWxlL1NjYWxlLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvVmlldy9CYXIvQmFyLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvaW50ZXJmYWNlcy9jb2xvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL3NsaWRlci5zY3NzPzc5MWIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ByZXZpZXcvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ByZXZpZXcvRGVtby9EZW1vLnRzIiwid2VicGFjazovLy8uL3NyYy9wcmV2aWV3L0RlbW8vZGVtb1RlbXBsYXRlLnRzIiwid2VicGFjazovLy8uL3NyYy9wcmV2aWV3L2luZGV4LnNjc3M/ZGFhYyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNsYXNzTmFtZXMiLCJzbGlkZXIiLCJzbGlkZXJWZXJ0aWNhbCIsInRyYWNrT3V0U3RhcnQiLCJ0cmFja091dEVuZCIsImZpbmRUcmFja091dCIsInRyYWNrIiwiZmluZFRyYWNrIiwic2NhbGUiLCJmaW5kU2NhbGUiLCJzY2FsZUZzWmVybyIsImJhciIsImZpbmRCYXIiLCJyb2xsZXJGaXJzdCIsInJvbGxlclNlY29uZCIsImZpbmRSb2xsZXJzIiwiZmlyc3RUb29sdGlwIiwic2Vjb25kVG9vbHRpcCIsImZpbmRGaXJzdFRvb2x0aXAiLCJmaW5kU2Vjb25kVG9vbHRpcCIsImZpbmRUb29sdGlwIiwidG9vbHRpcFdoaXRlIiwibm90VmlzaWJsZSIsInNjYWxlTWFya2VyIiwiZmluZFNjYWxlVmFsdWUiLCJpc1NjYWxlVmFsdWUiLCJkaXZpc2lvblZhbHVlIiwiaXNTY2FsZURpdmlzb24iLCJkaXZpc2lvbiIsIkRpcmVjdGlvbiIsIkV2ZW50cyIsIkV2ZW50RW1pdHRlciIsInRoaXMiLCJldmVudHMiLCJzdWJzY3JpYmUiLCJldmVudE5hbWUiLCJjYWxsYmFjayIsInB1c2giLCJlbWl0IiwibmV3RGF0YSIsImV2ZW50IiwiZm9yRWFjaCIsImNvcnJlY3RTZXBhcmF0ZSIsIm9wdGlvbnMiLCJpc1NlcGFyYXRlIiwic2VwYXJhdGUiLCJ2YWwiLCJ0b1N0cmluZyIsInNlcGFyYXRlRGUiLCJzZXBhcmF0ZURlZmF1bHQiLCJ1bmRlZmluZWQiLCJ0b0xvY2FsZVN0cmluZyIsInN0YW5kYXJkT3B0aW9ucyIsIm1pbiIsIm1heCIsInN0ZXAiLCJmcm9tIiwidG8iLCJwb3N0Zml4IiwiaXNQcmVmaXgiLCJpc1Bvc3RmaXgiLCJpc0xhYmVsIiwiaXNTY2FsZSIsImNvbG9yIiwiaXNTY2FsZVBvc3RmaXgiLCJzY2FsZVBvc3RmaXgiLCJtaW5NYXgiLCJmcm9tVG8iLCJpc1RyYWNrUG9zdGZpeCIsInRyYWNrUG9zdGZpeCIsImlzQ29sb3IiLCJjaGFuZ2VDb2xvciIsImlzQ2hhbmdlQ29sb3IiLCJpc0dyYWRpZW50IiwiZ3JhZGllbnQiLCJncmFkaWVudERlZyIsImlzQ29sb3JPdXQiLCJvbmx5RGl2aXNpb25zIiwiYWxsQ29sb3JzIiwiaXNWZXJ0aWNhbCIsImlzRG91YmxlIiwibWVtbyIsImlzT2xkSUUiLCJCb29sZWFuIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0VGFyZ2V0IiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibGVuZ3RoIiwibW9kdWxlc1RvRG9tIiwibGlzdCIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsIml0ZW0iLCJpZCIsImJhc2UiLCJjb3VudCIsImNvbmNhdCIsImluZGV4Iiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGUiLCJjcmVhdGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwia2V5cyIsInNldEF0dHJpYnV0ZSIsImluc2VydCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiam9pbiIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoaWxkTm9kZXMiLCJyZW1vdmVDaGlsZCIsImluc2VydEJlZm9yZSIsImFwcGx5VG9UYWciLCJyZW1vdmVBdHRyaWJ1dGUiLCJidG9hIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZmlyc3RDaGlsZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicGFyZW50Tm9kZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsInNwbGljZSIsIl9fYXNzaWduIiwiYXNzaWduIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJfX3NwcmVhZEFycmF5cyIsImlsIiwiQXJyYXkiLCJrIiwiYSIsImoiLCJqbCIsIlByZXNlbnRlcl8xIiwiaW50ZXJmYWNlc18xIiwic3RhbmRhcmRPcHRpb25zXzEiLCIkIiwiZm4iLCJjb2xvclNsaWRlciIsIm1ldGhvZCIsIl9hIiwiYXJnIiwibWV0aG9kcyIsImluaXQiLCIkc2xpZGVyIiwibmV3UGFyYW0iLCJuZXdPcHRpb25zIiwiZGF0YSIsIlByZXNlbnRlciIsImNoYW5nZSIsInZhbHVlcyIsInNldE9wdGlvbnMiLCJ1cERhdGFWaWV3IiwiZ2V0VmFsdWUiLCJmdW5jIiwiZW1pdHRlciIsIk5FV19EQVRBIiwiaXNNZXRob2QiLCJqUXVlcnkiLCJNb2RlbF8xIiwiVmlld18xIiwiRXZlbnRFbWl0dGVyXzEiLCJlbGVtZW50IiwibW9kZWwiLCJjcmVhdGVNb2RlbCIsInZpZXciLCJjcmVhdGVWaWV3Iiwic3RhdGUiLCJiaW5kU3Vic2NyaWJlIiwidXBEYXRhU2xpZGVyIiwic2V0RGF0YSIsImdldE9wdGlvbnMiLCJNb2RlbCIsIlZpZXciLCJnZXROZXdEYXRhIiwic2VuZE5ld1Bvc2l0aW9uIiwiYWRkU3Vic2NyaWJ0aW9ucyIsIk5FV19QT1NJVElPTiIsInVwRGF0YSIsIm5ld1Bvc2l0aW9uIiwibW9kZWxTdGF0ZSIsIk9wdGlvbnMiLCJ2YWxpZGF0ZUZyb21UbyIsInZhbGlkYXRlTWluTWF4U3RlcCIsImlzTWluTWF4IiwibWF4TWluWmVybyIsImlzU2luZ2xlRnJvbSIsImlzQ29ycmVjdEZyb20iLCJSb2xsZXJzXzEiLCJUcmFja18xIiwiU2NhbGVfMSIsIkJhcl8xIiwiY2xhc3NOYW1lc18xIiwiY3JlYXRlU2xpZGVyIiwicm9sbGVycyIsImNyZWF0ZVJvbGxlcnMiLCJjcmVhdGVCYXIiLCJjcmVhdGVUcmFjayIsImNyZWF0ZVNjYWxlIiwiYmluZEV2ZW50TGlzdGVuZXJzIiwic2l6ZSIsImdldFNsaWRlclNpemUiLCJvbmVTdGVwIiwiZ2V0T25lU3RlcCIsImNsYXNzTmFtZSIsImFwcGVuZCIsIlRyYWNrIiwiQmFyIiwiUm9sbGVycyIsIlNjYWxlIiwibmV3U3RhdGUiLCJ1cGRhdGFTdGF0ZSIsInNldE91dCIsIk1hdGgiLCJjZWlsIiwiaGFuZGxlVHJhY2tDbGljayIsImhhbmRsZVNjYWxlQ2xpY2siLCJhZGRFdmVudExpc3RlbmVycyIsImhhbmRsZVNsaWRlckRyYWciLCJkcmFnU3RhcnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0VGFyZ2V0VHlwZSIsImRyYWdfMSIsImRyYWciLCJoYW5kbGVVcF8xIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwibW91c2VWYWx1ZSIsInRlc3QiLCJzZW5zb3JIb3Jpem9udGFsRXZlbnQiLCJ0eXBlIiwibW91c2VIb3Jpem9udGFsRXZlbnQiLCJzZW5zb3JWZXJ0aWNhbEV2ZW50IiwibW91c2VWZXJ0aWNhbEV2ZW50IiwiY29udmVydFB4VG9WYWx1ZSIsInRvdWNoZXMiLCJjbGllbnRYIiwiY2xpZW50WSIsInVwZGF0ZVBvc2l0aW9uIiwiVEFSR0VUX0ZPUldBUkQiLCJUQVJHRVRfQkFDS1dBUkQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29udGFpbnMiLCJwb3NpdGlvbiIsImRldGFpbCIsInNwbGl0IiwiU3RyaW5nIiwiTnVtYmVyIiwiY29vcmRpbmF0ZSIsIkZPUldBUkQiLCJCQUNLV0FSRCIsImZyb21EaXN0YW5jZSIsImFicyIsInRvRGlzdGFuY2UiLCJjb252ZXJ0VmFsdWVUb0NvbG9yIiwiaXNGcm9tIiwidGFyZ2V0VG8iLCJ0YXJnZXRzIiwiaXNGcm9tVGFyZ2V0IiwiaXNUb1RhcmdldCIsImNvcnJlY3RUbyIsInNsaWRlclBvcyIsImdldFNsaWRlclBvc2l0aW9uIiwicHgiLCJyb3VuZCIsIl9iIiwiaXNDaGFuZ2VOZXdDb2xvciIsInBhbGl0cmEiLCJnclBhbGl0cmEiLCJjb3JyZWN0R3JhZGllbnQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJsZWZ0IiwiaGVpZ2h0Iiwid2lkdGgiLCJjb3JyZWN0U2VwYXJhdGVfMSIsInRvb2x0aXBzIiwiY3JlYXRlVG9vbHRpcCIsIm1vdmVSb2xsZXJzQXRWYWx1ZSIsInRvZ2dsZVJvbGxlcnMiLCJmaXJzdFJvbGxlciIsInNlY29uZFJvbGxlciIsInVwZGF0YU91dFRvb2x0aXAiLCJpc1NldFByZWZpeCIsImlubmVySFRNTCIsInNldENvbG9yIiwibmV3Q29sb3IiLCJuZXdHcmFkaWVudCIsImJhY2tncm91bmRDb2xvciIsImNsYXNzTGlzdCIsImFkZCIsInVwZGF0YUNvbG9yIiwiYmFja2dyb3VuZCIsInB4VG8iLCJjb252ZXJ0VmFsdWVUb1B4IiwicHhGcm9tIiwicG9zaXRpb25UbyIsImNvbnZlcnRQeFRvUHJvY2VudCIsInBvc2l0aW9uRnJvbSIsImJvdHRvbSIsIm91dEVsZW1lbnRzIiwiY3JlYXRlT3V0RWxlbWVudHMiLCJzdGFydFZhbHVlIiwiZW5kVmFsdWUiLCJpc0Zyb210b1ByZWZpeCIsImFkZFNjYWxlTWFya2VyIiwiY2hlY2tTY2FsZSIsInVwZGF0YVNjYWxlTWFya2VyIiwiZG9jdW1lbnRFbGVtZW50Iiwic2V0UHJvcGVydHkiLCJpbmMiLCJnZXRJbmNyZW1lbnQiLCJweEluYyIsImZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsInB4Q3VycmVudCIsImN1cnJlbnQiLCJwYXJhbWV0ZXJzIiwiY3JlYXRlU2NhbGVNYXJrZXIiLCJvZmZzZXQiLCJjb252ZXJ0UHhUb1BlcmNlbnQiLCJzdG9wUHJvcGFnYXRpb24iLCJIVE1MRWxlbWVudCIsInNjYWxlRXZlbnQiLCJDdXN0b21FdmVudCIsImJ1YmJsZXMiLCJkaXNwYXRjaEV2ZW50IiwidXBkYXRhQmFyIiwiaXNTZXRDb2xvciIsImdldFJvbGxlclBvc2l0aW9ucyIsImNhbGN1bGF0ZVBvc2l0aW9uIiwic29ydCIsImIiLCJwYXJzZUludCIsImdldENvbXB1dGVkU3R5bGUiLCJzaWRlIiwiZGlyZWN0aW9uIiwicm9sbGVyUG9zIiwiZ2V0TmV3U2xpZGVyUG9zIiwib3JhbmdlIiwicHVycGxlIiwiYXBpIiwiY29udGVudCIsImRlZmF1bHQiLCJsb2NhbHMiLCJEZW1vXzEiLCIkd3JhcCIsImNsaWNrIiwiZWFjaCIsIkRlbW8iLCJkZW1vVGVtcGxhdGVfMSIsImRlbW9Ub29scyIsImNyZWF0ZVRvb2xzIiwibmV3U2V0dGluZyIsImluaXRUb29scyIsImNyZWF0ZVNldHRpbmdzIiwiYWZ0ZXIiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJkZW1vVGVtcGxhdGUiLCJfdGhpcyIsImJ0blNjYWxlIiwiYnRuVmlldyIsImJ0blBvc3RmaXgiLCJidG5Db2xvciIsIm1lbnVTY2FsZSIsIm1lbnVWaWV3IiwibWVudVBvc3RmaXgiLCJtZW51Q29sb3IiLCJpc09yaWVudGF0aW9uIiwiY2hhbmdlU2NhbGUiLCJpbnB1dENvbG9yT3V0IiwibGFiZWwiLCJpc0RvdWJsZVR5cGUiLCJpbnB1dEZyb20iLCJpbnB1dFRvIiwiaW5wdXRNaW4iLCJpbnB1dE1heCIsImlucHV0TWFya2VyIiwiaW5wdXRTdGVwIiwiaW5wdXRTZXBhcmF0ZSIsImlucHV0Q29sb3IiLCJpbnB1dElzUG9zdGZpeCIsImlucHV0SXNQcmVmaXgiLCJpbnB1dFNjYWxlUG9zdGZpeCIsImlucHV0SXNDaGFuZ2VDb2xvciIsImlucHV0TWluTWF4IiwiaW5wdXRJc1NlcGFyYXRlIiwiaW5wdXRGcm9tVG8iLCJpbnB1dERpdmlzaW9uIiwiaW5wdXRJc1RyYWNrUG9zdGZpeCIsImlucHV0SXNUb29sUG9zdGZpeCIsImlucHV0VHJhY2tQb3N0Zml4IiwiaW5wdXRJc0NvbG9yIiwiaW5wdXRDaGFuZ2VDb2xvciIsImlucHV0R3JhZGllbnQiLCJpbnB1dEdyYWRpZW50T3V0IiwiaW5wdXRHcmFkaWVudERlZyIsIm9uY2xpY2siLCJ0b2dnbGUiLCJvbmNoYW5nZSIsInNldFN0YXRlIl0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUFLZkYsRUFBb0JRLEVBQUlGLEVBR3hCTixFQUFvQlMsRUFBSVYsRUFHeEJDLEVBQW9CVSxFQUFJLFNBQVNSLEVBQVNTLEVBQU1DLEdBQzNDWixFQUFvQmEsRUFBRVgsRUFBU1MsSUFDbENHLE9BQU9DLGVBQWViLEVBQVNT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Q1gsVUFBVyxZQUNYLFVBQVcsYUFDWCxVQUFXLFlBQ1gsVUFBVyxRQUNYLFVBQVcsaUJBQ1gsVUFBVyxXQUNYLFVBQVcsVUFDWCxVQUFXLFdBQ1gsVUFBVyxXQUNYLFVBQVcsZ0JBQ1gsVUFBVyxXQUNYLFVBQVcsWUFDWCxVQUFXLFlBQ1gsVUFBVyxjQUNYLFVBQVcsaUJBQ1gsVUFBVyxhQUNYLFVBQVcsYUFDWCxVQUFXLFVBQ1gsVUFBVyxhQUNYLFVBQVcsZUFDWCxVQUFXLGdCQUNYLFVBQVcsYUFDWCxVQUFXLFVBQ1gsVUFBVyxnQkFDWCxVQUFXLGdCQUNYLFVBQVcsYUFDWCxVQUFXLFdBQ1gsVUFBVyxjQUNYLFVBQVcsVUFDWCxVQUFXLGFBQ1gsVUFBVyxZQUNYLFVBQVcsY0FDWCxVQUFXLGNBQ1gsVUFBVyxVQUNYLFVBQVcsWUFDWCxVQUFXLGFBQ1gsVUFBVyxZQUNYLFVBQVcsT0FDWCxVQUFXLE9BQ1gsVUFBVyxVQUNYLFVBQVcsY0FDWCxVQUFXLFdBQ1gsVUFBVyxVQUNYLFVBQVcsWUFDWCxVQUFXLFNBQ1gsVUFBVyxRQUNYLFVBQVcsUUFDWCxVQUFXLGdCQUNYLFVBQVcsV0FDWCxVQUFXLFlBQ1gsVUFBVyxlQUNYLFVBQVcsWUFDWCxVQUFXLGFBQ1gsVUFBVyxZQUNYLFVBQVcsdUJBQ1gsVUFBVyxZQUNYLFVBQVcsYUFDWCxVQUFXLFlBQ1gsVUFBVyxjQUNYLFVBQVcsZ0JBQ1gsVUFBVyxlQUNYLFVBQVcsaUJBQ1gsVUFBVyxpQkFDWCxVQUFXLGNBQ1gsVUFBVyxPQUNYLFVBQVcsWUFDWCxVQUFXLFFBQ1gsVUFBVyxTQUNYLFVBQVcsbUJBQ1gsVUFBVyxhQUNYLFVBQVcsZUFDWCxVQUFXLGVBQ1gsVUFBVyxpQkFDWCxVQUFXLGtCQUNYLFVBQVcsb0JBQ1gsVUFBVyxrQkFDWCxVQUFXLGtCQUNYLFVBQVcsZUFDWCxVQUFXLFlBQ1gsVUFBVyxZQUNYLFVBQVcsV0FDWCxVQUFXLGNBQ1gsVUFBVyxPQUNYLFVBQVcsVUFDWCxVQUFXLFFBQ1gsVUFBVyxZQUNYLFVBQVcsU0FDWCxVQUFXLFlBQ1gs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LFNBQVcsV0FDekIsSUFBSXZjLEVBQVErYixHQUFrQi9iLE1BQzlCK1osRUFBTXlDLFNBQVMsQ0FBRXBYLGFBQWNwRixLQUkvQm1iLEVBQWNuYixXQUREaUUsSUFBYkwsR0FHa0IsTUFBYkEsRUFGaUIsSUFNQUEsRUFFMUJ1WCxFQUFjb0IsU0FBVyxXQUNyQixJQUFJdmMsRUFBUW1iLEVBQWNuYixNQUNaLE1BQVZBLEdBQTJCLE1BQVZBLElBQ2pCQSxFQUFRLEtBRVorWixFQUFNeUMsU0FBUyxDQUFFNVksU0FBVTVELE1BR25DcVosRUFBSzFZLFVBQVU2YixTQUFXLFNBQVU5UCxHQUNoQzNKLEtBQUtnTCxNQUFRN0MsRUFBU0EsRUFBUyxHQUFJbkksS0FBS2dMLE9BQVFyQixHQUNoRDNKLEtBQUsvQixPQUFPK0wsV0FBV2hLLEtBQUtnTCxPQUM1QmhMLEtBQUsvQixPQUFPZ00sY0FFVHFNLEVBdFNjLEdBd1N6QnhhLEVBQVF3YSxLQUFPQSxHLDZCQ3ZUZjVaLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxJQUN0RG5CLEVBQVFpYixrQkFBZSxFQUV2QmpiLEVBQVFpYixhQURXLDAvTCxnQkNIbkIsSUFBSWpCLEVBQU0sRUFBUSxHQUNGQyxFQUFVLEVBQVEsSUFJQyxpQkFGdkJBLEVBQVVBLEVBQVEzWSxXQUFhMlksRUFBUUMsUUFBVUQsS0FHL0NBLEVBQVUsQ0FBQyxDQUFDaGEsRUFBT0MsRUFBSStaLEVBQVMsTUFHOUMsSUFBSXBWLEVBQVUsQ0FFZCxPQUFpQixPQUNqQixXQUFvQixHQUVQbVYsRUFBSUMsRUFBU3BWLEdBSTFCNUUsRUFBT0QsUUFBVWlhLEVBQVFFLFFBQVUsSSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxNyk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2xhc3NOYW1lcyA9IHZvaWQgMDtcbnZhciBjbGFzc05hbWVzID0ge1xuICAgIHNsaWRlcjogJ3NsaWRlcicsXG4gICAgc2xpZGVyVmVydGljYWw6ICdzbGlkZXIgc2xpZGVyX29yaWVudGF0aW9uLXZlcnRpY2FsJyxcbiAgICB0cmFja091dFN0YXJ0OiAnc2xpZGVyX19vdXQgc2xpZGVyX19vdXQtc3RhcnQganMtc2xpZGVyX19vdXQganMtc2xpZGVyX19vdXQtc3RhcnQnLFxuICAgIHRyYWNrT3V0RW5kOiAnc2xpZGVyX19vdXQgc2xpZGVyX19vdXQtZW5kIGpzLXNsaWRlcl9fb3V0IGpzLXNsaWRlcl9fb3V0LWVuZCcsXG4gICAgZmluZFRyYWNrT3V0OiAnLmpzLXNsaWRlcl9fb3V0JyxcbiAgICB0cmFjazogJ3NsaWRlcl9fdHJhY2sganMtc2xpZGVyX190cmFjaycsXG4gICAgZmluZFRyYWNrOiAnLmpzLXNsaWRlcl9fdHJhY2snLFxuICAgIHNjYWxlOiAnc2xpZGVyX19zY2FsZSBqcy1zbGlkZXJfX3NjYWxlICcsXG4gICAgZmluZFNjYWxlOiAnLmpzLXNsaWRlcl9fc2NhbGUnLFxuICAgIHNjYWxlRnNaZXJvOiAnc2xpZGVyX19zY2FsZS12YWx1ZV9ub3QtdmlzaWJsZScsXG4gICAgYmFyOiAnc2xpZGVyX19iYXIganMtc2xpZGVyX19iYXInLFxuICAgIGZpbmRCYXI6ICcuanMtc2xpZGVyX19iYXInLFxuICAgIHJvbGxlckZpcnN0OiAnc2xpZGVyX19yb2xsZXIganMtc2xpZGVyX19yb2xsZXIgc2xpZGVyX19yb2xsZXJfZmlyc3QganMtc2xpZGVyX19yb2xsZXJfZmlyc3QnLFxuICAgIHJvbGxlclNlY29uZDogJ3NsaWRlcl9fcm9sbGVyX3NlY29uZCBqcy1zbGlkZXJfX3JvbGxlciBqcy1zbGlkZXJfX3JvbGxlcl9zZWNvbmQgc2xpZGVyX19yb2xsZXInLFxuICAgIGZpbmRSb2xsZXJzOiAnLmpzLXNsaWRlcl9fcm9sbGVyJyxcbiAgICBmaXJzdFRvb2x0aXA6ICdzbGlkZXJfX3Rvb2x0aXBfZmlyc3QganMtc2xpZGVyX190b29sdGlwX2ZpcnN0IGpzLXNsaWRlcl9fdG9vbHRpcCBzbGlkZXJfX3Rvb2x0aXAnLFxuICAgIHNlY29uZFRvb2x0aXA6ICdzbGlkZXJfX3Rvb2x0aXBfc2Vjb25kIGpzLXNsaWRlcl9fdG9vbHRpcCBqcy1zbGlkZXJfX3Rvb2x0aXBfc2Vjb25kIHNsaWRlcl9fdG9vbHRpcCcsXG4gICAgZmluZEZpcnN0VG9vbHRpcDogJy5qcy1zbGlkZXJfX3Rvb2x0aXBfZmlyc3QnLFxuICAgIGZpbmRTZWNvbmRUb29sdGlwOiAnLmpzLXNsaWRlcl9fdG9vbHRpcF9zZWNvbmQnLFxuICAgIGZpbmRUb29sdGlwOiAnLmpzLXNsaWRlcl9fdG9vbHRpcCcsXG4gICAgdG9vbHRpcFdoaXRlOiAnc2xpZGVyX190b29sdGlwX3doaXRlJyxcbiAgICBub3RWaXNpYmxlOiAnc2xpZGVyX19lbGVtZW50X25vdC12aXNpYmxlJyxcbiAgICBzY2FsZU1hcmtlcjogJ3NsaWRlcl9fc2NhbGUtdmFsdWUgIGpzLXNsaWRlcl9fc2NhbGUtdmFsdWUnLFxuICAgIGZpbmRTY2FsZVZhbHVlOiAnLmpzLXNsaWRlcl9fc2NhbGUtdmFsdWUnLFxuICAgIGlzU2NhbGVWYWx1ZTogJ3NsaWRlcl9fc2NhbGUtdmFsdWUnLFxuICAgIGRpdmlzaW9uVmFsdWU6ICdzbGlkZXJfX2RpdmlzaW9uLXZhbHVlIGpzLXNsaWRlcl9fZGl2aXNpb24tdmFsdWUgc2xpZGVyX19lbGVtZW50LScsXG4gICAgaXNTY2FsZURpdmlzb246ICdzbGlkZXJfX2RpdmlzaW9uLXZhbHVlJyxcbiAgICBkaXZpc2lvbjogJ3NsaWRlcl9fZGl2aXNpb24ganMtc2xpZGVyX19kaXZpc2lvbicsXG59O1xuZXhwb3J0cy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FdmVudHMgPSBleHBvcnRzLkRpcmVjdGlvbiA9IHZvaWQgMDtcbnZhciBEaXJlY3Rpb247XG4oZnVuY3Rpb24gKERpcmVjdGlvbikge1xuICAgIERpcmVjdGlvbltEaXJlY3Rpb25bXCJGT1JXQVJEXCJdID0gMF0gPSBcIkZPUldBUkRcIjtcbiAgICBEaXJlY3Rpb25bRGlyZWN0aW9uW1wiQkFDS1dBUkRcIl0gPSAxXSA9IFwiQkFDS1dBUkRcIjtcbiAgICBEaXJlY3Rpb25bRGlyZWN0aW9uW1wiVEFSR0VUX0ZPUldBUkRcIl0gPSAyXSA9IFwiVEFSR0VUX0ZPUldBUkRcIjtcbiAgICBEaXJlY3Rpb25bRGlyZWN0aW9uW1wiVEFSR0VUX0JBQ0tXQVJEXCJdID0gM10gPSBcIlRBUkdFVF9CQUNLV0FSRFwiO1xufSkoRGlyZWN0aW9uIHx8IChEaXJlY3Rpb24gPSB7fSkpO1xuZXhwb3J0cy5EaXJlY3Rpb24gPSBEaXJlY3Rpb247XG52YXIgRXZlbnRzO1xuKGZ1bmN0aW9uIChFdmVudHMpIHtcbiAgICBFdmVudHNbRXZlbnRzW1wiTkVXX0RBVEFcIl0gPSAwXSA9IFwiTkVXX0RBVEFcIjtcbiAgICBFdmVudHNbRXZlbnRzW1wiTkVXX1BPU0lUSU9OXCJdID0gMV0gPSBcIk5FV19QT1NJVElPTlwiO1xufSkoRXZlbnRzIHx8IChFdmVudHMgPSB7fSkpO1xuZXhwb3J0cy5FdmVudHMgPSBFdmVudHM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXZlbnRFbWl0dGVyID0gdm9pZCAwO1xudmFyIEV2ZW50RW1pdHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzID0ge307XG4gICAgfVxuICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUuc3Vic2NyaWJlID0gZnVuY3Rpb24gKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgIXRoaXMuZXZlbnRzW2V2ZW50TmFtZV0gJiYgKHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0gPSBbXSk7XG4gICAgICAgIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0ucHVzaChjYWxsYmFjayk7XG4gICAgfTtcbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBuZXdEYXRhKSB7XG4gICAgICAgIHZhciBldmVudCA9IHRoaXMuZXZlbnRzW2V2ZW50TmFtZV07XG4gICAgICAgIGV2ZW50ICYmIGV2ZW50LmZvckVhY2goZnVuY3Rpb24gKGNhbGxiYWNrKSB7IHJldHVybiBjYWxsYmFjay5jYWxsKG51bGwsIG5ld0RhdGEpOyB9KTtcbiAgICB9O1xuICAgIHJldHVybiBFdmVudEVtaXR0ZXI7XG59KCkpO1xuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29ycmVjdFNlcGFyYXRlID0gdm9pZCAwO1xuZnVuY3Rpb24gY29ycmVjdFNlcGFyYXRlKHZhbHVlLCBvcHRpb25zKSB7XG4gICAgdmFyIGlzU2VwYXJhdGUgPSBvcHRpb25zLmlzU2VwYXJhdGU7XG4gICAgdmFyIHNlcGFyYXRlID0gb3B0aW9ucy5zZXBhcmF0ZTtcbiAgICB2YXIgdmFsID0gJyc7XG4gICAgaWYgKGlzU2VwYXJhdGUgPT09IGZhbHNlKSB7XG4gICAgICAgIHZhbCA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB2YXIgc2VwYXJhdGVFbiA9IHNlcGFyYXRlID09PSAnLCc7XG4gICAgICAgIHZhciBzZXBhcmF0ZURlID0gc2VwYXJhdGUgPT09ICcuJztcbiAgICAgICAgdmFyIHNlcGFyYXRlRGVmYXVsdCA9IHNlcGFyYXRlID09PSAnICc7XG4gICAgICAgIGlmIChzZXBhcmF0ZUVuKSB7XG4gICAgICAgICAgICBzZXBhcmF0ZSA9ICdlbi1VUyc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlcGFyYXRlRGUpIHtcbiAgICAgICAgICAgIHNlcGFyYXRlID0gJ2RlLURFJztcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VwYXJhdGVEZWZhdWx0KSB7XG4gICAgICAgICAgICBzZXBhcmF0ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICB2YWwgPSB2YWx1ZS50b0xvY2FsZVN0cmluZyhzZXBhcmF0ZSk7XG4gICAgfVxuICAgIHJldHVybiB2YWw7XG59XG5leHBvcnRzLmNvcnJlY3RTZXBhcmF0ZSA9IGNvcnJlY3RTZXBhcmF0ZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdGFuZGFyZE9wdGlvbnMgPSB2b2lkIDA7XG52YXIgY29sb3JfMSA9IHJlcXVpcmUoXCIuL2NvbG9yXCIpO1xudmFyIHN0YW5kYXJkT3B0aW9ucyA9IHtcbiAgICBtaW46IDAsXG4gICAgbWF4OiAxMCxcbiAgICBzdGVwOiAxLFxuICAgIGZyb206IDMsXG4gICAgdG86IDcsXG4gICAgcG9zdGZpeDogJ+KCvScsXG4gICAgaXNQcmVmaXg6IGZhbHNlLFxuICAgIGlzUG9zdGZpeDogdHJ1ZSxcbiAgICBpc0xhYmVsOiB0cnVlLFxuICAgIGlzU2NhbGU6IHRydWUsXG4gICAgaXNTZXBhcmF0ZTogdHJ1ZSxcbiAgICBjb2xvcjogJ29yYW5nZScsXG4gICAgaXNTY2FsZVBvc3RmaXg6IHRydWUsXG4gICAgc2NhbGVQb3N0Zml4OiAn4oK9JyxcbiAgICBtaW5NYXg6IGZhbHNlLFxuICAgIGZyb21UbzogZmFsc2UsXG4gICAgaXNUcmFja1Bvc3RmaXg6IHRydWUsXG4gICAgdHJhY2tQb3N0Zml4OiAn4oK9JyxcbiAgICBpc0NvbG9yOiB0cnVlLFxuICAgIGNoYW5nZUNvbG9yOiB0cnVlLFxuICAgIGlzQ2hhbmdlQ29sb3I6IHRydWUsXG4gICAgaXNHcmFkaWVudDogdHJ1ZSxcbiAgICBncmFkaWVudDogJ3B1cnBsZScsXG4gICAgZ3JhZGllbnREZWc6IDQ1LFxuICAgIGlzQ29sb3JPdXQ6IGZhbHNlLFxuICAgIG9ubHlEaXZpc2lvbnM6IGZhbHNlLFxuICAgIHNlcGFyYXRlOiAnICcsXG4gICAgYWxsQ29sb3JzOiBjb2xvcl8xLmFsbENvbG9ycyxcbiAgICBpc1ZlcnRpY2FsOiBmYWxzZSxcbiAgICBpc0RvdWJsZTogZmFsc2UsXG59O1xuZXhwb3J0cy5zdGFuZGFyZE9wdGlvbnMgPSBzdGFuZGFyZE9wdGlvbnM7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX3NwcmVhZEFycmF5cyA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheXMpIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKHZhciBzID0gMCwgaSA9IDAsIGlsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGlsOyBpKyspIHMgKz0gYXJndW1lbnRzW2ldLmxlbmd0aDtcbiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspXG4gICAgICAgIGZvciAodmFyIGEgPSBhcmd1bWVudHNbaV0sIGogPSAwLCBqbCA9IGEubGVuZ3RoOyBqIDwgamw7IGorKywgaysrKVxuICAgICAgICAgICAgcltrXSA9IGFbal07XG4gICAgcmV0dXJuIHI7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFByZXNlbnRlcl8xID0gcmVxdWlyZShcIi4vUHJlc2VudGVyL1ByZXNlbnRlclwiKTtcbnZhciBpbnRlcmZhY2VzXzEgPSByZXF1aXJlKFwiLi9pbnRlcmZhY2VzL2ludGVyZmFjZXNcIik7XG52YXIgc3RhbmRhcmRPcHRpb25zXzEgPSByZXF1aXJlKFwiLi9pbnRlcmZhY2VzL3N0YW5kYXJkT3B0aW9uc1wiKTtcbnJlcXVpcmUoXCIuL3NsaWRlci5zY3NzXCIpO1xuKGZ1bmN0aW9uIGluaXRQbHVnaW4oJCkge1xuICAgICQuZm4uY29sb3JTbGlkZXIgPSBmdW5jdGlvbiBpbml0KG1ldGhvZCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciBhcmcgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbWV0aG9kcyA9IHtcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgkc2xpZGVyLCBuZXdQYXJhbSkge1xuICAgICAgICAgICAgICAgIHZhciBuZXdPcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YW5kYXJkT3B0aW9uc18xLnN0YW5kYXJkT3B0aW9ucyksIG5ld1BhcmFtKTtcbiAgICAgICAgICAgICAgICAkc2xpZGVyLmRhdGEoJ3ByZXNlbnRlcicsIG5ldyBQcmVzZW50ZXJfMS5QcmVzZW50ZXIobmV3T3B0aW9ucywgJHNsaWRlcikpO1xuICAgICAgICAgICAgICAgIHJldHVybiAkc2xpZGVyO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24gKCRzbGlkZXIsIHZhbHVlcykge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS5zZXRPcHRpb25zKHZhbHVlcyk7XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS51cERhdGFWaWV3KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0VmFsdWU6IGZ1bmN0aW9uICgkc2xpZGVyLCBmdW5jKSB7XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS5lbWl0dGVyLnN1YnNjcmliZShpbnRlcmZhY2VzXzEuRXZlbnRzLk5FV19EQVRBLCBmdW5jKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGZ1bmMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAkc2xpZGVyLmRhdGEoJ3ByZXNlbnRlcicpLmVtaXR0ZXIuc3Vic2NyaWJlKGludGVyZmFjZXNfMS5FdmVudHMuTkVXX0RBVEEsIGZ1bmMpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGlzTWV0aG9kID0gdHlwZW9mIG1ldGhvZCA9PT0gJ29iamVjdCcgfHwgIW1ldGhvZDtcbiAgICAgICAgaWYgKHR5cGVvZiBtZXRob2QgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gKF9hID0gbWV0aG9kc1ttZXRob2RdKS5jYWxsLmFwcGx5KF9hLCBfX3NwcmVhZEFycmF5cyhbdGhpcywgdGhpc10sIGFyZykpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc01ldGhvZCkge1xuICAgICAgICAgICAgcmV0dXJuIG1ldGhvZHMuaW5pdCh0aGlzLCBtZXRob2QpO1xuICAgICAgICB9XG4gICAgfTtcbn0oalF1ZXJ5KSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByZXNlbnRlciA9IHZvaWQgMDtcbnZhciBNb2RlbF8xID0gcmVxdWlyZShcIi4uL01vZGVsL01vZGVsXCIpO1xudmFyIFZpZXdfMSA9IHJlcXVpcmUoXCIuLi9WaWV3L1ZpZXdcIik7XG52YXIgaW50ZXJmYWNlc18xID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiKTtcbnZhciBFdmVudEVtaXR0ZXJfMSA9IHJlcXVpcmUoXCIuLi9FdmVudEVtaXR0ZXIvRXZlbnRFbWl0dGVyXCIpO1xudmFyIHN0YW5kYXJkT3B0aW9uc18xID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZXMvc3RhbmRhcmRPcHRpb25zXCIpO1xudmFyIFByZXNlbnRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcmVzZW50ZXIob3B0aW9ucywgZWxlbWVudCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLmVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyXzEuRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMubW9kZWwgPSB0aGlzLmNyZWF0ZU1vZGVsKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLnZpZXcgPSB0aGlzLmNyZWF0ZVZpZXcodGhpcy5tb2RlbC5zdGF0ZSwgZWxlbWVudCk7XG4gICAgICAgIHRoaXMuYmluZFN1YnNjcmliZSgpO1xuICAgIH1cbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLnVwRGF0YVZpZXcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMudmlldy51cERhdGFTbGlkZXIoKTtcbiAgICB9O1xuICAgIFByZXNlbnRlci5wcm90b3R5cGUuc2V0T3B0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBuZXdPcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YW5kYXJkT3B0aW9uc18xLnN0YW5kYXJkT3B0aW9ucyksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLm1vZGVsLnNldERhdGEobmV3T3B0aW9ucyk7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLmdldE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1vZGVsLnN0YXRlO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5jcmVhdGVNb2RlbCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgTW9kZWxfMS5Nb2RlbChvcHRpb25zKTtcbiAgICB9O1xuICAgIFByZXNlbnRlci5wcm90b3R5cGUuY3JlYXRlVmlldyA9IGZ1bmN0aW9uIChvcHRpb25zLCBlbGVtZW50KSB7XG4gICAgICAgIHJldHVybiBuZXcgVmlld18xLlZpZXcob3B0aW9ucywgZWxlbWVudCk7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLmJpbmRTdWJzY3JpYmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZ2V0TmV3RGF0YSA9IHRoaXMuZ2V0TmV3RGF0YS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnNlbmROZXdQb3NpdGlvbiA9IHRoaXMuc2VuZE5ld1Bvc2l0aW9uLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuYWRkU3Vic2NyaWJ0aW9ucygpO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5hZGRTdWJzY3JpYnRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm1vZGVsLmVtaXR0ZXIuc3Vic2NyaWJlKGludGVyZmFjZXNfMS5FdmVudHMuTkVXX0RBVEEsIHRoaXMuZ2V0TmV3RGF0YSk7XG4gICAgICAgIHRoaXMudmlldy5lbWl0dGVyLnN1YnNjcmliZShpbnRlcmZhY2VzXzEuRXZlbnRzLk5FV19QT1NJVElPTiwgdGhpcy5zZW5kTmV3UG9zaXRpb24pO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5nZXROZXdEYXRhID0gZnVuY3Rpb24gKG5ld0RhdGEpIHtcbiAgICAgICAgdGhpcy52aWV3LnVwRGF0YShuZXdEYXRhKTtcbiAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoaW50ZXJmYWNlc18xLkV2ZW50cy5ORVdfREFUQSwgbmV3RGF0YSk7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLnNlbmROZXdQb3NpdGlvbiA9IGZ1bmN0aW9uIChuZXdQb3NpdGlvbikge1xuICAgICAgICB2YXIgbW9kZWxTdGF0ZSA9IHRoaXMubW9kZWwuc3RhdGU7XG4gICAgICAgIHZhciBuZXdEYXRhID0gX19hc3NpZ24oX19hc3NpZ24oe30sIG1vZGVsU3RhdGUpLCBuZXdQb3NpdGlvbik7XG4gICAgICAgIHRoaXMubW9kZWwuc2V0RGF0YShuZXdEYXRhKTtcbiAgICB9O1xuICAgIHJldHVybiBQcmVzZW50ZXI7XG59KCkpO1xuZXhwb3J0cy5QcmVzZW50ZXIgPSBQcmVzZW50ZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1vZGVsID0gdm9pZCAwO1xudmFyIGludGVyZmFjZXNfMSA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzL2ludGVyZmFjZXNcIik7XG52YXIgRXZlbnRFbWl0dGVyXzEgPSByZXF1aXJlKFwiLi4vRXZlbnRFbWl0dGVyL0V2ZW50RW1pdHRlclwiKTtcbnZhciBNb2RlbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNb2RlbChPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXJfMS5FdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuaW5pdChPcHRpb25zKTtcbiAgICB9XG4gICAgTW9kZWwucHJvdG90eXBlLnNldERhdGEgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICB2YXIgdmFsaWRhdGVGcm9tVG8gPSB0aGlzLnZhbGlkYXRlRnJvbVRvKE9wdGlvbnMpO1xuICAgICAgICB2YXIgdmFsaWRhdGVNaW5NYXhTdGVwID0gdGhpcy52YWxpZGF0ZU1pbk1heFN0ZXAoT3B0aW9ucyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBfX2Fzc2lnbihfX2Fzc2lnbihfX2Fzc2lnbih7fSwgT3B0aW9ucyksIHZhbGlkYXRlRnJvbVRvKSwgdmFsaWRhdGVNaW5NYXhTdGVwKTtcbiAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoaW50ZXJmYWNlc18xLkV2ZW50cy5ORVdfREFUQSwgdGhpcy5zdGF0ZSk7XG4gICAgfTtcbiAgICBNb2RlbC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uIChPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YShPcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGU7XG4gICAgfTtcbiAgICBNb2RlbC5wcm90b3R5cGUudmFsaWRhdGVNaW5NYXhTdGVwID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG1pbiA9IE9wdGlvbnMubWluLCBtYXggPSBPcHRpb25zLm1heCwgc3RlcCA9IE9wdGlvbnMuc3RlcDtcbiAgICAgICAgaWYgKHN0ZXAgPD0gMClcbiAgICAgICAgICAgIE9wdGlvbnMuc3RlcCA9IDAuMTtcbiAgICAgICAgdmFyIGlzTWF4TWluID0gbWF4IDw9IG1pbiAmJiBtYXggPCAwO1xuICAgICAgICB2YXIgaXNNaW5NYXggPSAobWluID49IG1heCAmJiBtYXggPiAwKSB8fCAobWF4IDwgMCAmJiBtYXggPCBtaW4pO1xuICAgICAgICBpZiAoaXNNYXhNaW4pIHtcbiAgICAgICAgICAgIE9wdGlvbnMubWluID0gbWluIC0gc3RlcDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNNaW5NYXgpIHtcbiAgICAgICAgICAgIE9wdGlvbnMubWluID0gbWluO1xuICAgICAgICAgICAgT3B0aW9ucy5tYXggPSBtaW4gKyBzdGVwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPcHRpb25zO1xuICAgIH07XG4gICAgTW9kZWwucHJvdG90eXBlLnZhbGlkYXRlRnJvbVRvID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGZyb20gPSBPcHRpb25zLmZyb20sIHRvID0gT3B0aW9ucy50bywgbWF4ID0gT3B0aW9ucy5tYXgsIG1pbiA9IE9wdGlvbnMubWluLCBzdGVwID0gT3B0aW9ucy5zdGVwLCBpc0RvdWJsZSA9IE9wdGlvbnMuaXNEb3VibGU7XG4gICAgICAgIGlmIChpc0RvdWJsZSkge1xuICAgICAgICAgICAgT3B0aW9ucy50byA9IG1heDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbWF4TWluWmVybyA9IG1heCA8IDAgJiYgbWluID09PSAwO1xuICAgICAgICB2YXIgaXNNaW5NYXhaZXJvID0gbWluIDwgMCAmJiBtYXggPCAwO1xuICAgICAgICB2YXIgaXNTaW5nbGVGcm9tID0gIWlzRG91YmxlICYmIGZyb20gPj0gdG87XG4gICAgICAgIHZhciBpc0NvcnJlY3RGcm9tID0gZnJvbSA+IDAgJiYgaXNNaW5NYXhaZXJvO1xuICAgICAgICBpZiAoZnJvbSA+IG1heClcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1heCAtIHN0ZXA7XG4gICAgICAgIGlmIChmcm9tIDwgbWluKVxuICAgICAgICAgICAgT3B0aW9ucy5mcm9tID0gbWluO1xuICAgICAgICBpZiAodG8gPiBtYXgpXG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWF4O1xuICAgICAgICBpZiAobWF4TWluWmVybykge1xuICAgICAgICAgICAgT3B0aW9ucy5mcm9tID0gbWluO1xuICAgICAgICAgICAgT3B0aW9ucy50byA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNTaW5nbGVGcm9tKSB7XG4gICAgICAgICAgICBPcHRpb25zLmZyb20gPSB0byAtIHN0ZXA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQ29ycmVjdEZyb20pIHtcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG8gPD0gbWluKSB7XG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWluICsgc3RlcDtcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWF4IDwgbWluKSB7XG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWluICsgc3RlcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gT3B0aW9ucztcbiAgICB9O1xuICAgIHJldHVybiBNb2RlbDtcbn0oKSk7XG5leHBvcnRzLk1vZGVsID0gTW9kZWw7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZpZXcgPSB2b2lkIDA7XG52YXIgRXZlbnRFbWl0dGVyXzEgPSByZXF1aXJlKFwiLi4vRXZlbnRFbWl0dGVyL0V2ZW50RW1pdHRlclwiKTtcbnZhciBSb2xsZXJzXzEgPSByZXF1aXJlKFwiLi9Sb2xsZXJzL1JvbGxlcnNcIik7XG52YXIgVHJhY2tfMSA9IHJlcXVpcmUoXCIuL1RyYWNrL1RyYWNrXCIpO1xudmFyIFNjYWxlXzEgPSByZXF1aXJlKFwiLi9TY2FsZS9TY2FsZVwiKTtcbnZhciBCYXJfMSA9IHJlcXVpcmUoXCIuL0Jhci9CYXJcIik7XG52YXIgaW50ZXJmYWNlc18xID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiKTtcbnZhciBjbGFzc05hbWVzXzEgPSByZXF1aXJlKFwiLi4vbGlicy9jbGFzc05hbWVzXCIpO1xudmFyIFZpZXcgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVmlldyhPcHRpb25zLCBlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuZW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXJfMS5FdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy5zbGlkZXIgPSB0aGlzLmNyZWF0ZVNsaWRlcihPcHRpb25zLCBlbGVtZW50KTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuaW5pdChPcHRpb25zKTtcbiAgICAgICAgdGhpcy5yb2xsZXJzID0gdGhpcy5jcmVhdGVSb2xsZXJzKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLmJhciA9IHRoaXMuY3JlYXRlQmFyKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLnRyYWNrID0gdGhpcy5jcmVhdGVUcmFjayh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5zY2FsZSA9IHRoaXMuY3JlYXRlU2NhbGUodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMudXBEYXRhKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLmJpbmRFdmVudExpc3RlbmVycygpO1xuICAgIH1cbiAgICAvLyAqINCg0LDRgdGI0LjRgNGP0Y4gT3B0aW9ucyDQtNC+IElWaWV3U3RhdGVcbiAgICBWaWV3LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHNpemUgPSB0aGlzLmdldFNsaWRlclNpemUoT3B0aW9ucyk7XG4gICAgICAgIHZhciBvbmVTdGVwID0gdGhpcy5nZXRPbmVTdGVwKE9wdGlvbnMpO1xuICAgICAgICB2YXIgc2xpZGVyID0gdGhpcy5zbGlkZXI7XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgT3B0aW9ucyksIHsgc2l6ZTogc2l6ZSxcbiAgICAgICAgICAgIG9uZVN0ZXA6IG9uZVN0ZXAsXG4gICAgICAgICAgICBzbGlkZXI6IHNsaWRlciB9KTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmNyZWF0ZVNsaWRlciA9IGZ1bmN0aW9uIChPcHRpb25zLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gT3B0aW9ucy5pc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgc2xpZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHNsaWRlci5jbGFzc05hbWUgPSBjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5zbGlkZXI7XG4gICAgICAgIGlmIChpc1ZlcnRpY2FsKVxuICAgICAgICAgICAgc2xpZGVyLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnNsaWRlclZlcnRpY2FsO1xuICAgICAgICBlbGVtZW50LmFwcGVuZChzbGlkZXIpO1xuICAgICAgICByZXR1cm4gc2xpZGVyO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuY3JlYXRlVHJhY2sgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFRyYWNrXzEuVHJhY2soT3B0aW9ucyk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5jcmVhdGVCYXIgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IEJhcl8xLkJhcihPcHRpb25zKTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmNyZWF0ZVJvbGxlcnMgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFJvbGxlcnNfMS5Sb2xsZXJzKE9wdGlvbnMpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuY3JlYXRlU2NhbGUgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFNjYWxlXzEuU2NhbGUoT3B0aW9ucyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAqINCe0LHQvdC+0LLQu9GP0Y4g0YHRgtC+0YHRgtC+0Y/QvdC40LUgVmlld1xuICAgICog0J7QsdC90L7QstC70Y/RjiDRgdC+0YHRgtC+0Y/QvdC40LUg0LLRgdC10YUg0L/QvtC00LLQuNC00L7QslxuICAgICogKi9cbiAgICBWaWV3LnByb3RvdHlwZS51cERhdGEgPSBmdW5jdGlvbiAobmV3U3RhdGUpIHtcbiAgICAgICAgdmFyIHVwZGF0YVN0YXRlID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHRoaXMuc3RhdGUpLCBuZXdTdGF0ZSk7XG4gICAgICAgIHRoaXMucm9sbGVycy51cERhdGEodXBkYXRhU3RhdGUpO1xuICAgICAgICB0aGlzLmJhci51cERhdGEodXBkYXRhU3RhdGUpO1xuICAgICAgICB0aGlzLnNjYWxlLnVwRGF0YSh1cGRhdGFTdGF0ZSk7XG4gICAgICAgIHRoaXMudHJhY2suc2V0T3V0KHVwZGF0YVN0YXRlKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IF9fYXNzaWduKHt9LCB1cGRhdGFTdGF0ZSk7XG4gICAgfTtcbiAgICAvLyDQnNC10YLQvtC0INC/0LXRgNC10YHQsdC+0YDQutC4INGB0LvQsNC50LTQtdGA0LAsINC40Lwg0YPQv9GA0LDQstC70Y/QtdGCINCf0YDQtdC30LXQvdGC0LXRgFxuICAgIFZpZXcucHJvdG90eXBlLnVwRGF0YVNsaWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5zbGlkZXIucmVtb3ZlKCk7XG4gICAgICAgIHRoaXMuc2xpZGVyID0gdGhpcy5jcmVhdGVTbGlkZXIodGhpcy5zdGF0ZSwgdGhpcy5lbGVtZW50KTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuaW5pdCh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5yb2xsZXJzID0gdGhpcy5jcmVhdGVSb2xsZXJzKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLnNjYWxlID0gdGhpcy5jcmVhdGVTY2FsZSh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy50cmFjayA9IHRoaXMuY3JlYXRlVHJhY2sodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMuYmFyID0gdGhpcy5jcmVhdGVCYXIodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMudXBEYXRhKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLmJpbmRFdmVudExpc3RlbmVycygpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZ2V0T25lU3RlcCA9IGZ1bmN0aW9uIChPcHRpb25zKSB7XG4gICAgICAgIHZhciBtaW4gPSBPcHRpb25zLm1pbiwgbWF4ID0gT3B0aW9ucy5tYXgsIHN0ZXAgPSBPcHRpb25zLnN0ZXA7XG4gICAgICAgIHZhciByZXN1bHQgPSBNYXRoLmNlaWwoKG1heCAtIG1pbikgLyBzdGVwKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0U2xpZGVyU2l6ZShPcHRpb25zKSAvIHJlc3VsdDtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmJpbmRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVUcmFja0NsaWNrID0gdGhpcy5oYW5kbGVUcmFja0NsaWNrLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuaGFuZGxlU2NhbGVDbGljayA9IHRoaXMuaGFuZGxlU2NhbGVDbGljay5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGhhbmRsZVNsaWRlckRyYWcgPSB0aGlzLmRyYWdTdGFydC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnNsaWRlci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgaGFuZGxlU2xpZGVyRHJhZyk7XG4gICAgICAgIHRoaXMuc2xpZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGhhbmRsZVNsaWRlckRyYWcpO1xuICAgICAgICB0aGlzLnNsaWRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlVHJhY2tDbGljayk7XG4gICAgICAgIHRoaXMuc2xpZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ3NjYWxlY2xpY2snLCB0aGlzLmhhbmRsZVNjYWxlQ2xpY2spO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZHJhZ1N0YXJ0ID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIGlmICh0aGlzLmdldFRhcmdldFR5cGUodGFyZ2V0KSkge1xuICAgICAgICAgICAgdmFyIGRyYWdfMSA9IHRoaXMuZHJhZy5iaW5kKHRoaXMsIHRhcmdldCk7XG4gICAgICAgICAgICB2YXIgaGFuZGxlVXBfMSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnXzEpO1xuICAgICAgICAgICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBkcmFnXzEpO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVVcF8xKTtcbiAgICAgICAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBoYW5kbGVVcF8xKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnXzEpO1xuICAgICAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIGRyYWdfMSk7XG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlVXBfMSk7XG4gICAgICAgICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBoYW5kbGVVcF8xKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZHJhZyA9IGZ1bmN0aW9uICh0YXJnZXQsIGV2ZW50KSB7XG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gdGhpcy5zdGF0ZS5pc1ZlcnRpY2FsO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgbW91c2VWYWx1ZSA9IDA7XG4gICAgICAgIHZhciByZWdleHAgPSAvdG9vbHRpcCB8fCByb2xsZXIvO1xuICAgICAgICB2YXIgaXNIYW5kbGUgPSAhcmVnZXhwLnRlc3QodGFyZ2V0LmNsYXNzTmFtZSk7XG4gICAgICAgIGlmIChpc0hhbmRsZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIHNlbnNvckhvcml6b250YWxFdmVudCA9IGV2ZW50LnR5cGUgPT09ICd0b3VjaG1vdmUnICYmICFpc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgbW91c2VIb3Jpem9udGFsRXZlbnQgPSBldmVudC50eXBlID09PSAnbW91c2Vtb3ZlJyAmJiAhaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHNlbnNvclZlcnRpY2FsRXZlbnQgPSBldmVudC50eXBlID09PSAndG91Y2htb3ZlJyAmJiBpc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgbW91c2VWZXJ0aWNhbEV2ZW50ID0gZXZlbnQudHlwZSA9PT0gJ21vdXNlbW92ZScgJiYgaXNWZXJ0aWNhbDtcbiAgICAgICAgaWYgKHNlbnNvckhvcml6b250YWxFdmVudCkge1xuICAgICAgICAgICAgbW91c2VWYWx1ZSA9IHRoaXMuY29udmVydFB4VG9WYWx1ZShldmVudC50b3VjaGVzWzBdLmNsaWVudFgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb3VzZUhvcml6b250YWxFdmVudCkge1xuICAgICAgICAgICAgbW91c2VWYWx1ZSA9IHRoaXMuY29udmVydFB4VG9WYWx1ZShldmVudC5jbGllbnRYKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2Vuc29yVmVydGljYWxFdmVudCkge1xuICAgICAgICAgICAgbW91c2VWYWx1ZSA9IHRoaXMuY29udmVydFB4VG9WYWx1ZShldmVudC50b3VjaGVzWzBdLmNsaWVudFkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb3VzZVZlcnRpY2FsRXZlbnQpIHtcbiAgICAgICAgICAgIG1vdXNlVmFsdWUgPSB0aGlzLmNvbnZlcnRQeFRvVmFsdWUoZXZlbnQuY2xpZW50WSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51cGRhdGVQb3NpdGlvbihtb3VzZVZhbHVlLCB0YXJnZXQpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZ2V0VGFyZ2V0VHlwZSA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICAgICAgdmFyIFRBUkdFVF9GT1JXQVJEID0gaW50ZXJmYWNlc18xLkRpcmVjdGlvbi5UQVJHRVRfRk9SV0FSRCwgVEFSR0VUX0JBQ0tXQVJEID0gaW50ZXJmYWNlc18xLkRpcmVjdGlvbi5UQVJHRVRfQkFDS1dBUkQ7XG4gICAgICAgIHZhciByb2xsZXJzID0gdGhpcy5zbGlkZXIucXVlcnlTZWxlY3RvckFsbChjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5maW5kUm9sbGVycyk7XG4gICAgICAgIHZhciBfYSA9IFtyb2xsZXJzWzBdLCByb2xsZXJzWzFdXSwgcm9sbGVyRmlyc3QgPSBfYVswXSwgcm9sbGVyU2Vjb25kID0gX2FbMV07XG4gICAgICAgIGlmIChyb2xsZXJGaXJzdC5jb250YWlucyh0YXJnZXQpKVxuICAgICAgICAgICAgcmV0dXJuIFRBUkdFVF9GT1JXQVJEO1xuICAgICAgICBpZiAocm9sbGVyU2Vjb25kLmNvbnRhaW5zKHRhcmdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBUQVJHRVRfQkFDS1dBUkQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICd1bmRlZmluZWQnO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuaGFuZGxlU2NhbGVDbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgc2NhbGVQb3N0Zml4ID0gdGhpcy5zdGF0ZS5zY2FsZVBvc3RmaXg7XG4gICAgICAgIHZhciBzZXBhcmF0ZSA9IHRoaXMuc3RhdGUuc2VwYXJhdGU7XG4gICAgICAgIHZhciB2YWx1ZSA9IGV2ZW50LmRldGFpbC52YWx1ZTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gMDtcbiAgICAgICAgaWYgKHNlcGFyYXRlID09PSAnICcpIHtcbiAgICAgICAgICAgIHNlcGFyYXRlID0gJyZuYnNwOyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRlbCA9IHZhbHVlLnNwbGl0KHNjYWxlUG9zdGZpeCkuam9pbignJyk7XG4gICAgICAgIHBvc2l0aW9uID0gZGVsLnNwbGl0KHNlcGFyYXRlKS5qb2luKCcnKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFN0cmluZyhwb3NpdGlvbikuc3BsaXQoJywnKS5qb2luKCcuJyk7XG4gICAgICAgIHRoaXMudXBkYXRlUG9zaXRpb24oTnVtYmVyKHJlc3VsdCkpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuaGFuZGxlVHJhY2tDbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgaXNWZXJ0aWNhbCA9IHRoaXMuc3RhdGUuaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgdmFyIGNvb3JkaW5hdGUgPSAwO1xuICAgICAgICB2YXIgcmVnZXhwID0gL3NjYWxlLztcbiAgICAgICAgaWYgKHJlZ2V4cC50ZXN0KHRhcmdldC5jbGFzc05hbWUpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIGNvb3JkaW5hdGUgPSBldmVudC5jbGllbnRYO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29vcmRpbmF0ZSA9IGV2ZW50LmNsaWVudFk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5jb252ZXJ0UHhUb1ZhbHVlKGNvb3JkaW5hdGUpO1xuICAgICAgICB0aGlzLnVwZGF0ZVBvc2l0aW9uKHZhbHVlKTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLnVwZGF0ZVBvc2l0aW9uID0gZnVuY3Rpb24gKHZhbHVlLCB0YXJnZXQpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5zdGF0ZSwgZnJvbSA9IF9hLmZyb20sIHRvID0gX2EudG8sIHN0ZXAgPSBfYS5zdGVwLCBpc0RvdWJsZSA9IF9hLmlzRG91YmxlO1xuICAgICAgICB2YXIgRk9SV0FSRCA9IGludGVyZmFjZXNfMS5EaXJlY3Rpb24uRk9SV0FSRCwgQkFDS1dBUkQgPSBpbnRlcmZhY2VzXzEuRGlyZWN0aW9uLkJBQ0tXQVJELCBUQVJHRVRfRk9SV0FSRCA9IGludGVyZmFjZXNfMS5EaXJlY3Rpb24uVEFSR0VUX0ZPUldBUkQsIFRBUkdFVF9CQUNLV0FSRCA9IGludGVyZmFjZXNfMS5EaXJlY3Rpb24uVEFSR0VUX0JBQ0tXQVJEO1xuICAgICAgICB2YXIgTkVXX1BPU0lUSU9OID0gaW50ZXJmYWNlc18xLkV2ZW50cy5ORVdfUE9TSVRJT047XG4gICAgICAgIHZhciBmcm9tRGlzdGFuY2UgPSBNYXRoLmFicyhmcm9tIC0gdmFsdWUpO1xuICAgICAgICB2YXIgdG9EaXN0YW5jZSA9IE1hdGguYWJzKHRvIC0gdmFsdWUpO1xuICAgICAgICB2YXIgaXNTaW5nbGVGcm9tID0gaXNEb3VibGUgJiYgZnJvbURpc3RhbmNlO1xuICAgICAgICBpZiAoaXNTaW5nbGVGcm9tKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChORVdfUE9TSVRJT04sIHtcbiAgICAgICAgICAgICAgICBmcm9tOiB2YWx1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0VmFsdWVUb0NvbG9yKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaXNGcm9tID0gKGZyb21EaXN0YW5jZSA8IHRvRGlzdGFuY2UpID8gRk9SV0FSRCA6IEJBQ0tXQVJEO1xuICAgICAgICB2YXIgdGFyZ2V0RnJvbSA9ICF0YXJnZXQgJiYgaXNGcm9tID09PSBGT1JXQVJEO1xuICAgICAgICB2YXIgdGFyZ2V0VG8gPSAhdGFyZ2V0ICYmIGlzRnJvbSA9PT0gQkFDS1dBUkQ7XG4gICAgICAgIGlmICh0YXJnZXRGcm9tKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChORVdfUE9TSVRJT04sIHtcbiAgICAgICAgICAgICAgICBmcm9tOiB2YWx1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0VmFsdWVUb0NvbG9yKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGFyZ2V0VG8pIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5lbWl0KE5FV19QT1NJVElPTiwge1xuICAgICAgICAgICAgICAgIHRvOiB2YWx1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0VmFsdWVUb0NvbG9yKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdGFyZ2V0cyA9IHRhcmdldCAmJiB0aGlzLmdldFRhcmdldFR5cGUodGFyZ2V0KTtcbiAgICAgICAgdmFyIGlzRnJvbVRhcmdldCA9IHRhcmdldHMgPT09IFRBUkdFVF9GT1JXQVJEICYmICFpc0RvdWJsZTtcbiAgICAgICAgdmFyIGlzVG9UYXJnZXQgPSB0YXJnZXRzID09PSBUQVJHRVRfQkFDS1dBUkQgJiYgIWlzRG91YmxlO1xuICAgICAgICB2YXIgY29ycmVjdEZyb20gPSBpc0Zyb21UYXJnZXQgJiYgdmFsdWUgPiB0byAtIHN0ZXA7XG4gICAgICAgIHZhciBjb3JyZWN0VG8gPSBpc1RvVGFyZ2V0ICYmIHZhbHVlIDwgZnJvbSArIHN0ZXA7XG4gICAgICAgIGlmIChjb3JyZWN0RnJvbSkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoTkVXX1BPU0lUSU9OLCB7XG4gICAgICAgICAgICAgICAgZnJvbTogdG8gLSBzdGVwLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRnJvbVRhcmdldCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoTkVXX1BPU0lUSU9OLCB7XG4gICAgICAgICAgICAgICAgZnJvbTogdmFsdWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuY29udmVydFZhbHVlVG9Db2xvcih2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvcnJlY3RUbykge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoTkVXX1BPU0lUSU9OLCB7XG4gICAgICAgICAgICAgICAgdG86IGZyb20gKyBzdGVwLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzVG9UYXJnZXQpIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5lbWl0KE5FV19QT1NJVElPTiwge1xuICAgICAgICAgICAgICAgIHRvOiB2YWx1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0VmFsdWVUb0NvbG9yKHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuY29udmVydFB4VG9WYWx1ZSA9IGZ1bmN0aW9uIChjb29yZGluYXRlKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMuc3RhdGUsIG1pbiA9IF9hLm1pbiwgbWF4ID0gX2EubWF4LCBzdGVwID0gX2Euc3RlcCwgb25lU3RlcCA9IF9hLm9uZVN0ZXAsIHNpemUgPSBfYS5zaXplLCBpc1ZlcnRpY2FsID0gX2EuaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHNsaWRlclBvcyA9IHRoaXMuZ2V0U2xpZGVyUG9zaXRpb24oKTtcbiAgICAgICAgdmFyIHNsaWRlckVuZFBvcyA9IHNsaWRlclBvcyArIHNpemU7XG4gICAgICAgIHZhciBweCA9IDA7XG4gICAgICAgIGlmICghaXNWZXJ0aWNhbCkge1xuICAgICAgICAgICAgcHggPSBjb29yZGluYXRlIC0gc2xpZGVyUG9zO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHggPSBzbGlkZXJFbmRQb3MgLSBjb29yZGluYXRlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChweCA+IHNpemUpXG4gICAgICAgICAgICByZXR1cm4gbWF4O1xuICAgICAgICBpZiAocHggPCAwKVxuICAgICAgICAgICAgcmV0dXJuIG1pbjtcbiAgICAgICAgdmFyIHZhbHVlID0gTWF0aC5yb3VuZChweCAvIG9uZVN0ZXApICogc3RlcCArIG1pbjtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgLyoqXG4gICAgKiDQktGL0YfQtdGB0LvRj9C10Lwg0L3QvtCy0YvQuSDRhtCy0LXRgiDQsiDQt9Cw0LLQuNGB0LjQvNC+0YHRgtC4INC+0YIg0L/QvtC70L7QttC10L3QuNGPINCx0LXQs9GD0L3QutC+0LJcbiAgICAqINCf0LXRgNC10LLQvtC00LjQvCB2YWx1ZSDQsiAxNi3RgNC40YfQvdGL0Lkg0YTQvtGA0LzQsNGCXG4gICAgKiAqL1xuICAgIFZpZXcucHJvdG90eXBlLmNvbnZlcnRWYWx1ZVRvQ29sb3IgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5zdGF0ZSwgY29sb3IgPSBfYS5jb2xvciwgZ3JhZGllbnQgPSBfYS5ncmFkaWVudDtcbiAgICAgICAgdmFyIF9iID0gdGhpcy5zdGF0ZSwgbWF4ID0gX2IubWF4LCBpc0NvbG9yID0gX2IuaXNDb2xvciwgY2hhbmdlQ29sb3IgPSBfYi5jaGFuZ2VDb2xvcjtcbiAgICAgICAgdmFyIHZhbCA9IHZhbHVlIC8gbWF4O1xuICAgICAgICB2YXIgaXNDaGFuZ2VDb2xvciA9IGlzQ29sb3IgJiYgIWNoYW5nZUNvbG9yO1xuICAgICAgICB2YXIgaXNDaGFuZ2VOZXdDb2xvciA9IGlzQ29sb3IgJiYgY2hhbmdlQ29sb3I7XG4gICAgICAgIHZhciBwYWxpdHJhID0gMDtcbiAgICAgICAgdmFyIGdyUGFsaXRyYSA9IDA7XG4gICAgICAgIGlmIChpc0NoYW5nZUNvbG9yKSB7XG4gICAgICAgICAgICBwYWxpdHJhID0gTWF0aC5yb3VuZCh2YWwgKiAyNTUgKiAyNTUgKiAyNTUpO1xuICAgICAgICAgICAgZ3JQYWxpdHJhID0gTWF0aC5yb3VuZCh2YWwgKiAyNTUgKiAyNTQgKiAyNTQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0NoYW5nZU5ld0NvbG9yKSB7XG4gICAgICAgICAgICBwYWxpdHJhID0gTWF0aC5yb3VuZCh2YWwgKiAyNTYgKiAyNTYgKiAyNTUpO1xuICAgICAgICAgICAgZ3JQYWxpdHJhID0gTWF0aC5yb3VuZCh2YWwgKiAyNTQgKiAyNTQgKiAyNTQpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjb3JyZWN0R3JhZGllbnQgPSBNYXRoLmFicyhnclBhbGl0cmEpO1xuICAgICAgICB2YXIgY29ycmVjdCA9IE1hdGguYWJzKHBhbGl0cmEpO1xuICAgICAgICB2YXIgc2V0Q29sb3IgPSBjb3JyZWN0LnRvU3RyaW5nKDE2KTtcbiAgICAgICAgdmFyIHNldEdyYWRpZW50ID0gY29ycmVjdEdyYWRpZW50LnRvU3RyaW5nKDE2KTtcbiAgICAgICAgY29sb3IgPSBcIiNcIiArIHNldENvbG9yO1xuICAgICAgICBncmFkaWVudCA9IFwiI1wiICsgc2V0R3JhZGllbnQ7XG4gICAgICAgIHZhciBORVdfUE9TSVRJT04gPSBpbnRlcmZhY2VzXzEuRXZlbnRzLk5FV19QT1NJVElPTjtcbiAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoTkVXX1BPU0lUSU9OLCB7XG4gICAgICAgICAgICBjb2xvcjogY29sb3IsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChORVdfUE9TSVRJT04sIHtcbiAgICAgICAgICAgIGdyYWRpZW50OiBncmFkaWVudCxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5nZXRTbGlkZXJQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5zdGF0ZSwgc2xpZGVyID0gX2Euc2xpZGVyLCBpc1ZlcnRpY2FsID0gX2EuaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gMDtcbiAgICAgICAgaWYgKCFpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwb3NpdGlvbjtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmdldFNsaWRlclNpemUgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIGlzVmVydGljYWwgPSBfYS5pc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgc2l6ZSA9IDA7XG4gICAgICAgIGlmICghaXNWZXJ0aWNhbCkge1xuICAgICAgICAgICAgc2l6ZSA9IHRoaXMuc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2l6ZSA9IHRoaXMuc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICB9O1xuICAgIHJldHVybiBWaWV3O1xufSgpKTtcbmV4cG9ydHMuVmlldyA9IFZpZXc7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUm9sbGVycyA9IHZvaWQgMDtcbnZhciBjb3JyZWN0U2VwYXJhdGVfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL2NvcnJlY3RTZXBhcmF0ZVwiKTtcbnZhciBjbGFzc05hbWVzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGlicy9jbGFzc05hbWVzXCIpO1xudmFyIFJvbGxlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUm9sbGVycyhvcHRpb25zKSB7XG4gICAgICAgIHRoaXMucm9sbGVycyA9IHRoaXMuY3JlYXRlKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLnRvb2x0aXBzID0gdGhpcy5jcmVhdGVUb29sdGlwKCk7XG4gICAgICAgIHRoaXMubW92ZVJvbGxlcnNBdFZhbHVlKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLnRvZ2dsZVJvbGxlcnMob3B0aW9ucyk7XG4gICAgfVxuICAgIFJvbGxlcnMucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgc2xpZGVyID0gX2Euc2xpZGVyO1xuICAgICAgICB2YXIgcm9sbGVyRmlyc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcm9sbGVyRmlyc3QuY2xhc3NOYW1lID0gY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMucm9sbGVyRmlyc3Q7XG4gICAgICAgIHZhciByb2xsZXJTZWNvbmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcm9sbGVyU2Vjb25kLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnJvbGxlclNlY29uZDtcbiAgICAgICAgc2xpZGVyLmFwcGVuZChyb2xsZXJGaXJzdCk7XG4gICAgICAgIHNsaWRlci5hcHBlbmQocm9sbGVyU2Vjb25kKTtcbiAgICAgICAgcmV0dXJuIFtyb2xsZXJGaXJzdCwgcm9sbGVyU2Vjb25kXTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNyZWF0ZVRvb2x0aXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBmaXJzdFRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgZmlyc3RUb29sdGlwLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLmZpcnN0VG9vbHRpcDtcbiAgICAgICAgdmFyIHNlY29uZFRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgc2Vjb25kVG9vbHRpcC5jbGFzc05hbWUgPSBjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5zZWNvbmRUb29sdGlwO1xuICAgICAgICB2YXIgcm9sbGVycyA9IHRoaXMucm9sbGVycztcbiAgICAgICAgdmFyIGZpcnN0Um9sbGVyID0gcm9sbGVyc1swXSwgc2Vjb25kUm9sbGVyID0gcm9sbGVyc1sxXTtcbiAgICAgICAgZmlyc3RSb2xsZXIuYXBwZW5kKGZpcnN0VG9vbHRpcCk7XG4gICAgICAgIHNlY29uZFJvbGxlci5hcHBlbmQoc2Vjb25kVG9vbHRpcCk7XG4gICAgICAgIHJldHVybiBbZmlyc3RUb29sdGlwLCBzZWNvbmRUb29sdGlwXTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLnVwZGF0YU91dFRvb2x0aXAgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgdG8gPSBvcHRpb25zLnRvLCBmcm9tID0gb3B0aW9ucy5mcm9tLCBpc1Bvc3RmaXggPSBvcHRpb25zLmlzUG9zdGZpeCwgaXNMYWJlbCA9IG9wdGlvbnMuaXNMYWJlbCwgaXNQcmVmaXggPSBvcHRpb25zLmlzUHJlZml4O1xuICAgICAgICB2YXIgcG9zdGZpeCA9IG9wdGlvbnMucG9zdGZpeDtcbiAgICAgICAgdmFyIHRvb2x0aXBzID0gdGhpcy50b29sdGlwcztcbiAgICAgICAgdmFyIGZpcnN0VG9vbHRpcCA9IHRvb2x0aXBzWzBdLCBzZWNvbmRUb29sdGlwID0gdG9vbHRpcHNbMV07XG4gICAgICAgIGlmICghaXNQb3N0Zml4KSB7XG4gICAgICAgICAgICBwb3N0Zml4ID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzU2V0UHJlZml4ID0gaXNMYWJlbCAmJiBpc1ByZWZpeDtcbiAgICAgICAgdmFyIGlzU2V0UG9zdGZpeCA9IGlzTGFiZWwgJiYgIWlzUHJlZml4O1xuICAgICAgICAvLyDQvdCw0YHRgtGA0L7QudC60Lgg0L/QvtGB0YLRhNC40LrRgVxuICAgICAgICBpZiAoaXNTZXRQb3N0Zml4KSB7XG4gICAgICAgICAgICBmaXJzdFRvb2x0aXAuaW5uZXJIVE1MID0gXCJcIiArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShmcm9tLCBvcHRpb25zKSArIHBvc3RmaXg7XG4gICAgICAgICAgICBzZWNvbmRUb29sdGlwLmlubmVySFRNTCA9IFwiXCIgKyBjb3JyZWN0U2VwYXJhdGVfMS5jb3JyZWN0U2VwYXJhdGUodG8sIG9wdGlvbnMpICsgcG9zdGZpeDtcbiAgICAgICAgfVxuICAgICAgICAvLyDQvdCw0YHRgtGA0L7QudC60Lgg0L/RgNC10YTQuNC60YFcbiAgICAgICAgaWYgKGlzU2V0UHJlZml4KSB7XG4gICAgICAgICAgICBmaXJzdFRvb2x0aXAuaW5uZXJIVE1MID0gXCJcIiArIHBvc3RmaXggKyBjb3JyZWN0U2VwYXJhdGVfMS5jb3JyZWN0U2VwYXJhdGUoZnJvbSwgb3B0aW9ucyk7XG4gICAgICAgICAgICBzZWNvbmRUb29sdGlwLmlubmVySFRNTCA9IFwiXCIgKyBwb3N0Zml4ICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKHRvLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldENvbG9yKG9wdGlvbnMpO1xuICAgIH07XG4gICAgUm9sbGVycy5wcm90b3R5cGUuc2V0Q29sb3IgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIGNvbG9yID0gX2EuY29sb3IsIGdyYWRpZW50ID0gX2EuZ3JhZGllbnQsIGlzQ29sb3JPdXQgPSBfYS5pc0NvbG9yT3V0LCBhbGxDb2xvcnMgPSBfYS5hbGxDb2xvcnMsIGlzQ2hhbmdlQ29sb3IgPSBfYS5pc0NoYW5nZUNvbG9yLCBpc0xhYmVsID0gX2EuaXNMYWJlbDtcbiAgICAgICAgLyoqXG4gICAgICAgICog0JfQsNC00YPQvNC60LAg0YHQtNC10LvQsNGC0Ywg0L7QsdGA0LDRgtC90YvQuSDQutC+0L3QstC10LrRgtC+0YAg0LjQtyAxNi3RgNC40YfQvdC+0LPQviDQsiDQvtCx0YvRh9C90YvQuSDQstC40LQsINC90LDQv9GA0LjQvNC10YAgI2ZmZiDQslxuICAgICAgICB3aGl0ZSwg0Lgg0LIg0LTQsNC70YzQvdC10LnRiNC10Lwg0YHQvtCx0LjRgNCw0LvRgdGPINC00L7Qv9C+0LvQvdGP0YLRjCDQv9C10YDQtdCy0L7QtFxuICAgICAgICAqICovXG4gICAgICAgIHZhciBuZXdDb2xvciA9IGFsbENvbG9yc1tjb2xvcl07XG4gICAgICAgIHZhciBuZXdHcmFkaWVudCA9IGFsbENvbG9yc1tncmFkaWVudF07XG4gICAgICAgIGlmICghbmV3R3JhZGllbnQpIHtcbiAgICAgICAgICAgIG5ld0dyYWRpZW50ID0gZ3JhZGllbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFuZXdDb2xvcikge1xuICAgICAgICAgICAgbmV3Q29sb3IgPSBjb2xvcjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdG9vbHRpcHMgPSB0aGlzLnRvb2x0aXBzO1xuICAgICAgICB2YXIgZmlyc3RUb29sdGlwID0gdG9vbHRpcHNbMF0sIHNlY29uZFRvb2x0aXAgPSB0b29sdGlwc1sxXTtcbiAgICAgICAgdmFyIHNldE5ld0NvbG9yID0gaXNDaGFuZ2VDb2xvciAmJiBpc0NvbG9yT3V0O1xuICAgICAgICBpZiAoc2V0TmV3Q29sb3IpIHtcbiAgICAgICAgICAgIGZpcnN0VG9vbHRpcC5pbm5lckhUTUwgPSBTdHJpbmcobmV3Q29sb3IpO1xuICAgICAgICAgICAgc2Vjb25kVG9vbHRpcC5pbm5lckhUTUwgPSBTdHJpbmcobmV3R3JhZGllbnQpO1xuICAgICAgICAgICAgZmlyc3RUb29sdGlwLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiXCIgKyBjb2xvcjtcbiAgICAgICAgICAgIHNlY29uZFRvb2x0aXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJcIiArIGdyYWRpZW50O1xuICAgICAgICAgICAgZmlyc3RUb29sdGlwLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMudG9vbHRpcFdoaXRlKTtcbiAgICAgICAgICAgIHNlY29uZFRvb2x0aXAuY2xhc3NMaXN0LmFkZChjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy50b29sdGlwV2hpdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNMYWJlbCkge1xuICAgICAgICAgICAgZmlyc3RUb29sdGlwLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgICAgICBzZWNvbmRUb29sdGlwLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLnVwZGF0YUNvbG9yID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBjb2xvciA9IF9hLmNvbG9yLCBpc0dyYWRpZW50ID0gX2EuaXNHcmFkaWVudCwgZ3JhZGllbnQgPSBfYS5ncmFkaWVudCwgaXNDaGFuZ2VDb2xvciA9IF9hLmlzQ2hhbmdlQ29sb3IsIGdyYWRpZW50RGVnID0gX2EuZ3JhZGllbnREZWc7XG4gICAgICAgIHZhciByb2xsZXJzID0gdGhpcy5yb2xsZXJzO1xuICAgICAgICB2YXIgZmlyc3RSb2xsZXIgPSByb2xsZXJzWzBdLCBzZWNvbmRSb2xsZXIgPSByb2xsZXJzWzFdO1xuICAgICAgICB2YXIgaXNDaGFuZ2VHcmFkaWVudCA9IGlzQ2hhbmdlQ29sb3IgJiYgaXNHcmFkaWVudDtcbiAgICAgICAgdmFyIGlzQ29sb3IgPSBpc0NoYW5nZUNvbG9yICYmICFpc0dyYWRpZW50O1xuICAgICAgICBpZiAoaXNDaGFuZ2VHcmFkaWVudCkge1xuICAgICAgICAgICAgZmlyc3RSb2xsZXIuc3R5bGUuYmFja2dyb3VuZCA9IFwibGluZWFyLWdyYWRpZW50KFwiICsgZ3JhZGllbnREZWcgKyBcImRlZywgXCIgKyBjb2xvciArIFwiLCBcIiArIGdyYWRpZW50ICsgXCIpXCI7XG4gICAgICAgICAgICBzZWNvbmRSb2xsZXIuc3R5bGUuYmFja2dyb3VuZCA9IFwibGluZWFyLWdyYWRpZW50KFwiICsgZ3JhZGllbnREZWcgKyBcImRlZywgXCIgKyBjb2xvciArIFwiLCBcIiArIGdyYWRpZW50ICsgXCIpXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQ29sb3IpIHtcbiAgICAgICAgICAgIGZpcnN0Um9sbGVyLnN0eWxlLmJhY2tncm91bmQgPSBjb2xvcjtcbiAgICAgICAgICAgIHNlY29uZFJvbGxlci5zdHlsZS5iYWNrZ3JvdW5kID0gY29sb3I7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLm1vdmVSb2xsZXJzQXRWYWx1ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciB0byA9IG9wdGlvbnMudG8sIGZyb20gPSBvcHRpb25zLmZyb20sIGlzVmVydGljYWwgPSBvcHRpb25zLmlzVmVydGljYWw7XG4gICAgICAgIHZhciByb2xsZXJzID0gdGhpcy5yb2xsZXJzO1xuICAgICAgICB2YXIgZmlyc3RSb2xsZXIgPSByb2xsZXJzWzBdLCBzZWNvbmRSb2xsZXIgPSByb2xsZXJzWzFdO1xuICAgICAgICB2YXIgcHhUbyA9IHRoaXMuY29udmVydFZhbHVlVG9QeCh0bywgb3B0aW9ucyk7XG4gICAgICAgIHZhciBweEZyb20gPSB0aGlzLmNvbnZlcnRWYWx1ZVRvUHgoZnJvbSwgb3B0aW9ucyk7XG4gICAgICAgIHZhciBwb3NpdGlvblRvID0gdGhpcy5jb252ZXJ0UHhUb1Byb2NlbnQocHhUbywgb3B0aW9ucyk7XG4gICAgICAgIHZhciBwb3NpdGlvbkZyb20gPSB0aGlzLmNvbnZlcnRQeFRvUHJvY2VudChweEZyb20sIG9wdGlvbnMpO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIGZpcnN0Um9sbGVyLnN0eWxlLmxlZnQgPSBwb3NpdGlvbkZyb20gKyBcIiVcIjtcbiAgICAgICAgICAgIHNlY29uZFJvbGxlci5zdHlsZS5sZWZ0ID0gcG9zaXRpb25UbyArIFwiJVwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZmlyc3RSb2xsZXIuc3R5bGUuYm90dG9tID0gcG9zaXRpb25Gcm9tICsgXCIlXCI7XG4gICAgICAgICAgICBzZWNvbmRSb2xsZXIuc3R5bGUuYm90dG9tID0gcG9zaXRpb25UbyArIFwiJVwiO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucyk7XG4gICAgICAgIHRoaXMudXBkYXRhT3V0VG9vbHRpcChvcHRpb25zKTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLnVwRGF0YSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHRoaXMubW92ZVJvbGxlcnNBdFZhbHVlKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLnRvZ2dsZVJvbGxlcnMob3B0aW9ucyk7XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucyk7XG4gICAgICAgIHRoaXMudXBkYXRhT3V0VG9vbHRpcChvcHRpb25zKTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNvbnZlcnRWYWx1ZVRvUHggPSBmdW5jdGlvbiAodmFsdWUsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG1pbiA9IG9wdGlvbnMubWluLCBtYXggPSBvcHRpb25zLm1heCwgc3RlcCA9IG9wdGlvbnMuc3RlcCwgc2l6ZSA9IG9wdGlvbnMuc2l6ZSwgb25lU3RlcCA9IG9wdGlvbnMub25lU3RlcDtcbiAgICAgICAgaWYgKHZhbHVlID09PSBtYXgpXG4gICAgICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoKHZhbHVlIC0gbWluKSAvIHN0ZXApICogb25lU3RlcDtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNvbnZlcnRQeFRvUHJvY2VudCA9IGZ1bmN0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgc2l6ZSA9IG9wdGlvbnMuc2l6ZTtcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAqIDEwMCkgLyBzaXplO1xuICAgIH07XG4gICAgUm9sbGVycy5wcm90b3R5cGUudG9nZ2xlUm9sbGVycyA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgaXNEb3VibGUgPSBfYS5pc0RvdWJsZTtcbiAgICAgICAgdmFyIHJvbGxlcnMgPSB0aGlzLnJvbGxlcnM7XG4gICAgICAgIHZhciBmaXJzdFJvbGxlciA9IHJvbGxlcnNbMF0sIHNlY29uZFJvbGxlciA9IHJvbGxlcnNbMV07XG4gICAgICAgIHZhciBpc1Zpc2libGUgPSBpc0RvdWJsZSAmJiBmaXJzdFJvbGxlcjtcbiAgICAgICAgaWYgKGlzVmlzaWJsZSkge1xuICAgICAgICAgICAgc2Vjb25kUm9sbGVyLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZWNvbmRSb2xsZXIuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5ub3RWaXNpYmxlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFJvbGxlcnM7XG59KCkpO1xuZXhwb3J0cy5Sb2xsZXJzID0gUm9sbGVycztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFjayA9IHZvaWQgMDtcbnZhciBjb3JyZWN0U2VwYXJhdGVfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL2NvcnJlY3RTZXBhcmF0ZVwiKTtcbnZhciBjbGFzc05hbWVzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGlicy9jbGFzc05hbWVzXCIpO1xudmFyIFRyYWNrID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRyYWNrKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy50cmFjayA9IHRoaXMuY3JlYXRlKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLm91dEVsZW1lbnRzID0gdGhpcy5jcmVhdGVPdXRFbGVtZW50cygpO1xuICAgICAgICB0aGlzLnNldE91dChvcHRpb25zKTtcbiAgICB9XG4gICAgVHJhY2sucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgc2xpZGVyID0gX2Euc2xpZGVyO1xuICAgICAgICB2YXIgdHJhY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdHJhY2suY2xhc3NOYW1lID0gY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMudHJhY2s7XG4gICAgICAgIHNsaWRlci5hcHBlbmQodHJhY2spO1xuICAgICAgICByZXR1cm4gdHJhY2s7XG4gICAgfTtcbiAgICBUcmFjay5wcm90b3R5cGUuY3JlYXRlT3V0RWxlbWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzdGFydFZhbHVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHZhciBlbmRWYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBzdGFydFZhbHVlLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnRyYWNrT3V0U3RhcnQ7XG4gICAgICAgIGVuZFZhbHVlLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnRyYWNrT3V0RW5kO1xuICAgICAgICB0aGlzLnRyYWNrLmFwcGVuZChzdGFydFZhbHVlKTtcbiAgICAgICAgdGhpcy50cmFjay5hcHBlbmQoZW5kVmFsdWUpO1xuICAgICAgICByZXR1cm4gW3N0YXJ0VmFsdWUsIGVuZFZhbHVlXTtcbiAgICB9O1xuICAgIFRyYWNrLnByb3RvdHlwZS5zZXRPdXQgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgbWluID0gb3B0aW9ucy5taW4sIG1heCA9IG9wdGlvbnMubWF4LCBmcm9tID0gb3B0aW9ucy5mcm9tLCB0byA9IG9wdGlvbnMudG8sIG1pbk1heCA9IG9wdGlvbnMubWluTWF4LCBmcm9tVG8gPSBvcHRpb25zLmZyb21UbywgaXNUcmFja1Bvc3RmaXggPSBvcHRpb25zLmlzVHJhY2tQb3N0Zml4LCBpc1ByZWZpeCA9IG9wdGlvbnMuaXNQcmVmaXg7XG4gICAgICAgIHZhciB0cmFja1Bvc3RmaXggPSBvcHRpb25zLnRyYWNrUG9zdGZpeDtcbiAgICAgICAgaWYgKCFpc1RyYWNrUG9zdGZpeCkge1xuICAgICAgICAgICAgdHJhY2tQb3N0Zml4ID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgLy8g0L3QsNGB0YLRgNC+0LnQutC4INC00LvRjyDQv9C+0YHRgtGE0LjQutGB0LBcbiAgICAgICAgdmFyIG91dEVsZW1lbnRzID0gdGhpcy5vdXRFbGVtZW50cztcbiAgICAgICAgdmFyIHRyYWNrT3V0U3RhcnQgPSBvdXRFbGVtZW50c1swXSwgdHJhY2tPdXRFbmQgPSBvdXRFbGVtZW50c1sxXTtcbiAgICAgICAgaWYgKG1pbk1heCkge1xuICAgICAgICAgICAgdHJhY2tPdXRTdGFydC5pbm5lckhUTUwgPSBcIlwiICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKG1pbiwgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgICAgICB0cmFja091dEVuZC5pbm5lckhUTUwgPSBcIlwiICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKG1heCwgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZyb21Ubykge1xuICAgICAgICAgICAgdHJhY2tPdXRTdGFydC5pbm5lckhUTUwgPSBcIlwiICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKGZyb20sIG9wdGlvbnMpICsgdHJhY2tQb3N0Zml4O1xuICAgICAgICAgICAgdHJhY2tPdXRFbmQuaW5uZXJIVE1MID0gXCJcIiArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh0bywgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzRnJvbXRvUHJlZml4ID0gZnJvbVRvICYmIGlzUHJlZml4O1xuICAgICAgICB2YXIgaXNNaW5NYXhQcmVmaXggPSBtaW5NYXggJiYgaXNQcmVmaXg7XG4gICAgICAgIC8vINC90LDRgdGC0YDQvtC50LrQuCDQtNC70Y8g0L/RgNC10YTQuNC60YHQsFxuICAgICAgICBpZiAoaXNNaW5NYXhQcmVmaXgpIHtcbiAgICAgICAgICAgIHRyYWNrT3V0U3RhcnQuaW5uZXJIVE1MID0gXCJcIiArIHRyYWNrUG9zdGZpeCArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShtaW4sIG9wdGlvbnMpO1xuICAgICAgICAgICAgdHJhY2tPdXRFbmQuaW5uZXJIVE1MID0gXCJcIiArIHRyYWNrUG9zdGZpeCArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShtYXgsIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0Zyb210b1ByZWZpeCkge1xuICAgICAgICAgICAgdHJhY2tPdXRTdGFydC5pbm5lckhUTUwgPSBcIlwiICsgdHJhY2tQb3N0Zml4ICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKGZyb20sIG9wdGlvbnMpO1xuICAgICAgICAgICAgdHJhY2tPdXRFbmQuaW5uZXJIVE1MID0gXCJcIiArIHRyYWNrUG9zdGZpeCArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh0bywgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBUcmFjaztcbn0oKSk7XG5leHBvcnRzLlRyYWNrID0gVHJhY2s7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjYWxlID0gdm9pZCAwO1xudmFyIGNvcnJlY3RTZXBhcmF0ZV8xID0gcmVxdWlyZShcIi4uLy4uL2xpYnMvY29ycmVjdFNlcGFyYXRlXCIpO1xudmFyIGNsYXNzTmFtZXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL2NsYXNzTmFtZXNcIik7XG52YXIgU2NhbGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2NhbGUob3B0aW9ucykge1xuICAgICAgICB0aGlzLmNyZWF0ZShvcHRpb25zKTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB9XG4gICAgU2NhbGUucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIHNjYWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHNjYWxlLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnNjYWxlO1xuICAgICAgICBzbGlkZXIuYXBwZW5kKHNjYWxlKTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVycyhzY2FsZSk7XG4gICAgICAgIHRoaXMuYWRkU2NhbGVNYXJrZXIob3B0aW9ucywgc2NhbGUpO1xuICAgICAgICB0aGlzLmNoZWNrU2NhbGUob3B0aW9ucywgc2NhbGUpO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLnVwRGF0YSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIHNjYWxlID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuZmluZFNjYWxlKTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHRoaXMub3B0aW9ucyksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmNoZWNrU2NhbGUob3B0aW9ucywgc2NhbGUpO1xuICAgICAgICB0aGlzLnVwZGF0YVNjYWxlTWFya2VyKG9wdGlvbnMpO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLnVwZGF0YVNjYWxlTWFya2VyID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBvbmx5RGl2aXNpb25zID0gX2Eub25seURpdmlzaW9ucywgc2xpZGVyID0gX2Euc2xpZGVyLCBjb2xvciA9IF9hLmNvbG9yO1xuICAgICAgICB2YXIgc2NhbGVNYXJrZXJzID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3JBbGwoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuZmluZFNjYWxlVmFsdWUpO1xuICAgICAgICBzY2FsZU1hcmtlcnMuZm9yRWFjaChmdW5jdGlvbiAoc2NhbGVNYXJrZXIpIHtcbiAgICAgICAgICAgIGlmIChvbmx5RGl2aXNpb25zKSB7XG4gICAgICAgICAgICAgICAgc2NhbGVNYXJrZXIuY2xhc3NMaXN0LmFkZChjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5zY2FsZUZzWmVybyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tc2NhbGUtY29sb3InLCBcIiBcIiArIGNvbG9yKTtcbiAgICB9O1xuICAgIFNjYWxlLnByb3RvdHlwZS5jaGVja1NjYWxlID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNjYWxlKSB7XG4gICAgICAgIHZhciBpc1NjYWxlID0gb3B0aW9ucy5pc1NjYWxlO1xuICAgICAgICBpZiAoIWlzU2NhbGUpIHtcbiAgICAgICAgICAgIHNjYWxlLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2NhbGUpIHtcbiAgICAgICAgICAgIHNjYWxlLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjYWxlLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uIChzY2FsZSkge1xuICAgICAgICB0aGlzLmhhbmRsZVNjYWxlQ2xpY2sgPSB0aGlzLmhhbmRsZVNjYWxlQ2xpY2suYmluZCh0aGlzKTtcbiAgICAgICAgc2NhbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZVNjYWxlQ2xpY2spO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLmFkZFNjYWxlTWFya2VyID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNjYWxlKSB7XG4gICAgICAgIHZhciBtaW4gPSBvcHRpb25zLm1pbiwgbWF4ID0gb3B0aW9ucy5tYXgsIHN0ZXAgPSBvcHRpb25zLnN0ZXAsIHNpemUgPSBvcHRpb25zLnNpemUsIG9uZVN0ZXAgPSBvcHRpb25zLm9uZVN0ZXA7XG4gICAgICAgIHZhciBpbmMgPSB0aGlzLmdldEluY3JlbWVudChvcHRpb25zKTtcbiAgICAgICAgdmFyIHB4SW5jID0gKGluYyAvIHN0ZXApICogb25lU3RlcDtcbiAgICAgICAgdmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICB2YXIgcHhDdXJyZW50ID0gMDtcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICBmb3IgKHZhciBjdXJyZW50ID0gbWluOyBjdXJyZW50IDwgbWF4OyBjdXJyZW50ICs9IGluYywgaSArPSAxKSB7XG4gICAgICAgICAgICBpZiAocHhDdXJyZW50ID4gc2l6ZSAtIDUwKVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgdmFyIHBhcmFtZXRlcnMgPSB7XG4gICAgICAgICAgICAgICAgZnJhZ21lbnQ6IGZyYWdtZW50LFxuICAgICAgICAgICAgICAgIHZhbHVlOiBjdXJyZW50LCBwb3NpdGlvbjogcHhDdXJyZW50LFxuICAgICAgICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgdmFsOiBpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlU2NhbGVNYXJrZXIocGFyYW1ldGVycyk7XG4gICAgICAgICAgICBweEN1cnJlbnQgKz0gcHhJbmM7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5ld1BhcmFtID0ge1xuICAgICAgICAgICAgZnJhZ21lbnQ6IGZyYWdtZW50LFxuICAgICAgICAgICAgdmFsdWU6IG1heCwgcG9zaXRpb246IHNpemUsXG4gICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zLFxuICAgICAgICAgICAgdmFsOiA1LFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNyZWF0ZVNjYWxlTWFya2VyKG5ld1BhcmFtKTtcbiAgICAgICAgc2NhbGUuYXBwZW5kKGZyYWdtZW50KTtcbiAgICB9O1xuICAgIFNjYWxlLnByb3RvdHlwZS5nZXRJbmNyZW1lbnQgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIHNpemUgPSBfYS5zaXplLCBvbmVTdGVwID0gX2Eub25lU3RlcCwgc3RlcCA9IF9hLnN0ZXA7XG4gICAgICAgIHZhciB2YWx1ZSA9IE1hdGguY2VpbChzaXplIC8gb25lU3RlcCk7XG4gICAgICAgIHZhciBpbmMgPSBNYXRoLmNlaWwodmFsdWUgLyA1KSAqIHN0ZXA7XG4gICAgICAgIHJldHVybiBpbmM7XG4gICAgfTtcbiAgICBTY2FsZS5wcm90b3R5cGUuY3JlYXRlU2NhbGVNYXJrZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIGZyYWdtZW50ID0gX2EuZnJhZ21lbnQsIHZhbHVlID0gX2EudmFsdWUsIHBvc2l0aW9uID0gX2EucG9zaXRpb24sIG9wdGlvbnMgPSBfYS5vcHRpb25zLCB2YWwgPSBfYS52YWw7XG4gICAgICAgIHZhciBpc1NjYWxlUG9zdGZpeCA9IG9wdGlvbnMuaXNTY2FsZVBvc3RmaXgsIGlzUHJlZml4ID0gb3B0aW9ucy5pc1ByZWZpeCwgb25seURpdmlzaW9ucyA9IG9wdGlvbnMub25seURpdmlzaW9ucywgaXNWZXJ0aWNhbCA9IG9wdGlvbnMuaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHNjYWxlUG9zdGZpeCA9IG9wdGlvbnMuc2NhbGVQb3N0Zml4O1xuICAgICAgICB2YXIgc2NhbGVNYXJrZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIHNjYWxlTWFya2VyLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnNjYWxlTWFya2VyO1xuICAgICAgICB2YXIgZGl2aXNpb25WYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgdmFyIGRpdmlzaW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICBkaXZpc2lvblZhbHVlLmNsYXNzTmFtZSA9IFwiXCIgKyBjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5kaXZpc2lvblZhbHVlICsgdmFsO1xuICAgICAgICBkaXZpc2lvbi5jbGFzc05hbWUgPSBjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5kaXZpc2lvbjtcbiAgICAgICAgc2NhbGVNYXJrZXIuYXBwZW5kKGRpdmlzaW9uVmFsdWUpO1xuICAgICAgICBzY2FsZU1hcmtlci5hcHBlbmQoZGl2aXNpb24pO1xuICAgICAgICBmcmFnbWVudC5hcHBlbmQoc2NhbGVNYXJrZXIpO1xuICAgICAgICB2YXIgZWxlbWVudCA9IGRpdmlzaW9uVmFsdWU7XG4gICAgICAgIGlmICghb25seURpdmlzaW9ucykge1xuICAgICAgICAgICAgZWxlbWVudCA9IHNjYWxlTWFya2VyO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNTY2FsZVBvc3RmaXgpIHtcbiAgICAgICAgICAgIHNjYWxlUG9zdGZpeCA9ICcnO1xuICAgICAgICB9XG4gICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gXCJcIiArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh2YWx1ZSwgb3B0aW9ucykgKyBzY2FsZVBvc3RmaXg7XG4gICAgICAgIGlmIChpc1ByZWZpeCkge1xuICAgICAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBcIlwiICsgc2NhbGVQb3N0Zml4ICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKHZhbHVlLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVwZGF0YVNjYWxlTWFya2VyKG9wdGlvbnMpO1xuICAgICAgICB2YXIgb2Zmc2V0ID0gdGhpcy5jb252ZXJ0UHhUb1BlcmNlbnQocG9zaXRpb24sIG9wdGlvbnMpO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIHNjYWxlTWFya2VyLnN0eWxlLmxlZnQgPSBvZmZzZXQgKyBcIiVcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNjYWxlTWFya2VyLnN0eWxlLmJvdHRvbSA9IG9mZnNldCArIFwiJVwiO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY2FsZS5wcm90b3R5cGUuY29udmVydFB4VG9QZXJjZW50ID0gZnVuY3Rpb24gKHZhbHVlLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBzaXplID0gb3B0aW9ucy5zaXplO1xuICAgICAgICByZXR1cm4gKHZhbHVlICogMTAwKSAvIHNpemU7XG4gICAgfTtcbiAgICAvLyDQmtCw0YHRgtC+0LzQvdGL0Lkg0K3QstC10L3RgiDQtNC70Y8g0L/QtdGA0LXQtNCw0YfQuCDQt9C90LDRh9C10L3QuNGPINCyINCS0LjQtFxuICAgIFNjYWxlLnByb3RvdHlwZS5oYW5kbGVTY2FsZUNsaWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIHZhciBvbmx5RGl2aXNpb25zID0gdGhpcy5vcHRpb25zLm9ubHlEaXZpc2lvbnM7XG4gICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBpZiAoISh0YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBpc1NjYWxlRGl2aXNvbiA9ICF0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLmlzU2NhbGVEaXZpc29uKSAmJiBvbmx5RGl2aXNpb25zO1xuICAgICAgICB2YXIgaXNTY2FsZVZhbHVlID0gIXRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuaXNTY2FsZVZhbHVlKSAmJiAhb25seURpdmlzaW9ucztcbiAgICAgICAgaWYgKGlzU2NhbGVEaXZpc29uKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoaXNTY2FsZVZhbHVlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgdmFsdWUgPSB0YXJnZXQuaW5uZXJIVE1MO1xuICAgICAgICB2YXIgc2NhbGVFdmVudCA9IG5ldyBDdXN0b21FdmVudCgnc2NhbGVjbGljaycsIHtcbiAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICAgICAgICBldmVudDogZXZlbnQsIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICB0YXJnZXQuZGlzcGF0Y2hFdmVudChzY2FsZUV2ZW50KTtcbiAgICB9O1xuICAgIHJldHVybiBTY2FsZTtcbn0oKSk7XG5leHBvcnRzLlNjYWxlID0gU2NhbGU7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmFyID0gdm9pZCAwO1xudmFyIGNsYXNzTmFtZXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL2NsYXNzTmFtZXNcIik7XG52YXIgQmFyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJhcihvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuY3JlYXRlKG9wdGlvbnMpO1xuICAgIH1cbiAgICBCYXIucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIGJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBiYXIuY2xhc3NOYW1lID0gY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuYmFyO1xuICAgICAgICBzbGlkZXIuYXBwZW5kKGJhcik7XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucywgYmFyKTtcbiAgICAgICAgdGhpcy51cGRhdGFCYXIob3B0aW9ucywgYmFyKTtcbiAgICB9O1xuICAgIEJhci5wcm90b3R5cGUudXBEYXRhID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHNsaWRlciA9IG9wdGlvbnMuc2xpZGVyO1xuICAgICAgICB2YXIgYmFyID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuZmluZEJhcik7XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucywgYmFyKTtcbiAgICAgICAgdGhpcy51cGRhdGFCYXIob3B0aW9ucywgYmFyKTtcbiAgICB9O1xuICAgIEJhci5wcm90b3R5cGUudXBkYXRhQ29sb3IgPSBmdW5jdGlvbiAob3B0aW9ucywgYmFyKSB7XG4gICAgICAgIHZhciBjb2xvciA9IG9wdGlvbnMuY29sb3IsIGlzR3JhZGllbnQgPSBvcHRpb25zLmlzR3JhZGllbnQsIGdyYWRpZW50ID0gb3B0aW9ucy5ncmFkaWVudCwgZ3JhZGllbnREZWcgPSBvcHRpb25zLmdyYWRpZW50RGVnLCBpc0NoYW5nZUNvbG9yID0gb3B0aW9ucy5pc0NoYW5nZUNvbG9yO1xuICAgICAgICB2YXIgaXNTZXRHcmFkaWVudCA9IGlzQ2hhbmdlQ29sb3IgJiYgaXNHcmFkaWVudDtcbiAgICAgICAgdmFyIGlzU2V0Q29sb3IgPSBpc0NoYW5nZUNvbG9yICYmICFpc0dyYWRpZW50O1xuICAgICAgICBpZiAoaXNTZXRHcmFkaWVudCkge1xuICAgICAgICAgICAgYmFyLnN0eWxlLmJhY2tncm91bmQgPSBcImxpbmVhci1ncmFkaWVudChcIiArIGdyYWRpZW50RGVnICsgXCJkZWcsIFwiICsgY29sb3IgKyBcIiwgXCIgKyBncmFkaWVudCArIFwiKVwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1NldENvbG9yKSB7XG4gICAgICAgICAgICBiYXIuc3R5bGUuYmFja2dyb3VuZCA9IGNvbG9yO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBCYXIucHJvdG90eXBlLmdldFJvbGxlclBvc2l0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIHJvbGxlcnMgPSBzbGlkZXIucXVlcnlTZWxlY3RvckFsbChjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5maW5kUm9sbGVycyk7XG4gICAgICAgIHZhciBfYSA9IFtyb2xsZXJzWzBdLCByb2xsZXJzWzFdXSwgZmlyc3RSb2xsZXIgPSBfYVswXSwgc2Vjb25kUm9sbGVyID0gX2FbMV07XG4gICAgICAgIHZhciByb2xsZXJzUG9zaXRpb25zID0gW3RoaXMuY2FsY3VsYXRlUG9zaXRpb24oZmlyc3RSb2xsZXIsIG9wdGlvbnMpLFxuICAgICAgICAgICAgdGhpcy5jYWxjdWxhdGVQb3NpdGlvbihzZWNvbmRSb2xsZXIsIG9wdGlvbnMpXTtcbiAgICAgICAgcmV0dXJuIHJvbGxlcnNQb3NpdGlvbnMuc29ydChmdW5jdGlvbiAoYSwgYikgeyByZXR1cm4gYSAtIGI7IH0pO1xuICAgIH07XG4gICAgQmFyLnByb3RvdHlwZS5jYWxjdWxhdGVQb3NpdGlvbiA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gb3B0aW9ucy5pc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSAwO1xuICAgICAgICB2YXIgd2lkdGggPSBOdW1iZXIucGFyc2VJbnQoZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS53aWR0aCwgMTApO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0ICsgd2lkdGggLyAyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcG9zaXRpb24gPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIHdpZHRoIC8gMjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcG9zaXRpb247XG4gICAgfTtcbiAgICBCYXIucHJvdG90eXBlLmNvbnZlcnRQeFRvUHJvY2VudCA9IGZ1bmN0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgc2l6ZSA9IG9wdGlvbnMuc2l6ZTtcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAqIDEwMCkgLyBzaXplO1xuICAgIH07XG4gICAgQmFyLnByb3RvdHlwZS51cGRhdGFCYXIgPSBmdW5jdGlvbiAob3B0aW9ucywgYmFyKSB7XG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gb3B0aW9ucy5pc1ZlcnRpY2FsLCBpc0RvdWJsZSA9IG9wdGlvbnMuaXNEb3VibGU7XG4gICAgICAgIHZhciBzaWRlID0gIWlzVmVydGljYWwgPyAnbGVmdCcgOiAndG9wJztcbiAgICAgICAgdmFyIGRpcmVjdGlvbiA9ICFpc1ZlcnRpY2FsID8gJ3dpZHRoJyA6ICdoZWlnaHQnO1xuICAgICAgICB2YXIgcm9sbGVyUG9zID0gdGhpcy5nZXRSb2xsZXJQb3NpdGlvbnMob3B0aW9ucyk7XG4gICAgICAgIHZhciBzbGlkZXJQb3MgPSB0aGlzLmdldE5ld1NsaWRlclBvcyhvcHRpb25zKTtcbiAgICAgICAgdmFyIGlzU2luZ2xlSG9yaXpvbnRhbCA9IGlzRG91YmxlICYmICFpc1ZlcnRpY2FsO1xuICAgICAgICBpZiAoaXNTaW5nbGVIb3Jpem9udGFsKSB7XG4gICAgICAgICAgICB2YXIgdG8gPSB0aGlzLmNvbnZlcnRQeFRvUHJvY2VudChNYXRoLmFicyhyb2xsZXJQb3NbMV0gLSBzbGlkZXJQb3MpLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGJhci5zdHlsZVtzaWRlXSA9ICcwJSc7XG4gICAgICAgICAgICBiYXIuc3R5bGVbZGlyZWN0aW9uXSA9IHRvICsgXCIlXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgZnJvbSA9IHRoaXMuY29udmVydFB4VG9Qcm9jZW50KE1hdGguYWJzKHJvbGxlclBvc1sxXSAtIHNsaWRlclBvcyksIG9wdGlvbnMpO1xuICAgICAgICAgICAgdmFyIHRvID0gMTAwIC0gZnJvbTtcbiAgICAgICAgICAgIGJhci5zdHlsZVtzaWRlXSA9IGZyb20gKyBcIiVcIjtcbiAgICAgICAgICAgIGJhci5zdHlsZVtkaXJlY3Rpb25dID0gdG8gKyBcIiVcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzRG91YmxlKSB7XG4gICAgICAgICAgICB2YXIgZnJvbSA9IHRoaXMuY29udmVydFB4VG9Qcm9jZW50KE1hdGguYWJzKHJvbGxlclBvc1swXSAtIHNsaWRlclBvcyksIG9wdGlvbnMpO1xuICAgICAgICAgICAgdmFyIHRvID0gdGhpcy5jb252ZXJ0UHhUb1Byb2NlbnQoTWF0aC5hYnMocm9sbGVyUG9zWzFdIC0gcm9sbGVyUG9zWzBdKSwgb3B0aW9ucyk7XG4gICAgICAgICAgICBiYXIuc3R5bGVbc2lkZV0gPSBmcm9tICsgXCIlXCI7XG4gICAgICAgICAgICBiYXIuc3R5bGVbZGlyZWN0aW9uXSA9IHRvICsgXCIlXCI7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEJhci5wcm90b3R5cGUuZ2V0TmV3U2xpZGVyUG9zID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBfYS5zbGlkZXIsIGlzVmVydGljYWwgPSBfYS5pc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSAwO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xuICAgIH07XG4gICAgcmV0dXJuIEJhcjtcbn0oKSk7XG5leHBvcnRzLkJhciA9IEJhcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hbGxDb2xvcnMgPSB2b2lkIDA7XG52YXIgYWxsQ29sb3JzID0ge1xuICAgICcjZjBmOGZmJzogJ2FsaWNlYmx1ZScsXG4gICAgJyNmYWViZDcnOiAnYW50aXF1ZXdoaXRlJyxcbiAgICAnIzAwZmZmZic6ICdhcXVhJyxcbiAgICAnIzdmZmZkNCc6ICdhcXVhbWFyaW5lJyxcbiAgICAnI2YwZmZmZic6ICdhenVyZScsXG4gICAgJyNmNWY1ZGMnOiAnYmVpZ2UnLFxuICAgICcjZmZlNGM0JzogJ2Jpc3F1ZScsXG4gICAgJyMwMDAwMDAnOiAnYmxhY2snLFxuICAgICcjZmZlYmNkJzogJ2JsYW5jaGVkYWxtb25kJyxcbiAgICAnIzAwMDBmZic6ICdibHVlJyxcbiAgICAnIzhhMmJlMic6ICdibHVldmlvbGV0JyxcbiAgICAnI2E1MmEyYSc6ICdicm93bicsXG4gICAgJyNkZWI4ODcnOiAnYnVybHl3b29kJyxcbiAgICAnIzVmOWVhMCc6ICdjYWRldGJsdWUnLFxuICAgICcjN2ZmZjAwJzogJ2NoYXJ0cmV1c2UnLFxuICAgICcjZDI2OTFlJzogJ2Nob2NvbGF0ZScsXG4gICAgJyNmZjdmNTAnOiAnY29yYWwnLFxuICAgICcjNjQ5NWVkJzogJ2Nvcm5mbG93ZXJibHVlJyxcbiAgICAnI2ZmZjhkYyc6ICdjb3Juc2lsaycsXG4gICAgJyNkYzE0M2MnOiAnY3JpbXNvbicsXG4gICAgJyMwMDAwOGInOiAnZGFya2JsdWUnLFxuICAgICcjMDA4YjhiJzogJ2RhcmtjeWFuJyxcbiAgICAnI2I4ODYwYic6ICdkYXJrZ29sZGVucm9kJyxcbiAgICAnI2E5YTlhOSc6ICdkYXJrZ3JheScsXG4gICAgJyMwMDY0MDAnOiAnZGFya2dyZWVuJyxcbiAgICAnI2JkYjc2Yic6ICdkYXJra2hha2knLFxuICAgICcjOGIwMDhiJzogJ2RhcmttYWdlbnRhJyxcbiAgICAnIzU1NmIyZic6ICdkYXJrb2xpdmVncmVlbicsXG4gICAgJyNmZjhjMDAnOiAnZGFya29yYW5nZScsXG4gICAgJyM5OTMyY2MnOiAnZGFya29yY2hpZCcsXG4gICAgJyM4YjAwMDAnOiAnZGFya3JlZCcsXG4gICAgJyNlOTk2N2EnOiAnZGFya3NhbG1vbicsXG4gICAgJyM4ZmJjOGYnOiAnZGFya3NlYWdyZWVuJyxcbiAgICAnIzQ4M2Q4Yic6ICdkYXJrc2xhdGVibHVlJyxcbiAgICAnIzVkZGZiZSc6ICdhcXVhbWFyaW5lJyxcbiAgICAnIzE5ODAwMCc6ICfQl9C10LvQtdC90YvQuScsXG4gICAgJyMyZjRmNGYnOiAnZGFya3NsYXRlZ3JheScsXG4gICAgJyMwMGNlZDEnOiAnZGFya3R1cnF1b2lzZScsXG4gICAgJyM5NDAwZDMnOiAnZGFya3Zpb2xldCcsXG4gICAgJyNmZjE0OTMnOiAnZGVlcHBpbmsnLFxuICAgICcjMDBiZmZmJzogJ2RlZXBza3libHVlJyxcbiAgICAnIzY5Njk2OSc6ICdkaW1ncmF5JyxcbiAgICAnIzFlOTBmZic6ICdkb2RnZXJibHVlJyxcbiAgICAnI2IyMjIyMic6ICdmaXJlYnJpY2snLFxuICAgICcjZmZmYWYwJzogJ2Zsb3JhbHdoaXRlJyxcbiAgICAnIzIyOGIyMic6ICdmb3Jlc3RncmVlbicsXG4gICAgJyNmZjAwZmYnOiAnZnVjaHNpYScsXG4gICAgJyNkY2RjZGMnOiAnZ2FpbnNib3JvJyxcbiAgICAnI2Y4ZjhmZic6ICdnaG9zdHdoaXRlJyxcbiAgICAnI2RhYTUyMCc6ICdnb2xkZW5yb2QnLFxuICAgICcjZmZkNzAwJzogJ2dvbGQnLFxuICAgICcjODA4MDgwJzogJ2dyYXknLFxuICAgICcjMDA4MDAwJzogJ9CX0LXQu9C10L3Ri9C5JyxcbiAgICAnI2FkZmYyZic6ICdncmVlbnllbGxvdycsXG4gICAgJyNmMGZmZjAnOiAnaG9uZXlkZXcnLFxuICAgICcjZmY2OWI0JzogJ2hvdHBpbmsnLFxuICAgICcjY2Q1YzVjJzogJ2luZGlhbnJlZCcsXG4gICAgJyM0YjAwODInOiAnaW5kaWdvJyxcbiAgICAnI2ZmZmZmMCc6ICdpdm9yeScsXG4gICAgJyNmMGU2OGMnOiAna2hha2knLFxuICAgICcjZmZmMGY1JzogJ2xhdmVuZGVyYmx1c2gnLFxuICAgICcjZTZlNmZhJzogJ2xhdmVuZGVyJyxcbiAgICAnIzdjZmMwMCc6ICdsYXduZ3JlZW4nLFxuICAgICcjZmZmYWNkJzogJ2xlbW9uY2hpZmZvbicsXG4gICAgJyNhZGQ4ZTYnOiAnbGlnaHRibHVlJyxcbiAgICAnI2YwODA4MCc6ICdsaWdodGNvcmFsJyxcbiAgICAnI2UwZmZmZic6ICdsaWdodGN5YW4nLFxuICAgICcjZmFmYWQyJzogJ2xpZ2h0Z29sZGVucm9keWVsbG93JyxcbiAgICAnI2QzZDNkMyc6ICdsaWdodGdyYXknLFxuICAgICcjOTBlZTkwJzogJ2xpZ2h0Z3JlZW4nLFxuICAgICcjZmZiNmMxJzogJ2xpZ2h0cGluaycsXG4gICAgJyNmZmEwN2EnOiAnbGlnaHRzYWxtb24nLFxuICAgICcjMjBiMmFhJzogJ2xpZ2h0c2VhZ3JlZW4nLFxuICAgICcjODdjZWZhJzogJ2xpZ2h0c2t5Ymx1ZScsXG4gICAgJyM3Nzg4OTknOiAnbGlnaHRzbGF0ZWdyYXknLFxuICAgICcjYjBjNGRlJzogJ2xpZ2h0c3RlZWxibHVlJyxcbiAgICAnI2ZmZmZlMCc6ICdsaWdodHllbGxvdycsXG4gICAgJyMwMGZmMDAnOiAnbGltZScsXG4gICAgJyMzMmNkMzInOiAnbGltZWdyZWVuJyxcbiAgICAnI2ZhZjBlNic6ICdsaW5lbicsXG4gICAgJyM4MDAwMDAnOiAnbWFyb29uJyxcbiAgICAnIzY2Y2RhYSc6ICdtZWRpdW1hcXVhbWFyaW5lJyxcbiAgICAnIzAwMDBjZCc6ICdtZWRpdW1ibHVlJyxcbiAgICAnI2JhNTVkMyc6ICdtZWRpdW1vcmNoaWQnLFxuICAgICcjOTM3MGRiJzogJ21lZGl1bXB1cnBsZScsXG4gICAgJyMzY2IzNzEnOiAnbWVkaXVtc2VhZ3JlZW4nLFxuICAgICcjN2I2OGVlJzogJ21lZGl1bXNsYXRlYmx1ZScsXG4gICAgJyMwMGZhOWEnOiAnbWVkaXVtc3ByaW5nZ3JlZW4nLFxuICAgICcjNDhkMWNjJzogJ21lZGl1bXR1cnF1b2lzZScsXG4gICAgJyNjNzE1ODUnOiAnbWVkaXVtdmlvbGV0cmVkJyxcbiAgICAnIzE5MTk3MCc6ICdtaWRuaWdodGJsdWUnLFxuICAgICcjZjVmZmZhJzogJ21pbnRjcmVhbScsXG4gICAgJyNmZmU0ZTEnOiAnbWlzdHlyb3NlJyxcbiAgICAnI2ZmZTRiNSc6ICdtb2NjYXNpbicsXG4gICAgJyNmZmRlYWQnOiAnbmF2YWpvd2hpdGUnLFxuICAgICcjMDAwMDgwJzogJ25hdnknLFxuICAgICcjZmRmNWU2JzogJ29sZGxhY2UnLFxuICAgICcjODA4MDAwJzogJ29saXZlJyxcbiAgICAnIzZiOGUyMyc6ICdvbGl2ZWRyYWInLFxuICAgICcjZmZhNTAwJzogJ29yYW5nZScsXG4gICAgJyNmZjQ1MDAnOiAnb3JhbmdlcmVkJyxcbiAgICAnI2RhNzBkNic6ICdvcmNoaWQnLFxuICAgICcjZWVlOGFhJzogJ3BhbGVnb2xkZW5yb2QnLFxuICAgICcjOThmYjk4JzogJ3BhbGVncmVlbicsXG4gICAgJyNhZmVlZWUnOiAncGFsZXR1cnF1b2lzZScsXG4gICAgJyNkYjcwOTMnOiAncGFsZXZpb2xldHJlZCcsXG4gICAgJyNmZmVmZDUnOiAncGFwYXlhd2hpcCcsXG4gICAgJyNmZmRhYjknOiAncGVhY2hwdWZmJyxcbiAgICAnI2NkODUzZic6ICdwZXJ1JyxcbiAgICAnI2ZmYzBjYic6ICdwaW5rJyxcbiAgICAnI2RkYTBkZCc6ICdwbHVtJyxcbiAgICAnI2IwZTBlNic6ICdwb3dkZXJibHVlJyxcbiAgICAnIzgwMDA4MCc6ICdwdXJwbGUnLFxuICAgICcjNjYzMzk5JzogJ3JlYmVjY2FwdXJwbGUnLFxuICAgICcjZmYwMDAwJzogJ9Ca0YDQsNGB0L3Ri9C5JyxcbiAgICAnI2JjOGY4Zic6ICdyb3N5YnJvd24nLFxuICAgICcjNDE2OWUxJzogJ3JveWFsYmx1ZScsXG4gICAgJyM4YjQ1MTMnOiAnc2FkZGxlYnJvd24nLFxuICAgICcjZmE4MDcyJzogJ3NhbG1vbicsXG4gICAgJyNmNGE0NjAnOiAnc2FuZHlicm93bicsXG4gICAgJyMyZThiNTcnOiAnc2VhZ3JlZW4nLFxuICAgICcjZmZmNWVlJzogJ3NlYXNoZWxsJyxcbiAgICAnI2EwNTIyZCc6ICdzaWVubmEnLFxuICAgICcjYzBjMGMwJzogJ3NpbHZlcicsXG4gICAgJyM4N2NlZWInOiAnc2t5Ymx1ZScsXG4gICAgJyM2YTVhY2QnOiAnc2xhdGVibHVlJyxcbiAgICAnIzcwODA5MCc6ICdzbGF0ZWdyYXknLFxuICAgICcjZmZmYWZhJzogJ3Nub3cnLFxuICAgICcjMDBmZjdmJzogJ3NwcmluZ2dyZWVuJyxcbiAgICAnIzQ2ODJiNCc6ICdzdGVlbGJsdWUnLFxuICAgICcjZDJiNDhjJzogJ3RhbicsXG4gICAgJyMwMDgwODAnOiAndGVhbCcsXG4gICAgJyNkOGJmZDgnOiAndGhpc3RsZScsXG4gICAgJyNmZjYzNDcnOiAndG9tYXRvJyxcbiAgICAnIzQwZTBkMCc6ICd0dXJxdW9pc2UnLFxuICAgICcjZWU4MmVlJzogJ3Zpb2xldCcsXG4gICAgJyNmNWRlYjMnOiAnd2hlYXQnLFxuICAgICcjZmZmZmZmJzogJ9CR0LXQu9GL0LknLFxuICAgICcjZjVmNWY1JzogJ3doaXRlc21va2UnLFxuICAgICcjZmZmZjAwJzogJ9CW0LXQu9GC0YvQuScsXG4gICAgJyM5YWNkMzInOiAn0K/QsdC70L7Rh9C90L4t0LfQtdC70LXQvdGL0LknLFxuICAgICcjZTU4MDAwJzogJ9Cc0L7RgNC60L7QstC90YvQuScsXG4gICAgJyNjYzAwMDAnOiAn0JHQvtGB0YLQvtC90YHQutC40Lkt0LrRgNCw0YHQvdGL0LknLFxuICAgICcjMzMwMDAwJzogJ9Ca0L7RgNC40YfQvdC10LLRi9C5JyxcbiAgICAnIzdmODAwMCc6ICfQntC70LjQstC60L7QstGL0LknLFxuICAgICcjOTkwMDAwJzogJ9Ch0LDQvdCz0YDQuNGPJyxcbiAgICAnI2IyODAwMCc6ICfQotC10LzQvdC+LdC30L7Qu9C+0YLQvtC5JyxcbiAgICAnIzRjODAwMCc6ICfQndC10LbQvdC+LdC+0LvQuNCy0LrQvtCy0YvQuScsXG4gICAgJyM2NjAwMDAnOiAn0JrQvtGA0LjRh9C90LXQstC+LdC80LDQu9C40L3QvtCy0YvQuScsXG4gICAgJyM2YzYwMDAnOiAn0J7Qu9C40LLQutC+0LLRi9C5JyxcbiAgICAnIzZhNTVjMyc6ICfQn9GD0YDQv9GD0YDQvdC+LdGB0LjQvdC40LknLFxuICAgICcjNjdjOGY2JzogJ9Cv0YDQutC+LdCz0L7Qu9GD0LHQvtC5JyxcbiAgICAnIzQ5MmY1Yyc6ICfQk9C70YPQsdC+0LrQuNC5LdGE0LjQvtC70LXRgtC+0LLRi9C5JyxcbiAgICAnIzVjZDFlYyc6ICfQk9C+0LvRg9Cx0L7QuScsXG4gICAgJyMxM2ZmNDInOiAn0K/RgNC60L4t0LfQtdC70LXQvdGL0LknLFxuICAgICcjMWRhNDI2JzogJ9Cf0LDRgdGC0LXQu9GM0L3Qvi3Qt9C10LvQtdC90YvQuScsXG4gICAgJyMyZmRiYzAnOiAn0JHQuNGA0Y7Qt9C+0LLRi9C5JyxcbiAgICAnIzM4Njc0OCc6ICfQotC10LzQvdC+LdC30LXQu9C10L3Ri9C5JyxcbiAgICAnIzU5YTljMSc6ICfQotC10LzQvdC+LdCz0L7Qu9GD0LHQvtC5JyxcbiAgICAnIzE0NjY2Nic6ICfQotC10LzQvdC+LdCx0LjRgNGO0LfQvtCy0YvQuScsXG4gICAgJyNjODA5OTMnOiAn0KTQuNC+0LvQtdGC0L7QstC+LdC60YDQsNGB0L3Ri9C5JyxcbiAgICAnI2ZhMGJmOCc6ICfQpNGD0LrRgdC40Y8nLFxuICAgICcjMTkwMTMyJzogJ9Ci0LXQvNC90L4t0YTQuNC+0LvQtdGC0L7QstGL0LknLFxuICAgICcjMzIwMjYyJzogJ9Ci0LXQvNC90L4t0YTQuNC+0LvQtdGC0L7QstGL0LknLFxuICAgICcjNGIwMzk3JzogJ9CY0L3QtNC40LPQvicsXG4gICAgJyNhZjA4NjEnOiAn0KDQvtC30L7QstCw0YLQvi3Qu9C40LvQvtCy0YvQuScsXG4gICAgJyNlMTBhYzYnOiAn0JzQsNC70LjQvdC+0LLRi9C5JyxcbiAgICAnIzk2MDcyZSc6ICfQkdGD0YDQs9GD0L3QtNGB0LrQuNC5JyxcbiAgICAnIzY0MDRjYSc6ICfQn9GD0YDQv9GD0YDQvdC+LdGB0LjQvdC40LknLFxuICAgICcjN2QwNWZjJzogJ9Ck0LjQvtC70LXRgtC+0LLRi9C5JyxcbiAgICAnIzMyMDI2NSc6ICfQotC10LzQvdGL0Lkg0LjQvdC00LjQs9C+JyxcbiAgICAnIzAnOiAnIzAwMCcsXG4gICAgb3JhbmdlOiAn0J7RgNCw0L3QttC10LLRi9C5JyxcbiAgICBwdXJwbGU6ICfQpNC40L7Qu9C10YLQvtCy0YvQuScsXG4gICAgJyM0YmU3NGQnOiAn0JzQsNC70LDRhdC40YLQvtCy0YvQuScsXG4gICAgJyM2NTM0NjYnOiAn0J/Rg9GA0L/Rg9GA0L3Ri9C5JyxcbiAgICAnIzMyOWEzMyc6ICfQl9C10LvQtdC90YvQuScsXG4gICAgJyMxOTRkMWEnOiAn0KLQtdC80L3Qvi3Qt9C10LvQtdC90YvQuScsXG4gICAgJyNmZDAyZmYnOiAn0KDQvtC30L7QstGL0LknLFxuICAgICcjYjExYmIzJzogJ9Ck0LjQvtC70LXRgtC+0LLQvi3QsdCw0LrQu9Cw0LbQsNC90L3Ri9C5JyxcbiAgICAnI2UzYjVlNic6ICfQodCy0LXRgtC70L4t0YDQvtC30L7QstGL0LknLFxufTtcbmV4cG9ydHMuYWxsQ29sb3JzID0gYWxsQ29sb3JzO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc2xpZGVyLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIERlbW9fMSA9IHJlcXVpcmUoXCIuL0RlbW8vRGVtb1wiKTtcbnJlcXVpcmUoXCIuL2luZGV4LnNjc3NcIik7XG5yZXF1aXJlKFwiLi4vc2xpZGVyL3NsaWRlclwiKTtcbnZhciAkd3JhcCA9ICQoJy5qcy10ZXN0Jyk7XG4kd3JhcC5jb2xvclNsaWRlcih7XG4gICAgaXNTY2FsZTogZmFsc2UsXG4gICAgaXNDaGFuZ2VDb2xvcjogZmFsc2UsXG59KTtcbi8qKlxuICog0JTQu9GPINCy0YvQstC+0LTQsCDQsiDRgdCy0L7QuCDQuNC90L/Rg9GC0YtcbiAqINCh0L7Qt9C00LDRgtGMINC40L3Qv9GD0YLRiywg0Lgg0LLRi9C30LLQsNGC0Ywg0LzQtdGC0L7QtCBnZXRWYWx1ZVxuICAg0YEg0YTRg9C90LrRhtC40LXQuSDQuCDQstGL0LLQvtC00LjRgtGMINC70Y7QsdC+0Lkg0L/QsNGA0LDQvNC10YLRgCDQuNC3IDI3INC+0LHRgNCw0YLQuNCy0YjQuNGB0Ywg0YfQtdGA0LXQtyDRgtC+0YfQutGDIHZhbHVlcy5mcm9tXG4qICovXG4kd3JhcC5jb2xvclNsaWRlcignZ2V0VmFsdWUnLCBmdW5jdGlvbiAodmFsdWVzKSB7XG4gICAgJCgnLmpzLWN1c3RvbS1mcm9tJykudmFsKHZhbHVlcy5mcm9tKTtcbiAgICAkKCcuanMtY3VzdG9tLXRvJykudmFsKHZhbHVlcy50byk7XG59KTtcbi8qKlxuICog0JTQu9GPINC40LfQvNC10L3QtdC90LjRjyDQvdCwIGN1c3RvbS1idXR0b25cbiAqINCS0YvQt9GL0LDRgtGMINC80LXRgtC+0LQgY2hhbmdlINGBINC90LXQvtCx0YXQvtC00LjQvNGL0LzQuCDQv9Cw0YDQsNC80LXRgtGA0LDQvNC4XG4qICovXG4kKCcuanMtY3VzdG9tLWJ0bicpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAkd3JhcC5jb2xvclNsaWRlcignY2hhbmdlJywge1xuICAgICAgICBjb2xvcjogJ3JlZCcsIGdyYWRpZW50OiAnYmx1ZScsIG1heDogMTAwMCwgZnJvbTogMjAwLCB0bzogODAwLCBvbmx5RGl2aXNpb25zOiB0cnVlLCBmcm9tVG86IHRydWUsXG4gICAgfSk7XG59KTtcbi8vICAgICAgKioqICDQlNGN0LzQviDRgdGC0LDQvdC40YbQsCAgICoqKlxudmFyIGZpcnN0T3B0aW9ucyA9IHtcbiAgICBpc1ZlcnRpY2FsOiB0cnVlLFxuICAgIGlzRG91YmxlOiBmYWxzZSxcbiAgICBpc0NvbG9yT3V0OiB0cnVlLFxuICAgIGlzU2NhbGU6IGZhbHNlLFxufTtcbnZhciB0d29PcHRpb25zID0ge1xuICAgIGdyYWRpZW50OiAncmVkJyxcbiAgICBjb2xvcjogJyM2Njk4ZGInLFxuICAgIG1heDogMTUwMDAsXG4gICAgZnJvbTogNTAwMCxcbiAgICB0bzogMTAwMDAsXG4gICAgZnJvbVRvOiB0cnVlLFxuICAgIHNlcGFyYXRlOiAnLicsXG4gICAgb25seURpdmlzaW9uczogZmFsc2UsXG59O1xudmFyIHRocmVlT3B0aW9ucyA9IHtcbiAgICBpc1ZlcnRpY2FsOiB0cnVlLFxuICAgIGdyYWRpZW50OiAnYmx1ZScsXG4gICAgY29sb3I6ICd5ZWxsb3cnLFxuICAgIHBvc3RmaXg6ICcnLFxuICAgIHNjYWxlUG9zdGZpeDogJycsXG4gICAgbWluOiAtNTAwMCxcbiAgICBtYXg6IC0xMDAsXG4gICAgc3RlcDogMixcbiAgICBmcm9tOiAtNDAwMCxcbiAgICB0bzogLTcwMCxcbiAgICBjaGFuZ2VDb2xvcjogZmFsc2UsXG4gICAgc2VwYXJhdGU6ICcsJyxcbiAgICBvbmx5RGl2aXNpb25zOiBmYWxzZSxcbn07XG52YXIgZm91ck9wdGlvbnMgPSB7XG4gICAgaXNHcmFkaWVudDogZmFsc2UsXG4gICAgY29sb3I6ICdibGFjaycsXG4gICAgbWF4OiAxNTAwLFxuICAgIGZyb206IDUwMCxcbiAgICB0bzogMTAwMCxcbiAgICBmcm9tVG86IHRydWUsXG4gICAgc2VwYXJhdGU6ICcgJyxcbiAgICBwb3N0Zml4OiAnJCcsXG4gICAgc2NhbGVQb3N0Zml4OiAnJCcsXG4gICAgdHJhY2tQb3N0Zml4OiAnJCcsXG4gICAgaXNQcmVmaXg6IHRydWUsXG4gICAgaXNDb2xvcjogZmFsc2UsXG4gICAgb25seURpdmlzaW9uczogdHJ1ZSxcbn07XG52YXIgZml2ZU9wdGlvbnMgPSB7XG4gICAgaXNTY2FsZTogZmFsc2UsXG4gICAgaXNMYWJlbDogZmFsc2UsXG4gICAgY29sb3I6ICdncmVlbicsXG4gICAgaXNEb3VibGU6IHRydWUsXG59O1xudmFyIHNpeE9wdGlvbnMgPSB7XG4gICAgZ3JhZGllbnQ6ICdibGFjaycsXG4gICAgY29sb3I6ICcjOTAwMjAyJyxcbiAgICBtYXg6IDE1MDAuNSxcbiAgICBmcm9tOiA1MDAuMixcbiAgICB0bzogMTAwMC4zLFxuICAgIHN0ZXA6IDMuNyxcbiAgICBtaW46IC0xMDAuMixcbiAgICBzZXBhcmF0ZTogJy4nLFxuICAgIHBvc3RmaXg6ICfigqwnLFxuICAgIHNjYWxlUG9zdGZpeDogJ+KCrCcsXG4gICAgdHJhY2tQb3N0Zml4OiAn4oKsJyxcbiAgICBpc0NvbG9yOiBmYWxzZSxcbiAgICBvbmx5RGl2aXNpb25zOiBmYWxzZSxcbn07XG52YXIgb3B0aW9ucyA9IFtmaXJzdE9wdGlvbnMsIHR3b09wdGlvbnMsIHRocmVlT3B0aW9ucywgZm91ck9wdGlvbnMsIGZpdmVPcHRpb25zLCBzaXhPcHRpb25zXTtcbnZhciAkd3JhcHBlcnMgPSAkKCcuanMtc2xpZGVyJyk7XG4kd3JhcHBlcnMuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICBuZXcgRGVtb18xLkRlbW8oJChlbGVtZW50KS5jb2xvclNsaWRlcihvcHRpb25zW2luZGV4XSkuY29sb3JTbGlkZXIoJ2NoYW5nZScpKTtcbn0pO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZW1vID0gdm9pZCAwO1xudmFyIGludGVyZmFjZXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9zbGlkZXIvaW50ZXJmYWNlcy9pbnRlcmZhY2VzXCIpO1xudmFyIGRlbW9UZW1wbGF0ZV8xID0gcmVxdWlyZShcIi4vZGVtb1RlbXBsYXRlXCIpO1xudmFyIERlbW8gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGVtbyhzbGlkZXIpIHtcbiAgICAgICAgdGhpcy5zbGlkZXIgPSBzbGlkZXI7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBzbGlkZXIuZ2V0T3B0aW9ucygpO1xuICAgICAgICB0aGlzLmRlbW9Ub29scyA9IHRoaXMuY3JlYXRlVG9vbHMoKTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuICAgIERlbW8ucHJvdG90eXBlLnVwRGF0YSA9IGZ1bmN0aW9uIChuZXdTZXR0aW5nKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgdGhpcy5zdGF0ZSksIG5ld1NldHRpbmcpO1xuICAgICAgICB0aGlzLmluaXRUb29scygpO1xuICAgIH07XG4gICAgRGVtby5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jcmVhdGVTZXR0aW5ncygpO1xuICAgICAgICB0aGlzLmluaXRUb29scygpO1xuICAgICAgICB0aGlzLnVwRGF0YSA9IHRoaXMudXBEYXRhLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuc2xpZGVyLmVtaXR0ZXIuc3Vic2NyaWJlKGludGVyZmFjZXNfMS5FdmVudHMuTkVXX0RBVEEsIHRoaXMudXBEYXRhKTtcbiAgICB9O1xuICAgIERlbW8ucHJvdG90eXBlLmNyZWF0ZVRvb2xzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGVtb1Rvb2xzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGRlbW9Ub29scy5jbGFzc05hbWUgPSAncGFuZWxfX3Rvb2xzJztcbiAgICAgICAgcmV0dXJuIGRlbW9Ub29scztcbiAgICB9O1xuICAgIERlbW8ucHJvdG90eXBlLmNyZWF0ZVNldHRpbmdzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnNsaWRlci5lbGVtZW50LmFmdGVyKHRoaXMuZGVtb1Rvb2xzKTtcbiAgICAgICAgdGhpcy5kZW1vVG9vbHMuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBkZW1vVGVtcGxhdGVfMS5kZW1vVGVtcGxhdGUpO1xuICAgIH07XG4gICAgRGVtby5wcm90b3R5cGUuaW5pdFRvb2xzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgX2EgPSB0aGlzLnN0YXRlLCBpc1NjYWxlID0gX2EuaXNTY2FsZSwgaXNMYWJlbCA9IF9hLmlzTGFiZWwsIGZyb20gPSBfYS5mcm9tLCB0byA9IF9hLnRvLCBtaW4gPSBfYS5taW4sIG1heCA9IF9hLm1heCwgcG9zdGZpeCA9IF9hLnBvc3RmaXgsIHN0ZXAgPSBfYS5zdGVwLCBjb2xvciA9IF9hLmNvbG9yLCBpc1NjYWxlUG9zdGZpeCA9IF9hLmlzU2NhbGVQb3N0Zml4LCBzY2FsZVBvc3RmaXggPSBfYS5zY2FsZVBvc3RmaXgsIG1pbk1heCA9IF9hLm1pbk1heCwgZnJvbVRvID0gX2EuZnJvbVRvLCBpc1RyYWNrUG9zdGZpeCA9IF9hLmlzVHJhY2tQb3N0Zml4LCB0cmFja1Bvc3RmaXggPSBfYS50cmFja1Bvc3RmaXgsIGlzQ29sb3IgPSBfYS5pc0NvbG9yLCBncmFkaWVudCA9IF9hLmdyYWRpZW50LCBpc0NvbG9yT3V0ID0gX2EuaXNDb2xvck91dCwgY2hhbmdlQ29sb3IgPSBfYS5jaGFuZ2VDb2xvciwgaXNHcmFkaWVudCA9IF9hLmlzR3JhZGllbnQsIGdyYWRpZW50RGVnID0gX2EuZ3JhZGllbnREZWcsIG9ubHlEaXZpc2lvbnMgPSBfYS5vbmx5RGl2aXNpb25zLCBpc1Bvc3RmaXggPSBfYS5pc1Bvc3RmaXgsIGlzQ2hhbmdlQ29sb3IgPSBfYS5pc0NoYW5nZUNvbG9yLCBzZXBhcmF0ZSA9IF9hLnNlcGFyYXRlLCBpc1NlcGFyYXRlID0gX2EuaXNTZXBhcmF0ZSwgaXNQcmVmaXggPSBfYS5pc1ByZWZpeCwgaXNWZXJ0aWNhbCA9IF9hLmlzVmVydGljYWwsIGlzRG91YmxlID0gX2EuaXNEb3VibGU7XG4gICAgICAgIHZhciBidG5TY2FsZSA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1idG4tc2NhbGUnKTtcbiAgICAgICAgdmFyIGJ0blZpZXcgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtYnRuLXZpZXcnKTtcbiAgICAgICAgdmFyIGJ0blBvc3RmaXggPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtYnRuLXBvc3RmaXgnKTtcbiAgICAgICAgdmFyIGJ0bkNvbG9yID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWJ0bi1jb2xvcicpO1xuICAgICAgICB2YXIgbWVudVNjYWxlID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLW1lbnUtc2NhbGUnKTtcbiAgICAgICAgdmFyIG1lbnVWaWV3ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLW1lbnUtdmlldycpO1xuICAgICAgICB2YXIgbWVudVBvc3RmaXggPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtbWVudS1wb3N0Zml4Jyk7XG4gICAgICAgIHZhciBtZW51Q29sb3IgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtY29sb3Itc2V0dGluZycpO1xuICAgICAgICB2YXIgaXNPcmllbnRhdGlvbiA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1vcmllbnRhdGlvbicpO1xuICAgICAgICB2YXIgY2hhbmdlU2NhbGUgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtaXNTY2FsZScpO1xuICAgICAgICB2YXIgaW5wdXRDb2xvck91dCA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1pc0NvbG9yT3V0Jyk7XG4gICAgICAgIHZhciBsYWJlbCA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1pc0xhYmVsJyk7XG4gICAgICAgIHZhciBpc0RvdWJsZVR5cGUgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtaXNEb3VibGUnKTtcbiAgICAgICAgdmFyIGlucHV0RnJvbSA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1mcm9tJyk7XG4gICAgICAgIHZhciBpbnB1dFRvID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLXRvJyk7XG4gICAgICAgIHZhciBpbnB1dE1pbiA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1taW4nKTtcbiAgICAgICAgdmFyIGlucHV0TWF4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLW1heCcpO1xuICAgICAgICB2YXIgaW5wdXRNYXJrZXIgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtbWFya2VyJyk7XG4gICAgICAgIHZhciBpbnB1dFN0ZXAgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtc3RlcCcpO1xuICAgICAgICB2YXIgaW5wdXRTZXBhcmF0ZSA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1zZXBhcmF0ZScpO1xuICAgICAgICB2YXIgaW5wdXRDb2xvciA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1jb2xvcicpO1xuICAgICAgICB2YXIgaW5wdXRJc1Bvc3RmaXggPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtaXNQb3N0Zml4Jyk7XG4gICAgICAgIHZhciBpbnB1dElzUHJlZml4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzUHJlZml4LWFsbCcpO1xuICAgICAgICB2YXIgaW5wdXRTY2FsZVBvc3RmaXggPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtc2NhbGUtcG9zdGZpeCcpO1xuICAgICAgICB2YXIgaW5wdXRJc0NoYW5nZUNvbG9yID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzQ2hhbmdlQ29sb3InKTtcbiAgICAgICAgdmFyIGlucHV0TWluTWF4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLW1pbk1heCcpO1xuICAgICAgICB2YXIgaW5wdXRJc1NlcGFyYXRlID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzU2NhbGVEZWwnKTtcbiAgICAgICAgdmFyIGlucHV0RnJvbVRvID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWZyb21UbycpO1xuICAgICAgICB2YXIgaW5wdXREaXZpc2lvbiA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1kaXZpc2lvbicpO1xuICAgICAgICB2YXIgaW5wdXRJc1RyYWNrUG9zdGZpeCA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1pc1RyYWNrUG9zdGZpeCcpO1xuICAgICAgICB2YXIgaW5wdXRJc1Rvb2xQb3N0Zml4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzUG9zdGZpeFRvb2wnKTtcbiAgICAgICAgdmFyIGlucHV0VHJhY2tQb3N0Zml4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLXRyYWNrLXBvc3RmaXgnKTtcbiAgICAgICAgdmFyIGlucHV0SXNDb2xvciA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1pc0NvbG9yJyk7XG4gICAgICAgIHZhciBpbnB1dENoYW5nZUNvbG9yID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWNoYW5nZUNvbG9yJyk7XG4gICAgICAgIHZhciBpbnB1dEdyYWRpZW50ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWdyYWRpZW50Jyk7XG4gICAgICAgIHZhciBpbnB1dEdyYWRpZW50T3V0ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWdyYWRpZW50LW91dCcpO1xuICAgICAgICB2YXIgaW5wdXRHcmFkaWVudERlZyA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1ncmFkaWVudC1kZWcnKTtcbiAgICAgICAgYnRuVmlldy5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbWVudVZpZXcuY2xhc3NMaXN0LnRvZ2dsZSgncGFuZWxfaXMtdmlzaWJsZScpO1xuICAgICAgICB9O1xuICAgICAgICBidG5TY2FsZS5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbWVudVNjYWxlLmNsYXNzTGlzdC50b2dnbGUoJ3BhbmVsX2lzLXZpc2libGUnKTtcbiAgICAgICAgfTtcbiAgICAgICAgYnRuQ29sb3Iub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG1lbnVDb2xvci5jbGFzc0xpc3QudG9nZ2xlKCdwYW5lbF9pcy12aXNpYmxlJyk7XG4gICAgICAgIH07XG4gICAgICAgIGJ0blBvc3RmaXgub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG1lbnVQb3N0Zml4LmNsYXNzTGlzdC50b2dnbGUoJ3BhbmVsX2lzLXZpc2libGUnKTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqICAgICDRh9C10LrQsdC+0LrRgdGLICAgICogKi9cbiAgICAgICAgaXNPcmllbnRhdGlvbi5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghaXNWZXJ0aWNhbCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNWZXJ0aWNhbDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1ZlcnRpY2FsOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRJc1Bvc3RmaXgub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaXNTY2FsZVBvc3RmaXgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzU2NhbGVQb3N0Zml4OiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghaXNTY2FsZVBvc3RmaXgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzU2NhbGVQb3N0Zml4OiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dElzVG9vbFBvc3RmaXgub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaXNQb3N0Zml4KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1Bvc3RmaXg6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc1Bvc3RmaXgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzUG9zdGZpeDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRJc1ByZWZpeC5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChpc1ByZWZpeCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNQcmVmaXg6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc1ByZWZpeCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNQcmVmaXg6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0R3JhZGllbnQub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaXNHcmFkaWVudCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNHcmFkaWVudDogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWlzR3JhZGllbnQpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzR3JhZGllbnQ6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0SXNDaGFuZ2VDb2xvci5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChpc0NoYW5nZUNvbG9yKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0NoYW5nZUNvbG9yOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghaXNDaGFuZ2VDb2xvcikge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNDaGFuZ2VDb2xvcjogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRJc1NlcGFyYXRlLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGlzU2VwYXJhdGUpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzU2VwYXJhdGU6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc1NlcGFyYXRlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1NlcGFyYXRlOiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dENvbG9yT3V0Lm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGlzQ29sb3JPdXQpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzQ29sb3JPdXQ6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc0NvbG9yT3V0KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0NvbG9yT3V0OiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjaGFuZ2VTY2FsZS5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghaXNTY2FsZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNTY2FsZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNTY2FsZTogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGxhYmVsLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGlzTGFiZWwpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzTGFiZWw6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc0xhYmVsKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0xhYmVsOiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpc0RvdWJsZVR5cGUub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoIWlzRG91YmxlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0RvdWJsZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc0RvdWJsZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNEb3VibGU6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dE1pbk1heC5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghbWluTWF4KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBtaW5NYXg6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IG1pbk1heDogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0RnJvbVRvLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCFmcm9tVG8pIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGZyb21UbzogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgZnJvbVRvOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXREaXZpc2lvbi5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghb25seURpdmlzaW9ucykge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgb25seURpdmlzaW9uczogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgb25seURpdmlzaW9uczogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0SXNUcmFja1Bvc3RmaXgub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoIWlzVHJhY2tQb3N0Zml4KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1RyYWNrUG9zdGZpeDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNUcmFja1Bvc3RmaXg6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dElzQ29sb3Iub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaXNDb2xvcikge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNDb2xvcjogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzQ29sb3I6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0Q2hhbmdlQ29sb3Iub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoY2hhbmdlQ29sb3IpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGNoYW5nZUNvbG9yOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgY2hhbmdlQ29sb3I6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8vKiAqICAgICDQuNC90L/Rg9GC0YsgICAgKiovXG4gICAgICAgIGlucHV0TWFya2VyLnZhbHVlID0gcG9zdGZpeDtcbiAgICAgICAgaW5wdXRNYXJrZXIub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBpbnB1dE1hcmtlci52YWx1ZTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgcG9zdGZpeDogdmFsdWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0RnJvbS52YWx1ZSA9IFN0cmluZyhmcm9tKTtcbiAgICAgICAgaW5wdXRGcm9tLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gTnVtYmVyKGlucHV0RnJvbS52YWx1ZSk7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGZyb206IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbnB1dFRvLnZhbHVlID0gU3RyaW5nKHRvKTtcbiAgICAgICAgaW5wdXRUby5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IE51bWJlcihpbnB1dFRvLnZhbHVlKTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgdG86IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbnB1dE1pbi52YWx1ZSA9IFN0cmluZyhtaW4pO1xuICAgICAgICBpbnB1dE1pbi5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IE51bWJlcihpbnB1dE1pbi52YWx1ZSk7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IG1pbjogdmFsdWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0TWF4LnZhbHVlID0gU3RyaW5nKG1heCk7XG4gICAgICAgIGlucHV0TWF4Lm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gTnVtYmVyKGlucHV0TWF4LnZhbHVlKTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgbWF4OiB2YWx1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRTdGVwLnZhbHVlID0gU3RyaW5nKHN0ZXApO1xuICAgICAgICBpbnB1dFN0ZXAub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBOdW1iZXIoaW5wdXRTdGVwLnZhbHVlKTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgc3RlcDogdmFsdWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0Q29sb3IudmFsdWUgPSBTdHJpbmcoY29sb3IpO1xuICAgICAgICBpbnB1dENvbG9yLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gaW5wdXRDb2xvci52YWx1ZTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgY29sb3I6IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbnB1dEdyYWRpZW50T3V0LnZhbHVlID0gU3RyaW5nKGdyYWRpZW50KTtcbiAgICAgICAgaW5wdXRHcmFkaWVudE91dC5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGlucHV0R3JhZGllbnRPdXQudmFsdWU7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGdyYWRpZW50OiB2YWx1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRHcmFkaWVudERlZy52YWx1ZSA9IFN0cmluZyhncmFkaWVudERlZyk7XG4gICAgICAgIGlucHV0R3JhZGllbnREZWcub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBOdW1iZXIoaW5wdXRHcmFkaWVudERlZy52YWx1ZSk7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGdyYWRpZW50RGVnOiB2YWx1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRTY2FsZVBvc3RmaXgudmFsdWUgPSBzY2FsZVBvc3RmaXg7XG4gICAgICAgIGlucHV0U2NhbGVQb3N0Zml4Lm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gaW5wdXRTY2FsZVBvc3RmaXgudmFsdWU7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHNjYWxlUG9zdGZpeDogdmFsdWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0VHJhY2tQb3N0Zml4LnZhbHVlID0gdHJhY2tQb3N0Zml4O1xuICAgICAgICBpbnB1dFRyYWNrUG9zdGZpeC5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGlucHV0VHJhY2tQb3N0Zml4LnZhbHVlO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyB0cmFja1Bvc3RmaXg6IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgICAgICAvLyDQstCw0LvQuNC00LDRhtC40Y8g0LLQstC+0LTQsFxuICAgICAgICBpZiAoc2VwYXJhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaW5wdXRTZXBhcmF0ZS52YWx1ZSA9ICcgJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZXBhcmF0ZSA9PT0gJyAnKSB7XG4gICAgICAgICAgICBpbnB1dFNlcGFyYXRlLnZhbHVlID0gJyAnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaW5wdXRTZXBhcmF0ZS52YWx1ZSA9IHNlcGFyYXRlO1xuICAgICAgICB9XG4gICAgICAgIGlucHV0U2VwYXJhdGUub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBpbnB1dFNlcGFyYXRlLnZhbHVlO1xuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSAnLicgJiYgdmFsdWUgIT09ICcsJykge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gJyAnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBzZXBhcmF0ZTogdmFsdWUgfSk7XG4gICAgICAgIH07XG4gICAgfTtcbiAgICBEZW1vLnByb3RvdHlwZS5zZXRTdGF0ZSA9IGZ1bmN0aW9uIChuZXdPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgdGhpcy5zdGF0ZSksIG5ld09wdGlvbnMpO1xuICAgICAgICB0aGlzLnNsaWRlci5zZXRPcHRpb25zKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLnNsaWRlci51cERhdGFWaWV3KCk7XG4gICAgfTtcbiAgICByZXR1cm4gRGVtbztcbn0oKSk7XG5leHBvcnRzLkRlbW8gPSBEZW1vO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlbW9UZW1wbGF0ZSA9IHZvaWQgMDtcbnZhciBkZW1vVGVtcGxhdGUgPSBcIlxcblxcblxcbjxoNCAgY2xhc3M9XFxcInBhbmVsX190aXRsZVxcXCI+XFx1MDQxRlxcdTA0MzBcXHUwNDNEXFx1MDQzNVxcdTA0M0JcXHUwNDRDIFxcdTA0NDNcXHUwNDNGXFx1MDQ0MFxcdTA0MzBcXHUwNDMyXFx1MDQzQlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEY8L2g0PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5WL0ggXFx1MDQxMlxcdTA0MzhcXHUwNDM0XFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtb3JpZW50YXRpb25cXFwiIG5hbWU9XFxcIm9yaWVudGF0aW9uXFxcIiAvPlxcbjwvbGFiZWw+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXNcXFwiPlxcdTA0MUZcXHUwNDNFXFx1MDQzQVxcdTA0MzBcXHUwNDM3XFx1MDQzMFxcdTA0NDJcXHUwNDRDL1xcdTA0MjFcXHUwNDNBXFx1MDQ0MFxcdTA0NEJcXHUwNDQyXFx1MDQ0QyBUb29sdGlwXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNMYWJlbFxcXCIgbmFtZT1cXFwibGFiZWxcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5SYW5nZS9TaW5nbGVcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1pc0RvdWJsZVxcXCIgbmFtZT1cXFwiZG91YmxlXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG5cXG48YnV0dG9uIGNsYXNzPVxcXCJwYW5lbF9fYnV0dG9uIGpzLWJ0bi12aWV3XFxcIj5cXHUwNDFEXFx1MDQzMFxcdTA0NDFcXHUwNDQyXFx1MDQ0MFxcdTA0M0VcXHUwNDM5XFx1MDQzQVxcdTA0MzggXFx1MDQzRVxcdTA0NDJcXHUwNDNFXFx1MDQzMVxcdTA0NDBcXHUwNDMwXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEY8L2J1dHRvbj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9fbWVudSBqcy1tZW51LXZpZXdcXFwiPlxcblxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDFGXFx1MDQzRVxcdTA0M0FcXHUwNDMwXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQ0QyBtaW4vbWF4XFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtbWluTWF4XFxcIiBuYW1lPVxcXCJtaW5NYXhcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDFGXFx1MDQzRVxcdTA0M0FcXHUwNDMwXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQ0QyBmcm9tL3RvXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtZnJvbVRvXFxcIiBuYW1lPVxcXCJmcm9tVG9cXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDE0XFx1MDQzRVxcdTA0MzFcXHUwNDMwXFx1MDQzMlxcdTA0MzhcXHUwNDQyXFx1MDQ0Qy9cXHUwNDQzXFx1MDQzMVxcdTA0NDBcXHUwNDMwXFx1MDQ0MlxcdTA0NEMgXFx1MDQ0MFxcdTA0MzBcXHUwNDM3XFx1MDQzNFxcdTA0MzVcXHUwNDNCXFx1MDQzOFxcdTA0NDJcXHUwNDM1XFx1MDQzQlxcdTA0NENcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1pc1NjYWxlRGVsXFxcIiBuYW1lPVxcXCJzY2FsZVxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPlxcdTA0MTRcXHUwNDM1XFx1MDQzQlxcdTA0MzhcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDRDXFxuPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLXNlcGFyYXRlXFxcIiBuYW1lPVxcXCJzZXBhcmF0ZVxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXNcXFwiPlxcdTA0MTJcXHUwNDRCXFx1MDQzMlxcdTA0M0VcXHUwNDM0XFx1MDQzOFxcdTA0NDJcXHUwNDRDIFxcdTA0NDZcXHUwNDMyXFx1MDQzNVxcdTA0NDJcXHUwNDMwL1xcdTA0MzdcXHUwNDNEXFx1MDQzMFxcdTA0NDdcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRGXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNDb2xvck91dFxcXCIgbmFtZT1cXFwiY29sb3JcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcblxcblxcblxcbjxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwicGFuZWxfX2J1dHRvbiBqcy1idG4tc2NhbGVcXFwiPlxcdTA0MjNcXHUwNDNGXFx1MDQ0MFxcdTA0MzBcXHUwNDMyXFx1MDQzQlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzUgXFx1MDQ0OFxcdTA0M0FcXHUwNDMwXFx1MDQzQlxcdTA0M0VcXHUwNDM5PC9idXR0b24+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX21lbnUganMtbWVudS1zY2FsZVxcXCI+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXNcXFwiPlxcdTA0MjhcXHUwNDNBXFx1MDQzMFxcdTA0M0JcXHUwNDMwIFxcdTA0NDEgXFx1MDQzNFxcdTA0MzVcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0RlxcdTA0M0NcXHUwNDM4L1xcdTA0MzdcXHUwNDNEXFx1MDQzMFxcdTA0NDdcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRGXFx1MDQzQ1xcdTA0MzhcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1kaXZpc2lvblxcXCIgbmFtZT1cXFwiZGl2aXNpb25cXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDFGXFx1MDQzRVxcdTA0M0FcXHUwNDMwXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQ0Qy9cXHUwNDIxXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgXFx1MDQyOFxcdTA0M0FcXHUwNDMwXFx1MDQzQlxcdTA0NDNcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1pc1NjYWxlXFxcIiBuYW1lPVxcXCJzY2FsZVxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPC9kaXY+XFxuPC9kaXY+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPk1heFxcbjxpbnB1dCB0eXBlPVxcXCJudW1iZXJcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLW1heFxcXCIgbmFtZT1cXFwibWF4XFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVsc1xcXCI+TWluXFxuPGlucHV0IHR5cGU9XFxcIm51bWJlclxcXCIgY2xhc3M9XFxcInBhbmVsX19pbnB1dHMganMtbWluXFxcIiBuYW1lPVxcXCJtaW5cXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzXFxcIj5Gcm9tXFxuPGlucHV0IHR5cGU9XFxcIm51bWJlclxcXCIgY2xhc3M9XFxcInBhbmVsX19pbnB1dHMganMtZnJvbVxcXCIgbmFtZT1cXFwiZnJvbVxcXCIgLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzXFxcIj5Ub1xcbjxpbnB1dCB0eXBlPVxcXCJudW1iZXJcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLXRvXFxcIiBuYW1lPVxcXCJ0b1xcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPlxcdTA0MjhcXHUwNDMwXFx1MDQzM1xcbjxpbnB1dCB0eXBlPVxcXCJudW1iZXJcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLXN0ZXBcXFwiIG5hbWU9XFxcInN0ZXBcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjwvZGl2PlxcblxcblxcbjxidXR0b24gY2xhc3M9XFxcInBhbmVsX19idXR0b24ganMtYnRuLWNvbG9yXFxcIiB0eXBlPVxcXCJidXR0b25cXFwiPlxcdTA0MURcXHUwNDMwXFx1MDQ0MVxcdTA0NDJcXHUwNDQwXFx1MDQzRVxcdTA0MzlcXHUwNDNBXFx1MDQzOCBcXHUwNDQ2XFx1MDQzMlxcdTA0MzVcXHUwNDQyXFx1MDQzMDwvYnV0dG9uPlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19tZW51IGpzLWNvbG9yLXNldHRpbmdcXFwiPlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDNCL1xcdTA0MTJcXHUwNDNBXFx1MDQzQiBcXHUwNDM4XFx1MDQzN1xcdTA0M0NcXHUwNDM1XFx1MDQzRFxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzUgXFx1MDQ0NlxcdTA0MzJcXHUwNDM1XFx1MDQ0MlxcdTA0MzBcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1pc0NvbG9yXFxcIiBuYW1lPVxcXCJpc0NvbG9yXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQxOFxcdTA0NDFcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDRDXFx1MDQzN1xcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0NDJcXHUwNDNFXFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzRSBjc3MvXFx1MDQzRlxcdTA0MzVcXHUwNDQwXFx1MDQzNVxcdTA0M0NcXHUwNDM1XFx1MDQzRFxcdTA0M0RcXHUwNDNFXFx1MDQzOSBcXHUwNDQ2XFx1MDQzMlxcdTA0MzVcXHUwNDQyXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNDaGFuZ2VDb2xvclxcXCIgbmFtZT1cXFwiaXNDb2xvclxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXNcXFwiPlxcdTA0MjFcXHUwNDNDXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0MlxcdTA0NEMgXFx1MDQzRVxcdTA0NDJcXHUwNDQyXFx1MDQzNVxcdTA0M0RcXHUwNDNFXFx1MDQzQVxcbjxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgY2xhc3M9XFxcInBhbmVsX19jaGVja2JveCBwYW5lbF9faW5wdXRzIGpzLWNoYW5nZUNvbG9yXFxcIiBuYW1lPVxcXCJpc0NvbG9yXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQxM1xcdTA0NDBcXHUwNDMwXFx1MDQzNFxcdTA0MzhcXHUwNDM1XFx1MDQzRFxcdTA0NDIgXFx1MDQzMlxcdTA0M0FcXHUwNDNCL1xcdTA0M0VcXHUwNDQyXFx1MDQzQVxcdTA0M0JcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1ncmFkaWVudFxcXCIgbmFtZT1cXFwiaXNDb2xvclxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPlxcdTA0MjZcXHUwNDMyXFx1MDQzNVxcdTA0NDJcXG48aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgY2xhc3M9XFxcInBhbmVsX19pbnB1dHMganMtY29sb3JcXFwiIG5hbWU9XFxcImNvbG9yXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVsc1xcXCI+XFx1MDQxM1xcdTA0NDBcXHUwNDMwXFx1MDQzNFxcdTA0MzhcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXG48aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgY2xhc3M9XFxcInBhbmVsX19pbnB1dHMganMtZ3JhZGllbnQtb3V0XFxcIiBuYW1lPVxcXCJncmFkaWVudFxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPlxcdTA0MjNcXHUwNDMzXFx1MDQzRVxcdTA0M0IgXFx1MDQzM1xcdTA0NDBcXHUwNDMwXFx1MDQzNFxcdTA0MzhcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXHUwNDMwXFxuPGlucHV0IHR5cGU9XFxcIm51bWJlclxcXCIgY2xhc3M9XFxcInBhbmVsX19pbnB1dHMganMtZ3JhZGllbnQtZGVnXFxcIiBuYW1lPVxcXCJncmFkaWVudFxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPC9kaXY+XFxuXFxuXFxuPGJ1dHRvbiB0eXBlPVxcXCJidXR0b25cXFwiIGNsYXNzPVxcXCJwYW5lbF9fYnV0dG9uIGpzLWJ0bi1wb3N0Zml4XFxcIj5Qb3N0Zml4L1ByZWZpeDwvYnV0dG9uPlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19tZW51IGpzLW1lbnUtcG9zdGZpeFxcXCI+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQyMVxcdTA0M0NcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDQyXFx1MDQ0QyBcXHUwNDFGXFx1MDQ0MFxcdTA0MzVcXHUwNDQ0XFx1MDQzOFxcdTA0M0FcXHUwNDQxL1xcdTA0MUZcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDQ0XFx1MDQzOFxcdTA0M0FcXHUwNDQxXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNQcmVmaXgtYWxsXFxcIiBuYW1lPVxcXCJpc1ByZWZpeFxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzIGpzLWxhYmVsLXBvc3RmaXhcXFwiPlxcdTA0MUZcXHUwNDNFXFx1MDQzQVxcdTA0MzBcXHUwNDM3XFx1MDQzMFxcdTA0NDJcXHUwNDRDL1xcdTA0MjFcXHUwNDNBXFx1MDQ0MFxcdTA0NEJcXHUwNDQyXFx1MDQ0QyBQcmUvUG9zdGZpeCB0b29sdGlwXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNQb3N0Zml4VG9vbFxcXCIgbmFtZT1cXFwiaXNQcmVmaXhcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDFGXFx1MDQzRVxcdTA0M0FcXHUwNDMwXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQ0Qy9cXHUwNDIxXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgUHJlL1Bvc3RmaXggXFx1MDQ0OFxcdTA0M0FcXHUwNDMwXFx1MDQzQlxcdTA0NEJcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1pc1Bvc3RmaXhcXFwiIG5hbWU9XFxcImlzUHJlZml4XFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQxRlxcdTA0M0VcXHUwNDNBXFx1MDQzMFxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMvXFx1MDQyMVxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDIFByZS9Qb3N0Zml4IHRyYWNrXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNUcmFja1Bvc3RmaXhcXFwiIG5hbWU9XFxcImlzUHJlZml4XFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVsc1xcXCI+UHJlL1Bvc3RmaXggdG9vbHRpcFxcbjxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwicGFuZWxfX2lucHV0cyBqcy1tYXJrZXJcXFwiIG5hbWU9XFxcIm1hcmtlclxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPlByZS9Qb3N0Zml4IFxcdTA0NDhcXHUwNDNBXFx1MDQzMFxcdTA0M0JcXHUwNDRCXFxuPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLXNjYWxlLXBvc3RmaXhcXFwiIG5hbWU9XFxcImpzLXByZWZpeFxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPlByZS9Qb3N0Zml4IHRyYWNrXFxuPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLXRyYWNrLXBvc3RmaXhcXFwiIG5hbWU9XFxcImpzLXByZWZpeFxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPC9kaXY+XFxuXFxuXCI7XG5leHBvcnRzLmRlbW9UZW1wbGF0ZSA9IGRlbW9UZW1wbGF0ZTtcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0zIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJzb3VyY2VSb290IjoiIn0=