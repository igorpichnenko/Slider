!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=16)}([function(e,t,n){"use strict";var i,o;Object.defineProperty(t,"__esModule",{value:!0}),t.SliderType=t.Orientation=void 0,function(e){e[e.vertical=0]="vertical",e[e.horizontal=1]="horizontal"}(i||(i={})),t.Orientation=i,function(e){e[e.double=0]="double",e[e.single=1]="single"}(o||(o={})),t.SliderType=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var i=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var n=this.events[e];n&&n.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var n=t.isSeparate,i=t.separate,o="";if(!1===n)o=e.toString();else{var s="."===i,a=" "===i;","===i&&(i="en-US"),s&&(i="de-DE"),a&&(i=void 0),o=e.toLocaleString(i)}return o}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var i={orientation:"horizontal",type:"double",min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:n(13).allColors};t.standardOptions=i},function(e,t,n){"use strict";var i,o=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},s=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function r(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},i=[],o=0;o<e.length;o++){var s=e[o],l=t.base?s[0]+t.base:s[0],c=n[l]||0,u="".concat(l," ").concat(c);n[l]=c+1;var d=r(u),p={css:s[1],media:s[2],sourceMap:s[3]};-1!==d?(a[d].references++,a[d].updater(p)):a.push({identifier:u,updater:v(p,t),references:1}),i.push(u)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var o=n.nc;o&&(i.nonce=o)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var a=s(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function p(e,t,n,i){var o=n?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=d(t,o);else{var s=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(s,a[t]):e.appendChild(s)}}function f(e,t,n){var i=n.css,o=n.media,s=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h=null,_=0;function v(e,t){var n,i,o;if(t.singleton){var s=_++;n=h||(h=c(t)),i=p.bind(null,n,s,!1),o=p.bind(null,n,s,!0)}else n=c(t),i=f.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<n.length;i++){var o=r(n[i]);a[o].references--}for(var s=l(e,t),c=0;c<n.length;c++){var u=r(n[c]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}n=s}}}},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=n(6),s=n(3);n(14),function(e){e.fn.colorSlider=function(e){var t={init:function(e,t){var n=i(i({},s.standardOptions),t);return e.data("presenter",new o.Presenter(n,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe("newData",t),void 0===t||e.data("presenter").emitter.subscribe("newData",t),this}},n="object"==typeof e||!e;return"string"==typeof e&&"change"===e?t[e].call(this,this,arguments[1]):("string"==typeof e&&"getValue"===e&&t[e].call(this,this,arguments[1]),n?t.init(this,e):void 0)}}(jQuery)},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var o=n(7),s=n(8),a=n(1),r=n(3),l=function(){function e(e,t){this.element=t,this.emitter=new a.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=i(i({},r.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new o.Model(e)},e.prototype.createView=function(e,t){return new s.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe("newData",this.getNewData),this.view.emitter.subscribe("newPosition",this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit("newData",e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,n=i(i({},t),e);this.model.setData(n)},e}();t.Presenter=l},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var o=n(0),s=n(1),a=function(){function e(e){this.emitter=new s.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),n=this.validateMinMaxStep(e);this.state=i(i(i({},e),t),n),this.emitter.emit("newData",this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,n=e.max,i=e.step;i<=0&&(e.step=.1);var o=t>=n&&n>0||n<0&&n<t;return n<=t&&n<0&&(e.min=t-i),o&&(e.min=t,e.max=t+i),e},e.prototype.validateFromTo=function(e){var t=e.from,n=e.to,i=e.max,s=e.min,a=e.type,r=e.step;a===o.SliderType[1]&&(e.to=i);var l=i<0&&0===s,c=s<0&&i<0,u=a===o.SliderType[0]&&t>=n,d=t>0&&c;return t>i&&(e.from=i-r),t<s&&(e.from=s),n>i&&(e.to=i),l&&(e.from=s,e.to=s),u&&(e.from=n-r),d&&(e.from=s),n<=s&&(e.to=s+r,e.from=s),i<s&&(e.to=s+r),e},e}();t.Model=a},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var o=n(0),s=n(1),a=n(9),r=n(10),l=n(11),c=n(12),u=function(){function e(e,t){this.emitter=new s.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),n=this.getOneStep(e),o=this.slider;return i(i({},e),{size:t,oneStep:n,slider:o})},e.prototype.createSlider=function(e,t){var n=e.orientation,i=document.createElement("div");return i.className="slider slider_"+n,t.append(i),i},e.prototype.createTrack=function(e){return new r.Track(e)},e.prototype.createBar=function(e){return new c.Bar(e)},e.prototype.createRollers=function(e){return new a.Rollers(e)},e.prototype.createScale=function(e){return new l.Scale(e)},e.prototype.upData=function(e){var t=i(i({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.upData(t),this.state=i({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,n=e.max,i=e.step,o=Math.ceil((n-t)/i);return this.getSliderSize(e)/o},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var n=this.drag.bind(this,t),i=function(){document.removeEventListener("mousemove",n),t.removeEventListener("touchmove",n),document.removeEventListener("mouseup",i),t.removeEventListener("touchend",i)};document.addEventListener("mousemove",n),t.addEventListener("touchmove",n),document.addEventListener("mouseup",i),t.addEventListener("touchend",i)}},e.prototype.drag=function(e,t){var n=this.state.orientation;t.preventDefault();var i=0;if(!!/tooltip || roller/.test(e.className)){var s="touchmove"===t.type&&n===o.Orientation[1],a="mousemove"===t.type&&n===o.Orientation[1],r="touchmove"===t.type&&n===o.Orientation[0],l="mousemove"===t.type&&n===o.Orientation[0];s&&(i=this.convertPxToValue(t.touches[0].clientX)),a&&(i=this.convertPxToValue(t.clientX)),r&&(i=this.convertPxToValue(t.touches[0].clientY)),l&&(i=this.convertPxToValue(t.clientY)),this.updatePosition(i,e)}},e.prototype.getTargetType=function(e){var t=this.slider.querySelectorAll(".js-slider__roller");return t[0].contains(e)?"from":t[1].contains(e)?"to":"undefined"},e.prototype.handleScaleClick=function(e){var t,n=this.state.scalePostfix,i=this.state.separate;" "===i&&(i="&nbsp;"),t=e.detail.value.split(n).join("").split(i).join("");var o=String(t).split(",").join(".");this.updatePosition(Number(o))},e.prototype.handleTrackClick=function(e){var t=this.state.orientation,n=e.target,i=0;if(!/scale/.test(n.className)){i=t===o.Orientation[1]?e.clientX:e.clientY;var s=this.convertPxToValue(i);this.updatePosition(s)}},e.prototype.updatePosition=function(e,t){var n=this.state,i=n.from,s=n.to,a=n.type,r=n.step,l=Math.abs(i-e),c=Math.abs(s-e);if(a===o.SliderType[1]&&l)return this.emitter.emit("newPosition",{from:e}),void this.convertValueToColor(e);var u=l<c?"from":"to",d=!t&&"to"===u;!t&&"from"===u&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),d&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e));var p=t&&this.getTargetType(t),f="from"===p&&a===o.SliderType[0],h="to"===p,_=f&&e>s-r,v=h&&e<i+r;f&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),_?this.emitter.emit("newPosition",{from:s-r}):(h&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e)),v&&this.emitter.emit("newPosition",{to:i+r}))},e.prototype.convertPxToValue=function(e){var t=this.state,n=t.min,i=t.max,s=t.step,a=t.oneStep,r=t.size,l=t.orientation,c=this.getSliderPosition(),u=c+r,d=0;return(d=l===o.Orientation[1]?e-c:u-e)>r?i:d<0?n:Math.round(d/a)*s+n},e.prototype.convertValueToColor=function(e){var t=this.state,n=t.color,i=t.gradient,o=this.state,s=o.max,a=o.isColor,r=o.changeColor,l=e/s,c=!0===a&&!0===r,u=0,d=0;!0===a&&!1===r&&(u=Math.round(255*l*255*255),d=Math.round(255*l*254*254)),c&&(u=Math.round(256*l*256*255),d=Math.round(254*l*254*254));var p=Math.abs(d);n="#"+Math.abs(u).toString(16),i="#"+p.toString(16),this.emitter.emit("newPosition",{color:n}),this.emitter.emit("newPosition",{gradient:i})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.orientation,n=e.slider;return t===o.Orientation[1]?n.getBoundingClientRect().left:n.getBoundingClientRect().top},e.prototype.getSliderSize=function(e){return e.orientation===o.Orientation[1]?this.slider.getBoundingClientRect().width:this.slider.getBoundingClientRect().height},e}();t.View=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var i=n(0),o=n(2),s=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=e.orientation,i=document.createElement("div");i.className="slider__roller js-slider__roller slider__roller_first js-slider__roller_first slider__roller_"+n+" js-slider__roller_"+n;var o=document.createElement("div");o.className="slider__roller_second js-slider__roller js-slider__roller_second\n    slider__roller\n    slider__roller_"+n+" js-slider__roller_"+n,t.append(i),t.append(o),this.createTooltip(i,o,e),this.moveRollersAtValue(e,i,o),this.toggleRollers(e,o),this.updataColor(e,i,o)},e.prototype.createTooltip=function(e,t,n){var i=n.orientation,o=document.createElement("div");o.className="slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip slider__tooltip_"+i+" js-slider__tooltip_"+i;var s=document.createElement("div");s.className="slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip slider__tooltip_"+i+" js-slider__tooltip_"+i,e.append(o),t.append(s),this.updataOutTooltip(o,s,n)},e.prototype.updataOutTooltip=function(e,t,n){var i=n.to,s=n.from,a=n.isPostfix,r=n.isLabel,l=n.isPrefix,c=n.postfix;!1===a&&(c="");var u=!0===r&&!0===l;!0===r&&!1===l&&(e.innerHTML=""+o.correctSeparate(s,n)+c,t.innerHTML=""+o.correctSeparate(i,n)+c),u&&(e.innerHTML=""+c+o.correctSeparate(s,n),t.innerHTML=""+c+o.correctSeparate(i,n)),this.setColor(e,t,n)},e.prototype.setColor=function(e,t,n){var i=n.color,o=n.gradient,s=n.isColorOut,a=n.allColors,r=n.isChangeColor,l=n.isLabel,c=a[i],u=a[o];void 0===u&&(u=o),void 0===c&&(c=i),!0===r&&!0===s&&(e.innerHTML=String(c),t.innerHTML=String(u),e.style.backgroundColor=""+i,t.style.backgroundColor=""+o,e.classList.add("slider__tooltip_white-color"),t.classList.add("slider__tooltip_white-color")),!1===l&&(e.classList.add("slider__tooltip_display-none"),t.classList.add("slider__tooltip_display-none"))},e.prototype.updataColor=function(e,t,n){var i=e.color,o=e.isGradient,s=e.gradient,a=e.isChangeColor,r=e.gradientDeg,l=!0===a&&!1===o;!0===a&&!0===o&&(t.style.background="linear-gradient("+r+"deg, "+i+", "+s+")",n.style.background="linear-gradient("+r+"deg, "+i+", "+s+")"),l&&(t.style.background=i,n.style.background=i)},e.prototype.moveRollersAtValue=function(e,t,n){var o=e.to,s=e.from,a=e.orientation,r=this.convertValueToPx(o,e),l=this.convertValueToPx(s,e),c=this.convertPxToProcent(r,e),u=this.convertPxToProcent(l,e);a===i.Orientation[1]?(t.style.left=u+"%",n.style.left=c+"%"):(t.style.bottom=u+"%",n.style.bottom=c+"%")},e.prototype.upData=function(e){var t=e.slider,n=t.querySelector(".js-slider__roller_first"),i=t.querySelector(".js-slider__roller_second"),o=t.querySelector(".js-slider__tooltip_first"),s=t.querySelector(".js-slider__tooltip_second");this.moveRollersAtValue(e,n,i),this.toggleRollers(e,i),this.updataColor(e,n,i),this.updataOutTooltip(o,s,e)},e.prototype.convertValueToPx=function(e,t){var n=t.min,i=t.max,o=t.step,s=t.size,a=t.oneStep;return e===i?s:Math.round((e-n)/o)*a},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e,t){e.type===i.SliderType[1]?t.style.display="none":t.style.display="block"},e}();t.Rollers=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var i=n(2),o=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=e.orientation,i=document.createElement("div");i.className="slider__track slider__track_"+n+" js-slider__track js-slider__track_"+n,t.append(i),this.createOutElement(i,e)},e.prototype.createOutElement=function(e,t){var n=t.orientation,i=document.createElement("div"),o=document.createElement("div");i.className="slider__out slider__out-start slider__out-start_"+n+" js-slider__out js-slider__out-start js-slider__out-start_"+n,o.className="slider__out slider__out-end slider__out-end_"+n+" js-slider__out js-slider__out-end js-slider__out-end_"+n,e.append(i),e.append(o),this.setStartEndTrackOut(i,o,t)},e.prototype.setStartEndTrackOut=function(e,t,n){var o=n.min,s=n.max,a=n.from,r=n.to,l=n.minMax,c=n.fromTo,u=n.isTrackPostfix,d=n.isPrefix,p=n.trackPostfix;!1===u&&(p=""),!0===l&&(e.innerHTML=""+i.correctSeparate(o,n)+p,t.innerHTML=""+i.correctSeparate(s,n)+p),!0===c&&(e.innerHTML=""+i.correctSeparate(a,n)+p,t.innerHTML=""+i.correctSeparate(r,n)+p);var f=!0===c&&!0===d;!0===l&&!0===d&&(e.innerHTML=""+p+i.correctSeparate(o,n),t.innerHTML=""+p+i.correctSeparate(s,n)),f&&(e.innerHTML=""+p+i.correctSeparate(a,n),t.innerHTML=""+p+i.correctSeparate(r,n))},e.prototype.upData=function(e){var t=e.slider,n=t.querySelector(".js-slider__out-start"),i=t.querySelector(".js-slider__out-end");this.setStartEndTrackOut(n,i,e)},e}();t.Track=o},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var o=n(0),s=n(2),a=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,n=e.orientation,i=document.createElement("div");i.className="slider__scale slider__scale_"+n+" js-slider__scale js-slider__scale_"+n,t.append(i),this.addEventListeners(i),this.addScaleMarker(e,i),this.checkScale(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__scale");this.options=i(i({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,n=e.slider,i=e.color;n.querySelectorAll(".js-slider__scale-value").forEach((function(e){!0===t?e.classList.add("slider__scale-value_fs-0"):e.classList.add("slider__scale-value_fs-normal")})),document.documentElement.style.setProperty("--scale-color"," "+i)},e.prototype.checkScale=function(e,t){var n=e.isScale;!1===n&&(t.style.display="none"),!0===n&&(t.style.display="")},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var n=e.min,i=e.max,o=e.step,s=e.size,a=e.oneStep,r=this.getIncrement(e),l=r/o*a,c=document.createDocumentFragment(),u=0,d=0,p=n;p<i&&!(u>s-50);p+=r,d+=1)this.createScaleMarker(c,p,u,e,d),u+=l;this.createScaleMarker(c,i,s,e,5),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,n=e.oneStep,i=e.step,o=Math.ceil(t/n);return Math.ceil(o/5)*i},e.prototype.createScaleMarker=function(e,t,n,i,a){var r=i.orientation,l=i.isScalePostfix,c=i.isPrefix,u=i.onlyDivisions,d=i.scalePostfix;t=Number(t.toFixed(1));var p=document.createElement("span");p.className="slider__scale-value slider__scale-value_"+r+" js-slider__scale-value js-slider__scale-value_"+r;var f=document.createElement("span"),h=document.createElement("span");f.className="slider__division-value js-slider__division-value slider__division-value_"+a,h.className="slider__division js-slider__division",p.append(f),p.append(h),e.append(p);var _=f;!1===u&&(_=p),!1===l&&(d=""),_.innerHTML=""+s.correctSeparate(t,i)+d,!0===c&&(_.innerHTML=""+d+s.correctSeparate(t,i)),this.updataScaleMarker(i);var v=this.convertPxToPercent(n,i);r===o.Orientation[1]?p.style.left=v+"%":p.style.bottom=v+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,n=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var i=!t.classList.contains("slider__division-value")&&!0===n,o=!t.classList.contains("slider__scale-value")&&!1===n;if(!i&&!o){var s=t.innerHTML,a=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:s}});t.dispatchEvent(a)}}},e}();t.Scale=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var i=n(0),o=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,n=e.orientation,i=document.createElement("div");i.className="slider__bar slider__bar_"+n+" js-slider__bar js-slider__bar_"+n,t.append(i),this.updataColor(e,i),this.updataBar(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__bar");this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var n=e.color,i=e.isGradient,o=e.gradient,s=e.gradientDeg,a=e.isChangeColor,r=!0===a&&!1===i;!0===a&&!0===i&&(t.style.background="linear-gradient("+s+"deg, "+n+", "+o+")"),r&&(t.style.background=n)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(".js-slider__roller");return[this.calculatePosition(t[0],e),this.calculatePosition(t[1],e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var n=t.orientation===i.Orientation[1]?"left":"top",o=Number.parseInt(getComputedStyle(e).width,10);return e.getBoundingClientRect()[n]+o/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var n=e.type,o=e.orientation===i.Orientation[1],s=o?"left":"top",a=o?"width":"height",r=this.getRollerPositions(e),l=n===i.SliderType[1],c=this.getNewSliderPos(e);if(l&&o){var u=this.convertPxToProcent(Math.abs(r[1]-c),e);t.style[s]="0%",t.style[a]=u+"%"}else{u=100-(d=this.convertPxToProcent(Math.abs(r[1]-c),e));t.style[s]=d+"%",t.style[a]=u+"%"}if(!l){var d=this.convertPxToProcent(Math.abs(r[0]-c),e);u=this.convertPxToProcent(Math.abs(r[1]-r[0]),e);t.style[s]=d+"%",t.style[a]=u+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.orientation,n=e.slider;return t===i.Orientation[1]?n.getBoundingClientRect().left:n.getBoundingClientRect().top},e}();t.Bar=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,n){var i=n(4),o=n(15);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var s={insert:"head",singleton:!1};i(o,s);e.exports=o.locals||{}},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(17);n(19),n(5);var o=$(".js-test");o.colorSlider({isScale:!1,isChangeColor:!1}),o.colorSlider("getValue",(function(e){$(".js-custom-from").val(e.from),$(".js-custom-to").val(e.to)})),$(".js-custom-btn").click((function(){o.colorSlider("change",{color:"red",gradient:"blue",max:1e3,from:200,to:800,onlyDivisions:!0,fromTo:!0})}));var s=[{orientation:"vertical",type:"double",isColorOut:!0,isScale:!1},{gradient:"red",color:"#6698db",max:15e3,from:5e3,to:1e4,fromTo:!0,separate:".",onlyDivisions:!1},{orientation:"vertical",gradient:"blue",color:"yellow",postfix:"",scalePostfix:"",min:-5e3,max:-100,step:2,from:-4e3,to:-700,changeColor:!1,separate:",",onlyDivisions:!1},{isGradient:!1,color:"black",max:1500,from:500,to:1e3,fromTo:!0,separate:" ",postfix:"$",scalePostfix:"$",trackPostfix:"$",isPrefix:!0,isColor:!1,onlyDivisions:!0},{orientation:"horizontal",type:"single",isScale:!1,isLabel:!1,color:"green"},{gradient:"black",color:"#900202",max:1500.5,from:500.2,to:1000.3,step:3.7,min:-100.2,separate:".",postfix:"€",scalePostfix:"€",trackPostfix:"€",isColor:!1,onlyDivisions:!1}];$(".js-slider").each((function(e,t){new i.Demo($(t).colorSlider(s[e]).colorSlider("change"))}))},function(e,t,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Demo=void 0;var o=n(0),s=n(18),a=function(){function e(e){this.slider=e,this.state=e.getOptions(),this.demoTools=this.createTools(),this.init()}return e.prototype.upData=function(e){this.state=i(i({},this.state),e),this.initTools()},e.prototype.init=function(){this.createSettings(),this.initTools(),this.upData=this.upData.bind(this),this.slider.emitter.subscribe("newData",this.upData)},e.prototype.createTools=function(){var e=document.createElement("div");return e.className="panel__tools",e},e.prototype.createSettings=function(){this.slider.element.after(this.demoTools),this.demoTools.insertAdjacentHTML("beforeend",s.demoTemplate)},e.prototype.initTools=function(){var e=this,t=this.state,n=t.orientation,i=t.isScale,s=t.type,a=t.isLabel,r=t.from,l=t.to,c=t.min,u=t.max,d=t.postfix,p=t.step,f=t.color,h=t.isScalePostfix,_=t.scalePostfix,v=t.minMax,m=t.fromTo,b=t.isTrackPostfix,y=t.trackPostfix,g=t.isColor,S=t.gradient,x=t.isColorOut,j=t.changeColor,k=t.isGradient,T=t.gradientDeg,P=t.onlyDivisions,C=t.isPostfix,w=t.isChangeColor,M=t.separate,O=t.isSeparate,L=t.isPrefix,D=this.demoTools.querySelector(".js-btn-scale"),E=this.demoTools.querySelector(".js-btn-view"),q=this.demoTools.querySelector(".js-btn-postfix"),N=this.demoTools.querySelector(".js-btn-color"),V=this.demoTools.querySelector(".js-menu-scale"),R=this.demoTools.querySelector(".js-menu-view"),H=this.demoTools.querySelector(".js-menu-postfix"),B=this.demoTools.querySelector(".js-color-setting"),z=this.demoTools.querySelector(".js-orientation"),A=this.demoTools.querySelector(".js-isScale"),$=this.demoTools.querySelector(".js-isColorOut"),F=this.demoTools.querySelector(".js-isLabel"),G=this.demoTools.querySelector(".js-isDouble"),I=this.demoTools.querySelector(".js-from"),U=this.demoTools.querySelector(".js-to"),X=this.demoTools.querySelector(".js-min"),Y=this.demoTools.querySelector(".js-max"),J=this.demoTools.querySelector(".js-marker"),Q=this.demoTools.querySelector(".js-step"),K=this.demoTools.querySelector(".js-separate"),W=this.demoTools.querySelector(".js-color"),Z=this.demoTools.querySelector(".js-isPostfix"),ee=this.demoTools.querySelector(".js-isPrefix-all"),te=this.demoTools.querySelector(".js-scale-postfix"),ne=this.demoTools.querySelector(".js-isChangeColor"),ie=this.demoTools.querySelector(".js-minMax"),oe=this.demoTools.querySelector(".js-isScaleDel"),se=this.demoTools.querySelector(".js-fromTo"),ae=this.demoTools.querySelector(".js-division"),re=this.demoTools.querySelector(".js-isTrackPostfix"),le=this.demoTools.querySelector(".js-isPostfixTool"),ce=this.demoTools.querySelector(".js-track-postfix"),ue=this.demoTools.querySelector(".js-isColor"),de=this.demoTools.querySelector(".js-changeColor"),pe=this.demoTools.querySelector(".js-gradient"),fe=this.demoTools.querySelector(".js-gradient-out"),he=this.demoTools.querySelector(".js-gradient-deg");E.onclick=function(){R.classList.toggle("panel__close")},D.onclick=function(){V.classList.toggle("panel__close")},N.onclick=function(){B.classList.toggle("panel__close")},q.onclick=function(){H.classList.toggle("panel__close")},z.onchange=function(){n===o.Orientation[1]&&e.setState({orientation:"vertical"}),n===o.Orientation[0]&&e.setState({orientation:"horizontal"})},Z.onchange=function(){!0===h&&e.setState({isScalePostfix:!1}),!1===h&&e.setState({isScalePostfix:!0})},le.onchange=function(){!0===C&&e.setState({isPostfix:!1}),!1===C&&e.setState({isPostfix:!0})},ee.onchange=function(){!0===L&&e.setState({isPrefix:!1}),!1===L&&e.setState({isPrefix:!0})},pe.onchange=function(){!0===k&&e.setState({isGradient:!1}),!1===k&&e.setState({isGradient:!0})},ne.onchange=function(){!0===w&&e.setState({isChangeColor:!1}),!1===w&&e.setState({isChangeColor:!0})},oe.onchange=function(){!0===O&&e.setState({isSeparate:!1}),!1===O&&e.setState({isSeparate:!0})},$.onchange=function(){!0===x&&e.setState({isColorOut:!1}),!1===x&&e.setState({isColorOut:!0})},A.onchange=function(){!1===i?e.setState({isScale:!0}):e.setState({isScale:!1})},F.onchange=function(){!0===a&&e.setState({isLabel:!1}),!1===a&&e.setState({isLabel:!0})},G.onchange=function(){s===o.SliderType[1]?e.setState({type:"double"}):e.setState({type:"single"})},ie.onchange=function(){!1===v?e.setState({minMax:!0}):e.setState({minMax:!1})},se.onchange=function(){!1===m?e.setState({fromTo:!0}):e.setState({fromTo:!1})},ae.onchange=function(){!1===P?e.setState({onlyDivisions:!0}):e.setState({onlyDivisions:!1})},re.onchange=function(){!1===b?e.setState({isTrackPostfix:!0}):e.setState({isTrackPostfix:!1})},ue.onchange=function(){!0===g?e.setState({isColor:!1}):e.setState({isColor:!0})},de.onchange=function(){!0===j?e.setState({changeColor:!1}):e.setState({changeColor:!0})},J.value=d,J.onchange=function(){var t=J.value;e.setState({postfix:t})},I.value=String(r),I.onchange=function(){var t=Number(I.value);e.setState({from:t})},U.value=String(l),U.onchange=function(){var t=Number(U.value);e.setState({to:t})},X.value=String(c),X.onchange=function(){var t=Number(X.value);e.setState({min:t})},Y.value=String(u),Y.onchange=function(){var t=Number(Y.value);e.setState({max:t})},Q.value=String(p),Q.onchange=function(){var t=Number(Q.value);e.setState({step:t})},W.value=String(f),W.onchange=function(){var t=W.value;e.setState({color:t})},fe.value=String(S),fe.onchange=function(){var t=fe.value;e.setState({gradient:t})},he.value=String(T),he.onchange=function(){var t=Number(he.value);e.setState({gradientDeg:t})},te.value=_,te.onchange=function(){var t=te.value;e.setState({scalePostfix:t})},ce.value=y,ce.onchange=function(){var t=ce.value;e.setState({trackPostfix:t})},K.value=void 0===M||" "===M?" ":M,K.onchange=function(){var t=K.value;"."!==t&&","!==t&&(t=" "),e.setState({separate:t})}},e.prototype.setState=function(e){this.state=i(i({},this.state),e),this.slider.setOptions(this.state),this.slider.upDataView()},e}();t.Demo=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.demoTemplate=void 0;t.demoTemplate='\n\n\n<h4  class="panel__title">Панель управления</h4>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">V/H Вид\n<input type="checkbox" class="panel__checkbox panel__inputs js-orientation" name="orientation" />\n</label>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isLabel" name="label"/>\n</label>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Range/Single\n<input type="checkbox" class="panel__checkbox panel__inputs js-isDouble" name="double"/>\n</label>\n</div>\n\n<button class="panel__button js-btn-view">Настройки отображения</button>\n<div class="panel__menu js-menu-view">\n\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать min/max\n<input type="checkbox" class="panel__checkbox panel__inputs js-minMax" name="minMax"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать from/to\n<input type="checkbox" class="panel__checkbox panel__inputs js-fromTo" name="fromTo"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Добавить/убрать разделитель\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScaleDel" name="scale"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Делитель\n<input type="text" class="panel__inputs js-separate" name="separate"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Выводить цвета/значения\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColorOut" name="color"/>\n</label>\n</div>\n\n\n\n<button type="button" class="panel__button js-btn-scale">Управление шкалой</button>\n<div class="panel__menu js-menu-scale">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Шкала с делениями/значениями\n<input type="checkbox" class="panel__checkbox panel__inputs js-division" name="division"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Шкалу\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScale" name="scale"/>\n</label>\n</div>\n</div>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Max\n<input type="number" class="panel__inputs js-max" name="max"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Min\n<input type="number" class="panel__inputs js-min" name="min"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">From\n<input type="number" class="panel__inputs js-from" name="from" />\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">To\n<input type="number" class="panel__inputs js-to" name="to"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Шаг\n<input type="number" class="panel__inputs js-step" name="step"/>\n</label>\n</div>\n</div>\n\n\n<button class="panel__button js-btn-color" type="button">Настройки цвета</button>\n<div class="panel__menu js-color-setting">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Откл/Вкл изменение цвета\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Использовать только css/переменной цвет\n<input type="checkbox" class="panel__checkbox panel__inputs js-isChangeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Сменить оттенок\n<input type="checkbox" class="panel__checkbox panel__inputs js-changeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Градиент вкл/откл\n<input type="checkbox" class="panel__checkbox panel__inputs js-gradient" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Цвет\n<input type="text" class="panel__inputs js-color" name="color"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Градиент\n<input type="text" class="panel__inputs js-gradient-out" name="gradient"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Угол градиента\n<input type="number" class="panel__inputs js-gradient-deg" name="gradient"/>\n</label>\n</div>\n</div>\n\n\n<button type="button" class="panel__button js-btn-postfix">Postfix/Prefix</button>\n<div class="panel__menu js-menu-postfix">\n<div class="panel__items">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Добавить/убрать Префикс tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPrefix-all" name="isPrefix"/>\n</label>\n</div>\n<label class="panel__labels panel__checkboxes js-label-postfix">Показать/Скрыть Pre/Postfix tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfixTool" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix шкалы\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix track\n<input type="checkbox" class="panel__checkbox panel__inputs js-isTrackPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix tooltip\n<input type="text" class="panel__inputs js-marker" name="marker"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix шкалы\n<input type="text" class="panel__inputs js-scale-postfix" name="js-prefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix track\n<input type="text" class="panel__inputs js-track-postfix" name="js-prefix"/>\n</label>\n</div>\n</div>\n\n'},function(e,t,n){var i=n(4),o=n(20);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var s={insert:"head",singleton:!1};i(o,s);e.exports=o.locals||{}},function(e,t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9pbnRlcmZhY2VzL2ludGVyZmFjZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9FdmVudEVtaXR0ZXIvRXZlbnRFbWl0dGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvbGlicy9zZXBhcmF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL2ludGVyZmFjZXMvc3RhbmRhcmRPcHRpb25zLnRzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL3NsaWRlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL1ByZXNlbnRlci9QcmVzZW50ZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9Nb2RlbC9Nb2RlbC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL1ZpZXcvVmlldy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL1ZpZXcvUm9sbGVycy9Sb2xsZXJzLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvVmlldy9UcmFjay9UcmFjay50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL1ZpZXcvU2NhbGUvU2NhbGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9WaWV3L0Jhci9CYXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9pbnRlcmZhY2VzL2NvbG9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvc2xpZGVyLnNjc3M/NzkxYiIsIndlYnBhY2s6Ly8vLi9zcmMvcHJldmlldy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvcHJldmlldy9EZW1vL0RlbW8udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ByZXZpZXcvRGVtby9kZW1vVGVtcGxhdGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ByZXZpZXcvaW5kZXguc2Nzcz9kYWFjIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiT3JpZW50YXRpb24iLCJTbGlkZXJUeXBlIiwiRXZlbnRFbWl0dGVyIiwidGhpcyIsImV2ZW50cyIsInN1YnNjcmliZSIsImV2ZW50TmFtZSIsImNhbGxiYWNrIiwicHVzaCIsImVtaXQiLCJuZXdEYXRhIiwiZXZlbnQiLCJmb3JFYWNoIiwiY29ycmVjdFNlcGFyYXRlIiwib3B0aW9ucyIsImlzU2VwYXJhdGUiLCJzZXBhcmF0ZSIsInZhbCIsInRvU3RyaW5nIiwic2VwYXJhdGVEZSIsInNlcGFyYXRlRGVmYXVsdCIsInVuZGVmaW5lZCIsInRvTG9jYWxlU3RyaW5nIiwic3RhbmRhcmRPcHRpb25zIiwib3JpZW50YXRpb24iLCJ0eXBlIiwibWluIiwibWF4Iiwic3RlcCIsImZyb20iLCJ0byIsInBvc3RmaXgiLCJpc1ByZWZpeCIsImlzUG9zdGZpeCIsImlzTGFiZWwiLCJpc1NjYWxlIiwiY29sb3IiLCJpc1NjYWxlUG9zdGZpeCIsInNjYWxlUG9zdGZpeCIsIm1pbk1heCIsImZyb21UbyIsImlzVHJhY2tQb3N0Zml4IiwidHJhY2tQb3N0Zml4IiwiaXNDb2xvciIsImNoYW5nZUNvbG9yIiwiaXNDaGFuZ2VDb2xvciIsImlzR3JhZGllbnQiLCJncmFkaWVudCIsImdyYWRpZW50RGVnIiwiaXNDb2xvck91dCIsIm9ubHlEaXZpc2lvbnMiLCJhbGxDb2xvcnMiLCJtZW1vIiwiaXNPbGRJRSIsIkJvb2xlYW4iLCJ3aW5kb3ciLCJkb2N1bWVudCIsImFsbCIsImF0b2IiLCJnZXRUYXJnZXQiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwic3R5bGVzSW5Eb20iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJsZW5ndGgiLCJtb2R1bGVzVG9Eb20iLCJsaXN0IiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaXRlbSIsImlkIiwiYmFzZSIsImNvdW50IiwiY29uY2F0IiwiaW5kZXgiLCJvYmoiLCJjc3MiLCJtZWRpYSIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJrZXlzIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJqb2luIiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsInJlbW92ZSIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNyZWF0ZVRleHROb2RlIiwiY2hpbGROb2RlcyIsInJlbW92ZUNoaWxkIiwiaW5zZXJ0QmVmb3JlIiwiYXBwbHlUb1RhZyIsInJlbW92ZUF0dHJpYnV0ZSIsImJ0b2EiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmaXJzdENoaWxkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4Iiwic3BsaWNlIiwiX19hc3NpZ24iLCJhc3NpZ24iLCJhcmd1bWVudHMiLCJhcHBseSIsIlByZXNlbnRlcl8xIiwic3RhbmRhcmRPcHRpb25zXzEiLCIkIiwiZm4iLCJjb2xvclNsaWRlciIsIm1ldGhvZCIsIm1ldGhvZHMiLCJpbml0IiwiJHNsaWRlciIsIm5ld1BhcmFtIiwibmV3T3B0aW9ucyIsImRhdGEiLCJQcmVzZW50ZXIiLCJjaGFuZ2UiLCJ2YWx1ZXMiLCJzZXRPcHRpb25zIiwidXBEYXRhVmlldyIsImdldFZhbHVlIiwiZnVuYyIsImVtaXR0ZXIiLCJpc01ldGhvZCIsImpRdWVyeSIsIk1vZGVsXzEiLCJWaWV3XzEiLCJFdmVudEVtaXR0ZXJfMSIsImVsZW1lbnQiLCJtb2RlbCIsImNyZWF0ZU1vZGVsIiwidmlldyIsImNyZWF0ZVZpZXciLCJzdGF0ZSIsImJpbmRTdWJzY3JpYmUiLCJ1cERhdGFTbGlkZXIiLCJzZXREYXRhIiwiZ2V0T3B0aW9ucyIsIk1vZGVsIiwiVmlldyIsImdldE5ld0RhdGEiLCJzZW5kTmV3UG9zaXRpb24iLCJhZGRTdWJzY3JpYnRpb25zIiwidXBEYXRhIiwibmV3UG9zaXRpb24iLCJtb2RlbFN0YXRlIiwiaW50ZXJmYWNlc18xIiwiT3B0aW9ucyIsInZhbGlkYXRlRnJvbVRvIiwidmFsaWRhdGVNaW5NYXhTdGVwIiwiaXNNaW5NYXgiLCJtYXhNaW5aZXJvIiwiaXNNaW5NYXhaZXJvIiwiaXNTaW5nbGVGcm9tIiwiaXNDb3JyZWN0RnJvbSIsIlJvbGxlcnNfMSIsIlRyYWNrXzEiLCJTY2FsZV8xIiwiQmFyXzEiLCJzbGlkZXIiLCJjcmVhdGVTbGlkZXIiLCJyb2xsZXJzIiwiY3JlYXRlUm9sbGVycyIsImJhciIsImNyZWF0ZUJhciIsInRyYWNrIiwiY3JlYXRlVHJhY2siLCJzY2FsZSIsImNyZWF0ZVNjYWxlIiwiYmluZEV2ZW50TGlzdGVuZXJzIiwic2l6ZSIsImdldFNsaWRlclNpemUiLCJvbmVTdGVwIiwiZ2V0T25lU3RlcCIsImNsYXNzTmFtZSIsImFwcGVuZCIsIlRyYWNrIiwiQmFyIiwiUm9sbGVycyIsIlNjYWxlIiwibmV3U3RhdGUiLCJ1cGRhdGFTdGF0ZSIsIk1hdGgiLCJjZWlsIiwiaGFuZGxlVHJhY2tDbGljayIsImhhbmRsZVNjYWxlQ2xpY2siLCJhZGRFdmVudExpc3RlbmVycyIsImhhbmRsZVNsaWRlckRyYWciLCJkcmFnU3RhcnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0VGFyZ2V0VHlwZSIsImRyYWdfMSIsImRyYWciLCJoYW5kbGVVcF8xIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwibW91c2VWYWx1ZSIsInRlc3QiLCJzZW5zb3JIb3Jpem9udGFsRXZlbnQiLCJtb3VzZUhvcml6b250YWxFdmVudCIsInNlbnNvclZlcnRpY2FsRXZlbnQiLCJtb3VzZVZlcnRpY2FsRXZlbnQiLCJjb252ZXJ0UHhUb1ZhbHVlIiwidG91Y2hlcyIsImNsaWVudFgiLCJjbGllbnRZIiwidXBkYXRlUG9zaXRpb24iLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29udGFpbnMiLCJwb3NpdGlvbiIsImRldGFpbCIsInNwbGl0IiwiU3RyaW5nIiwiTnVtYmVyIiwiY29vcmRpbmF0ZSIsIl9hIiwiZnJvbURpc3RhbmNlIiwiYWJzIiwidG9EaXN0YW5jZSIsImNvbnZlcnRWYWx1ZVRvQ29sb3IiLCJpc0Zyb20iLCJ0YXJnZXRUbyIsInRhcmdldHMiLCJpc0Zyb21UYXJnZXQiLCJpc1RvVGFyZ2V0IiwiY29ycmVjdEZyb20iLCJjb3JyZWN0VG8iLCJzbGlkZXJQb3MiLCJnZXRTbGlkZXJQb3NpdGlvbiIsInNsaWRlckVuZFBvcyIsInB4Iiwicm91bmQiLCJfYiIsImlzQ2hhbmdlTmV3Q29sb3IiLCJwYWxpdHJhIiwiZ3JQYWxpdHJhIiwiY29ycmVjdEdyYWRpZW50IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibGVmdCIsInRvcCIsIndpZHRoIiwiaGVpZ2h0Iiwic2VwYXJhdGVfMSIsInJvbGxlckZpcnN0Iiwicm9sbGVyU2Vjb25kIiwiY3JlYXRlVG9vbHRpcCIsIm1vdmVSb2xsZXJzQXRWYWx1ZSIsInRvZ2dsZVJvbGxlcnMiLCJ1cGRhdGFDb2xvciIsImZpc3RUb29sdGlwIiwic2Vjb25kVG9vbHRpcCIsInVwZGF0YU91dFRvb2x0aXAiLCJpc1NldFByZWZpeCIsImlubmVySFRNTCIsInNldENvbG9yIiwibmV3Q29sb3IiLCJuZXdHcmFkaWVudCIsImJhY2tncm91bmRDb2xvciIsImNsYXNzTGlzdCIsImFkZCIsImJhY2tncm91bmQiLCJweFRvIiwiY29udmVydFZhbHVlVG9QeCIsInB4RnJvbSIsInBvc2l0aW9uVG8iLCJjb252ZXJ0UHhUb1Byb2NlbnQiLCJwb3NpdGlvbkZyb20iLCJib3R0b20iLCJkaXNwbGF5IiwiY3JlYXRlT3V0RWxlbWVudCIsInN0YXJ0VmFsdWUiLCJlbmRWYWx1ZSIsInNldFN0YXJ0RW5kVHJhY2tPdXQiLCJvdXRTdGFydCIsIm91dEVuZCIsImlzRnJvbXRvUHJlZml4IiwiYWRkU2NhbGVNYXJrZXIiLCJjaGVja1NjYWxlIiwidXBkYXRhU2NhbGVNYXJrZXIiLCJzY2FsZU1hcmtlciIsImRvY3VtZW50RWxlbWVudCIsInNldFByb3BlcnR5IiwiaW5jIiwiZ2V0SW5jcmVtZW50IiwicHhJbmMiLCJmcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJweEN1cnJlbnQiLCJjdXJyZW50IiwiY3JlYXRlU2NhbGVNYXJrZXIiLCJ0b0ZpeGVkIiwiZGl2aXNpb25WYWx1ZSIsImRpdmlzaW9uIiwib2Zmc2V0IiwiY29udmVydFB4VG9QZXJjZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwiSFRNTEVsZW1lbnQiLCJpc1NjYWxlRGl2aXNvbiIsImlzU2NhbGVWYWx1ZSIsInNjYWxlRXZlbnQiLCJDdXN0b21FdmVudCIsImJ1YmJsZXMiLCJkaXNwYXRjaEV2ZW50IiwidXBkYXRhQmFyIiwiaXNTZXRDb2xvciIsImdldFJvbGxlclBvc2l0aW9ucyIsImNhbGN1bGF0ZVBvc2l0aW9uIiwic29ydCIsImEiLCJiIiwic2lkZSIsInBhcnNlSW50IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImlzSG9yaXpvbnRhbCIsImRpcmVjdGlvbiIsInJvbGxlclBvcyIsImlzU2luZ2xlIiwiZ2V0TmV3U2xpZGVyUG9zIiwib3JhbmdlIiwicHVycGxlIiwiYXBpIiwiY29udGVudCIsImRlZmF1bHQiLCJsb2NhbHMiLCJEZW1vXzEiLCIkd3JhcCIsImNsaWNrIiwiZWFjaCIsIkRlbW8iLCJkZW1vVGVtcGxhdGVfMSIsImRlbW9Ub29scyIsImNyZWF0ZVRvb2xzIiwibmV3U2V0dGluZyIsImluaXRUb29scyIsImNyZWF0ZVNldHRpbmdzIiwiYWZ0ZXIiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJkZW1vVGVtcGxhdGUiLCJfdGhpcyIsImJ0blNjYWxlIiwiYnRuVmlldyIsImJ0blBvc3RmaXgiLCJidG5Db2xvciIsIm1lbnVTY2FsZSIsIm1lbnVWaWV3IiwibWVudVBvc3RmaXgiLCJtZW51Q29sb3IiLCJpc09yaWVudGF0aW9uIiwiY2hhbmdlU2NhbGUiLCJpbnB1dENvbG9yT3V0IiwibGFiZWwiLCJpc0RvdWJsZSIsImlucHV0RnJvbSIsImlucHV0VG8iLCJpbnB1dE1pbiIsImlucHV0TWF4IiwiaW5wdXRNYXJrZXIiLCJpbnB1dFN0ZXAiLCJpbnB1dFNlcGFyYXRlIiwiaW5wdXRDb2xvciIsImlucHV0SXNQb3N0Zml4IiwiaW5wdXRJc1ByZWZpeCIsImlucHV0U2NhbGVQb3N0Zml4IiwiaW5wdXRJc0NoYW5nZUNvbG9yIiwiaW5wdXRNaW5NYXgiLCJpbnB1dElzU2VwYXJhdGUiLCJpbnB1dEZyb21UbyIsImlucHV0RGl2aXNpb24iLCJpbnB1dElzVHJhY2tQb3N0Zml4IiwiaW5wdXRJc1Rvb2xQb3N0Zml4IiwiaW5wdXRUcmFja1Bvc3RmaXgiLCJpbnB1dElzQ29sb3IiLCJpbnB1dENoYW5nZUNvbG9yIiwiaW5wdXRHcmFkaWVudCIsImlucHV0R3JhZGllbnRPdXQiLCJpbnB1dEdyYWRpZW50RGVnIiwib25jbGljayIsInRvZ2dsZSIsIm9uY2hhbmdlIiwic2V0U3RhdGUiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ksT0FBTyxNQUd2QixHQUZBMUIsRUFBb0JrQixFQUFFTyxHQUN0QlgsT0FBT0Ms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VyxTQUNYLFVBQVcsbUJBQ1gsVUFBVyxhQUNYLFVBQVcsZUFDWCxVQUFXLGVBQ1gsVUFBVyxpQkFDWCxVQUFXLGtCQUNYLFVBQVcsb0JBQ1gsVUFBVyxrQkFDWCxVQUFXLGtCQUNYLFVBQVcsZUFDWCxVQUFXLFlBQ1gsVUFBVyxZQUNYLFVBQVcsV0FDWCxVQUFXLGNBQ1gsVUFBVyxPQUNYLFVBQVcsVUFDWCxVQUFXLFFBQ1gsVUFBVyxZQUNYLFVBQVcsU0FDWCxVQUFXLFlBQ1gsVUFBVyxTQUNYLFVBQVcsZ0JBQ1gsVUFBVyxZQUNYLFVBQVcsZ0JBQ1gsVUFBVyxnQkFDWCxVQUFXLGFBQ1gsVUFBVyxZQUNYLFVBQVcsT0FDWCxVQUFXLE9BQ1gsVUFBVyxPQUNYLFVBQVcsYUFDWCxVQUFXLFNBQ1gsVUFBVyxnQkFDWCxVQUFXLFVBQ1gsVUFBVyxZQUNYLFVBQVcsWUFDWCxVQUFXLGNBQ1gsVUFBVyxTQUNYLFVBQVcsYUFDWCxVQUFXLFdBQ1gsVUFBVyxXQUNYLFVBQVcsU0FDWCxVQUFXLFNBQ1gsVUFBVyxVQUNYLFVBQVcsWUFDWCxVQUFXLFlBQ1gsVUFBVyxPQUNYLFVBQVcsY0FDWCxVQUFXLFlBQ1gsVUFBVyxNQUNYLFVBQVcsT0FDWCxVQUFXLFVBQ1gsVUFBVyxTQUNYLFVBQVcsWUFDWCxVQUFXLFNBQ1gsVUFBVyxRQUNYLFVBQVcsUUFDWCxVQUFXLGFBQ1gsVUFBVyxTQUNYLFVBQVcsa0JBQ1gsVUFBVyxZQUNYLFVBQVcscUJBQ1gsVUFBVyxhQUNYLFVBQVcsWUFDWCxVQUFXLFVBQ1gsVUFBVyxnQkFDWCxVQUFXLGtCQUNYLFVBQVcsc0JBQ1gsVUFBVyxZQUNYLFVBQVcsaUJBQ1gsVUFBVyxlQUNYLFVBQVcsc0JBQ1gsVUFBVyxVQUNYLFVBQVcsZUFDWCxVQUFXLG9CQUNYLFVBQVcsWUFDWCxVQUFXLGdCQUNYLFVBQVcsZ0JBQ1gsVUFBVyxrQkFDWCxVQUFXLG9CQUNYLFVBQVcsU0FDWCxVQUFXLG1CQUNYLFVBQVcsbUJBQ1gsVUFBVyxTQUNYLFVBQVcsbUJBQ1gsVUFBVyxZQUNYLFVBQVcsY0FDWCxVQUFXLGlCQUNYLFVBQVcsYUFDWCxVQUFXLGdCQUNYLEtBQU0sT0FDTjhTLE9BQVEsWUFDUkMsT0FBUSxhQUNSLFVBQVcsY0FDWCxVQUFXLFlBQ1gsVUFBVyxVQUNYLFVBQVcsZ0JBQ1gsVUFBVyxVQUNYLFVBQVcsd0JBQ1gsVUFBVyxtQixnQkN4TGYsSUFBSUMsRUFBTSxFQUFRLEdBQ0ZDLEVBQVUsRUFBUSxJQUlDLGlCQUZ2QkEsRUFBVUEsRUFBUWhYLFdBQWFnWCxFQUFRQyxRQUFVRCxLQUcvQ0EsRUFBVSxDQUFDLENBQUNyWSxFQUFPQyxFQUFJb1ksRUFBUyxNQUc5QyxJQUFJdFYsRUFBVSxDQUVkLE9BQWlCLE9BQ2pCLFdBQW9CLEdBRVBxVixFQUFJQyxFQUFTdFYsR0FJMUIvQyxFQUFPRCxRQUFVc1ksRUFBUUUsUUFBVSxJLCtDQ2pCbkM1WCxPQUFPQyxlQUFlYixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sSUFDdEQsSUFBSXNYLEVBQVMsRUFBUSxJQUNyQixFQUFRLElBQ1IsRUFBUSxHQUNSLElBQUlDLEVBQVE1TixFQUFFLFlBQ2Q0TixFQUFNMU4sWUFBWSxDQUNkM0csU0FBUyxFQUNUVSxlQUFlLElBT25CMlQsRUFBTTFOLFlBQVksWUFBWSxTQUFVVSxHQUNwQ1osRUFBRSxtQkFBbUIzSCxJQUFJdUksRUFBTzNILE1BQ2hDK0csRUFBRSxpQkFBaUIzSCxJQUFJdUksRUFBTzFILE9BTWxDOEcsRUFBRSxrQkFBa0I2TixPQUFNLFdBQ3RCRCxFQUFNMU4sWUFBWSxTQUFVLENBQ3hCMUcsTUFBTyxNQUFPVyxTQUFVLE9BQVFwQixJQUFLLElBQU1FLEtBQU0sSUFBS0MsR0FBSSxJQUFLb0IsZUFBZSxFQUFNVixRQUFRLE9BSXBHLElBb0VJMUIsRUFBVSxDQXBFSyxDQUNmVSxZQUFhLFdBQ2JDLEtBQU0sU0FDTndCLFlBQVksRUFDWmQsU0FBUyxHQUVJLENBQ2JZLFNBQVUsTUFDVlgsTUFBTyxVQUNQVCxJQUFLLEtBQ0xFLEtBQU0sSUFDTkMsR0FBSSxJQUNKVSxRQUFRLEVBQ1J4QixTQUFVLElBQ1ZrQyxlQUFlLEdBRUEsQ0FDZjFCLFlBQWEsV0FDYnVCLFNBQVUsT0FDVlgsTUFBTyxTQUNQTCxRQUFTLEdBQ1RPLGFBQWMsR0FDZFosS0FBTSxJQUNOQyxLQUFNLElBQ05DLEtBQU0sRUFDTkMsTUFBTyxJQUNQQyxJQUFLLElBQ0xjLGFBQWEsRUFDYjVCLFNBQVUsSUFDVmtDLGVBQWUsR0FFRCxDQUNkSixZQUFZLEVBQ1pWLE1BQU8sUUFDUFQsSUFBSyxLQUNMRSxLQUFNLElBQ05DLEdBQUksSUFDSlUsUUFBUSxFQUNSeEIsU0FBVSxJQUNWZSxRQUFTLElBQ1RPLGFBQWMsSUFDZEksYUFBYyxJQUNkVixVQUFVLEVBQ1ZXLFNBQVMsRUFDVE8sZUFBZSxHQUVELENBQ2QxQixZQUFhLGFBQ2JDLEtBQU0sU0FDTlUsU0FBUyxFQUNURCxTQUFTLEVBQ1RFLE1BQU8sU0FFTSxDQUNiVyxTQUFVLFFBQ1ZYLE1BQU8sVUFDUFQsSUFBSyxPQUNMRSxLQUFNLE1BQ05DLEdBQUksT0FDSkYsS0FBTSxJQUNORixLQUFNLE1BQ05WLFNBQVUsSUFDVmUsUUFBUyxJQUNUTyxhQUFjLElBQ2RJLGFBQWMsSUFDZEMsU0FBUyxFQUNUTyxlQUFlLElBR0gwRixFQUFFLGNBQ1I4TixNQUFLLFNBQVV6UixFQUFPa0YsR0FDNUIsSUFBSW9NLEVBQU9JLEtBQUsvTixFQUFFdUIsR0FBU3JCLFlBQVloSSxFQUFRbUUsSUFBUTZELFlBQVksZSw2QkNuR3ZFLElBQUlSLEVBQVluSSxNQUFRQSxLQUFLbUksVUFBYSxXQVN0QyxPQVJBQSxFQUFXNUosT0FBTzZKLFFBQVUsU0FBU3JKLEdBQ2pDLElBQUssSUFBSWEsRUFBRy9CLEVBQUksRUFBR3lCLEVBQUkrSSxVQUFVakUsT0FBUXZHLEVBQUl5QixFQUFHekIsSUFFNUMsSUFBSyxJQUFJOEIsS0FEVEMsRUFBSXlJLFVBQVV4SyxHQUNPVSxPQUFPa0IsVUFBVUMsZUFBZTFCLEtBQUs0QixFQUFHRCxLQUN6RFosRUFBRVksR0FBS0MsRUFBRUQsSUFFakIsT0FBT1osSUFFS3VKLE1BQU10SSxLQUFNcUksWUFFaEM5SixPQUFPQyxlQUFlYixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sSUFDdERuQixFQUFRNlksVUFBTyxFQUNmLElBQUl0TCxFQUFlLEVBQVEsR0FDdkJ1TCxFQUFpQixFQUFRLElBQ3pCRCxFQUFzQixXQUN0QixTQUFTQSxFQUFLekssR0FDVi9MLEtBQUsrTCxPQUFTQSxFQUNkL0wsS0FBS3FLLE1BQVEwQixFQUFPdEIsYUFDcEJ6SyxLQUFLMFcsVUFBWTFXLEtBQUsyVyxjQUN0QjNXLEtBQUs4SSxPQWlTVCxPQS9SQTBOLEVBQUsvVyxVQUFVc0wsT0FBUyxTQUFVNkwsR0FDOUI1VyxLQUFLcUssTUFBUWxDLEVBQVNBLEVBQVMsR0FBSW5JLEtBQUtxSyxPQUFRdU0sR0FDaEQ1VyxLQUFLNlcsYUFFVEwsRUFBSy9XLFVBQVVxSixLQUFPLFdBQ2xCOUksS0FBSzhXLGlCQUNMOVcsS0FBSzZXLFlBQ0w3VyxLQUFLK0ssT0FBUy9LLEtBQUsrSyxPQUFPMUwsS0FBS1csTUFDL0JBLEtBQUsrTCxPQUFPckMsUUFBUXhKLFVBQVUsVUFBV0YsS0FBSytLLFNBRWxEeUwsRUFBSy9XLFVBQVVrWCxZQUFjLFdBQ3pCLElBQUlELEVBQVlyVCxTQUFTbUMsY0FBYyxPQUV2QyxPQURBa1IsRUFBVTVKLFVBQVksZUFDZjRKLEdBRVhGLEVBQUsvVyxVQUFVcVgsZUFBaUIsV0FDNUI5VyxLQUFLK0wsT0FBTy9CLFFBQVErTSxNQUFNL1csS0FBSzBXLFdBQy9CMVcsS0FBSzBXLFVBQVVNLG1CQUFtQixZQUFhUCxFQUFlUSxlQUVsRVQsRUFBSy9XLFVBQVVvWCxVQUFZLFdBQ3ZCLElBQUlLLEVBQVFsWCxLQUNSdVAsRUFBS3ZQLEtBQUtxSyxNQUFPaEosRUFBY2tPLEVBQUdsTyxZQUFhVyxFQUFVdU4sRUFBR3ZOLFFBQVNWLEVBQU9pTyxFQUFHak8sS0FBTVMsRUFBVXdOLEVBQUd4TixRQUFTTCxFQUFPNk4sRUFBRzdOLEtBQU1DLEVBQUs0TixFQUFHNU4sR0FBSUosRUFBTWdPLEVBQUdoTyxJQUFLQyxFQUFNK04sRUFBRy9OLElBQUtJLEVBQVUyTixFQUFHM04sUUFBU0gsRUFBTzhOLEVBQUc5TixLQUFNUSxFQUFRc04sRUFBR3ROLE1BQU9DLEVBQWlCcU4sRUFBR3JOLGVBQWdCQyxFQUFlb04sRUFBR3BOLGFBQWNDLEVBQVNtTixFQUFHbk4sT0FBUUMsRUFBU2tOLEVBQUdsTixPQUFRQyxFQUFpQmlOLEVBQUdqTixlQUFnQkMsRUFBZWdOLEVBQUdoTixhQUFjQyxFQUFVK00sRUFBRy9NLFFBQVNJLEVBQVcyTSxFQUFHM00sU0FBVUUsRUFBYXlNLEVBQUd6TSxXQUFZTCxFQUFjOE0sRUFBRzlNLFlBQWFFLEVBQWE0TSxFQUFHNU0sV0FBWUUsRUFBYzBNLEVBQUcxTSxZQUFhRSxFQUFnQndNLEVBQUd4TSxjQUFlakIsRUFBWXlOLEVBQUd6TixVQUFXWSxFQUFnQjZNLEVBQUc3TSxjQUFlN0IsRUFBVzBPLEVBQUcxTyxTQUFVRCxFQUFhMk8sRUFBRzNPLFdBQVlpQixFQUFXME4sRUFBRzFOLFNBQzdzQnNWLEVBQVduWCxLQUFLMFcsVUFBVS9TLGNBQWMsaUJBQ3hDeVQsRUFBVXBYLEtBQUswVyxVQUFVL1MsY0FBYyxnQkFDdkMwVCxFQUFhclgsS0FBSzBXLFVBQVUvUyxjQUFjLG1CQUMxQzJULEVBQVd0WCxLQUFLMFcsVUFBVS9TLGNBQWMsaUJBQ3hDNFQsRUFBWXZYLEtBQUswVyxVQUFVL1MsY0FBYyxrQkFDekM2VCxFQUFXeFgsS0FBSzBXLFVBQVUvUyxjQUFjLGlCQUN4QzhULEVBQWN6WCxLQUFLMFcsVUFBVS9TLGNBQWMsb0JBQzNDK1QsRUFBWTFYLEtBQUswVyxVQUFVL1MsY0FBYyxxQkFDekNnVSxFQUFnQjNYLEtBQUswVyxVQUFVL1MsY0FBYyxtQkFDN0NpVSxFQUFjNVgsS0FBSzBXLFVBQVUvUyxjQUFjLGVBQzNDa1UsRUFBZ0I3WCxLQUFLMFcsVUFBVS9TLGNBQWMsa0JBQzdDbVUsRUFBUTlYLEtBQUswVyxVQUFVL1MsY0FBYyxlQUNyQ29VLEVBQVcvWCxLQUFLMFcsVUFBVS9TLGNBQWMsZ0JBQ3hDcVUsRUFBWWhZLEtBQUswVyxVQUFVL1MsY0FBYyxZQUN6Q3NVLEVBQVVqWSxLQUFLMFcsVUFBVS9TLGNBQWMsVUFDdkN1VSxFQUFXbFksS0FBSzBXLFVBQVUvUyxjQUFjLFdBQ3hDd1UsRUFBV25ZLEtBQUswVyxVQUFVL1MsY0FBYyxXQUN4Q3lVLEVBQWNwWSxLQUFLMFcsVUFBVS9TLGNBQWMsY0FDM0MwVSxFQUFZclksS0FBSzBXLFVBQVUvUyxjQUFjLFlBQ3pDMlUsRUFBZ0J0WSxLQUFLMFcsVUFBVS9TLGNBQWMsZ0JBQzdDNFUsRUFBYXZZLEtBQUswVyxVQUFVL1MsY0FBYyxhQUMxQzZVLEVBQWlCeFksS0FBSzBXLFVBQVUvUyxjQUFjLGlCQUM5QzhVLEdBQWdCelksS0FBSzBXLFVBQVUvUyxjQUFjLG9CQUM3QytVLEdBQW9CMVksS0FBSzBXLFVBQVUvUyxjQUFjLHFCQUNqRGdWLEdBQXFCM1ksS0FBSzBXLFVBQVUvUyxjQUFjLHFCQUNsRGlWLEdBQWM1WSxLQUFLMFcsVUFBVS9TLGNBQWMsY0FDM0NrVixHQUFrQjdZLEtBQUswVyxVQUFVL1MsY0FBYyxrQkFDL0NtVixHQUFjOVksS0FBSzBXLFVBQVUvUyxjQUFjLGNBQzNDb1YsR0FBZ0IvWSxLQUFLMFcsVUFBVS9TLGNBQWMsZ0JBQzdDcVYsR0FBc0JoWixLQUFLMFcsVUFBVS9TLGNBQWMsc0JBQ25Ec1YsR0FBcUJqWixLQUFLMFcsVUFBVS9TLGNBQWMscUJBQ2xEdVYsR0FBb0JsWixLQUFLMFcsVUFBVS9TLGNBQWMscUJBQ2pEd1YsR0FBZW5aLEtBQUswVyxVQUFVL1MsY0FBYyxlQUM1Q3lWLEdBQW1CcFosS0FBSzBXLFVBQVUvUyxjQUFjLG1CQUNoRDBWLEdBQWdCclosS0FBSzBXLFVBQVUvUyxjQUFjLGdCQUM3QzJWLEdBQW1CdFosS0FBSzBXLFVBQVUvUyxjQUFjLG9CQUNoRDRWLEdBQW1CdlosS0FBSzBXLFVBQVUvUyxjQUFjLG9CQUNwRHlULEVBQVFvQyxRQUFVLFdBQ2RoQyxFQUFTdEYsVUFBVXVILE9BQU8saUJBRTlCdEMsRUFBU3FDLFFBQVUsV0FDZmpDLEVBQVVyRixVQUFVdUgsT0FBTyxpQkFFL0JuQyxFQUFTa0MsUUFBVSxXQUNmOUIsRUFBVXhGLFVBQVV1SCxPQUFPLGlCQUUvQnBDLEVBQVdtQyxRQUFVLFdBQ2pCL0IsRUFBWXZGLFVBQVV1SCxPQUFPLGlCQUdqQzlCLEVBQWMrQixTQUFXLFdBQ2pCclksSUFBZ0I2SixFQUFhckwsWUFBWSxJQUN6Q3FYLEVBQU15QyxTQUFTLENBQUV0WSxZQUFhLGFBRTlCQSxJQUFnQjZKLEVBQWFyTCxZQUFZLElBQ3pDcVgsRUFBTXlDLFNBQVMsQ0FBRXRZLFlBQWEsZ0JBR3RDbVgsRUFBZWtCLFNBQVcsWUFDQyxJQUFuQnhYLEdBQ0FnVixFQUFNeUMsU0FBUyxDQUFFelgsZ0JBQWdCLEtBRWQsSUFBbkJBLEdBQ0FnVixFQUFNeUMsU0FBUyxDQUFFelgsZ0JBQWdCLEtBR3pDK1csR0FBbUJTLFNBQVcsWUFDUixJQUFkNVgsR0FDQW9WLEVBQU15QyxTQUFTLENBQUU3WCxXQUFXLEtBRWQsSUFBZEEsR0FDQW9WLEVBQU15QyxTQUFTLENBQUU3WCxXQUFXLEtBR3BDMlcsR0FBY2lCLFNBQVcsWUFDSixJQUFiN1gsR0FDQXFWLEVBQU15QyxTQUFTLENBQUU5WCxVQUFVLEtBRWQsSUFBYkEsR0FDQXFWLEVBQU15QyxTQUFTLENBQUU5WCxVQUFVLEtBR25Dd1gsR0FBY0ssU0FBVyxZQUNGLElBQWYvVyxHQUNBdVUsRUFBTXlDLFNBQVMsQ0FBRWhYLFlBQVksS0FFZCxJQUFmQSxHQUNBdVUsRUFBTXlDLFNBQVMsQ0FBRWhYLFlBQVksS0FHckNnVyxHQUFtQmUsU0FBVyxZQUNKLElBQWxCaFgsR0FDQXdVLEVBQU15QyxTQUFTLENBQUVqWCxlQUFlLEtBRWQsSUFBbEJBLEdBQ0F3VSxFQUFNeUMsU0FBUyxDQUFFalgsZUFBZSxLQUd4Q21XLEdBQWdCYSxTQUFXLFlBQ0osSUFBZjlZLEdBQ0FzVyxFQUFNeUMsU0FBUyxDQUFFL1ksWUFBWSxLQUVkLElBQWZBLEdBQ0FzVyxFQUFNeUMsU0FBUyxDQUFFL1ksWUFBWSxLQUdyQ2lYLEVBQWM2QixTQUFXLFlBQ0YsSUFBZjVXLEdBQ0FvVSxFQUFNeUMsU0FBUyxDQUFFN1csWUFBWSxLQUVkLElBQWZBLEdBQ0FvVSxFQUFNeUMsU0FBUyxDQUFFN1csWUFBWSxLQUdyQzhVLEVBQVk4QixTQUFXLFlBQ0gsSUFBWjFYLEVBQ0FrVixFQUFNeUMsU0FBUyxDQUFFM1gsU0FBUyxJQUcxQmtWLEVBQU15QyxTQUFTLENBQUUzWCxTQUFTLEtBR2xDOFYsRUFBTTRCLFNBQVcsWUFDRyxJQUFaM1gsR0FDQW1WLEVBQU15QyxTQUFTLENBQUU1WCxTQUFTLEtBRWQsSUFBWkEsR0FDQW1WLEVBQU15QyxTQUFTLENBQUU1WCxTQUFTLEtBR2xDZ1csRUFBUzJCLFNBQVcsV0FDWnBZLElBQVM0SixFQUFhcEwsV0FBVyxHQUNqQ29YLEVBQU15QyxTQUFTLENBQUVyWSxLQUFNLFdBR3ZCNFYsRUFBTXlDLFNBQVMsQ0FBRXJZLEtBQU0sWUFHL0JzWCxHQUFZYyxTQUFXLFlBQ0osSUFBWHRYLEVBQ0E4VSxFQUFNeUMsU0FBUyxDQUFFdlgsUUFBUSxJQUd6QjhVLEVBQU15QyxTQUFTLENBQUV2WCxRQUFRLEtBR2pDMFcsR0FBWVksU0FBVyxZQUNKLElBQVhyWCxFQUNBNlUsRUFBTXlDLFNBQVMsQ0FBRXRYLFFBQVEsSUFHekI2VSxFQUFNeUMsU0FBUyxDQUFFdFgsUUFBUSxLQUdqQzBXLEdBQWNXLFNBQVcsWUFDQyxJQUFsQjNXLEVBQ0FtVSxFQUFNeUMsU0FBUyxDQUFFNVcsZUFBZSxJQUdoQ21VLEVBQU15QyxTQUFTLENBQUU1VyxlQUFlLEtBR3hDaVcsR0FBb0JVLFNBQVcsWUFDSixJQUFuQnBYLEVBQ0E0VSxFQUFNeUMsU0FBUyxDQUFFclgsZ0JBQWdCLElBR2pDNFUsRUFBTXlDLFNBQVMsQ0FBRXJYLGdCQUFnQixLQUd6QzZXLEdBQWFPLFNBQVcsWUFDSixJQUFabFgsRUFDQTBVLEVBQU15QyxTQUFTLENBQUVuWCxTQUFTLElBRzFCMFUsRUFBTXlDLFNBQVMsQ0FBRW5YLFNBQVMsS0FHbEM0VyxHQUFpQk0sU0FBVyxZQUNKLElBQWhCalgsRUFDQXlVLEVBQU15QyxTQUFTLENBQUVsWCxhQUFhLElBRzlCeVUsRUFBTXlDLFNBQVMsQ0FBRWxYLGFBQWEsS0FJdEMyVixFQUFZdFosTUFBUThDLEVBQ3BCd1csRUFBWXNCLFNBQVcsV0FDbkIsSUFBSTVhLEVBQVFzWixFQUFZdFosTUFDeEJvWSxFQUFNeUMsU0FBUyxDQUFFL1gsUUFBUzlDLEtBRTlCa1osRUFBVWxaLE1BQVFzUSxPQUFPMU4sR0FDekJzVyxFQUFVMEIsU0FBVyxXQUNqQixJQUFJNWEsRUFBUXVRLE9BQU8ySSxFQUFVbFosT0FDN0JvWSxFQUFNeUMsU0FBUyxDQUFFalksS0FBTTVDLEtBRTNCbVosRUFBUW5aLE1BQVFzUSxPQUFPek4sR0FDdkJzVyxFQUFReUIsU0FBVyxXQUNmLElBQUk1YSxFQUFRdVEsT0FBTzRJLEVBQVFuWixPQUMzQm9ZLEVBQU15QyxTQUFTLENBQUVoWSxHQUFJN0MsS0FFekJvWixFQUFTcFosTUFBUXNRLE9BQU83TixHQUN4QjJXLEVBQVN3QixTQUFXLFdBQ2hCLElBQUk1YSxFQUFRdVEsT0FBTzZJLEVBQVNwWixPQUM1Qm9ZLEVBQU15QyxTQUFTLENBQUVwWSxJQUFLekMsS0FFMUJxWixFQUFTclosTUFBUXNRLE9BQU81TixHQUN4QjJXLEVBQVN1QixTQUFXLFdBQ2hCLElBQUk1YSxFQUFRdVEsT0FBTzhJLEVBQVNyWixPQUM1Qm9ZLEVBQU15QyxTQUFTLENBQUVuWSxJQUFLMUMsS0FFMUJ1WixFQUFVdlosTUFBUXNRLE9BQU8zTixHQUN6QjRXLEVBQVVxQixTQUFXLFdBQ2pCLElBQUk1YSxFQUFRdVEsT0FBT2dKLEVBQVV2WixPQUM3Qm9ZLEVBQU15QyxTQUFTLENBQUVsWSxLQUFNM0MsS0FFM0J5WixFQUFXelosTUFBUXNRLE9BQU9uTixHQUMxQnNXLEVBQVdtQixTQUFXLFdBQ2xCLElBQUk1YSxFQUFReVosRUFBV3paLE1BQ3ZCb1ksRUFBTXlDLFNBQVMsQ0FBRTFYLE1BQU9uRCxLQUU1QndhLEdBQWlCeGEsTUFBUXNRLE9BQU94TSxHQUNoQzBXLEdBQWlCSSxTQUFXLFdBQ3hCLElBQUk1YSxFQUFRd2EsR0FBaUJ4YSxNQUM3Qm9ZLEVBQU15QyxTQUFTLENBQUUvVyxTQUFVOUQsS0FFL0J5YSxHQUFpQnphLE1BQVFzUSxPQUFPdk0sR0FDaEMwVyxHQUFpQkcsU0FBVyxXQUN4QixJQUFJNWEsRUFBUXVRLE9BQU9rSyxHQUFpQnphLE9BQ3BDb1ksRUFBTXlDLFNBQVMsQ0FBRTlXLFlBQWEvRCxLQUVsQzRaLEdBQWtCNVosTUFBUXFELEVBQzFCdVcsR0FBa0JnQixTQUFXLFdBQ3pCLElBQUk1YSxFQUFRNFosR0FBa0I1WixNQUM5Qm9ZLEVBQU15QyxTQUFTLENBQUV4WCxhQUFjckQsS0FFbkNvYSxHQUFrQnBhLE1BQVF5RCxFQUMxQjJXLEdBQWtCUSxTQUFXLFdBQ3pCLElBQUk1YSxFQUFRb2EsR0FBa0JwYSxNQUM5Qm9ZLEVBQU15QyxTQUFTLENBQUVwWCxhQUFjekQsS0FJL0J3WixFQUFjeFosV0FERG9DLElBQWJMLEdBR2tCLE1BQWJBLEVBRmlCLElBTUFBLEVBRTFCeVgsRUFBY29CLFNBQVcsV0FDckIsSUFBSTVhLEVBQVF3WixFQUFjeFosTUFDWixNQUFWQSxHQUEyQixNQUFWQSxJQUNqQkEsRUFBUSxLQUVab1ksRUFBTXlDLFNBQVMsQ0FBRTlZLFNBQVUvQixNQUduQzBYLEVBQUsvVyxVQUFVa2EsU0FBVyxTQUFVMVEsR0FDaENqSixLQUFLcUssTUFBUWxDLEVBQVNBLEVBQVMsR0FBSW5JLEtBQUtxSyxPQUFRcEIsR0FDaERqSixLQUFLK0wsT0FBT3pDLFdBQVd0SixLQUFLcUssT0FDNUJySyxLQUFLK0wsT0FBT3hDLGNBRVRpTixFQXRTYyxHQXdTekI3WSxFQUFRNlksS0FBT0EsRyw2QkN2VGZqWSxPQUFPQyxlQUFlYixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sSUFDdERuQixFQUFRc1osa0JBQWUsRUFFdkJ0WixFQUFRc1osYUFEVyxpZ00sZ0JDSG5CLElBQUlqQixFQUFNLEVBQVEsR0FDRkMsRUFBVSxFQUFRLElBSUMsaUJBRnZCQSxFQUFVQSxFQUFRaFgsV0FBYWdYLEVBQVFDLFFBQVVELEtBRy9DQSxFQUFVLENBQUMsQ0FBQ3JZLEVBQU9DLEVBQUlvWSxFQUFTLE1BRzlDLElBQUl0VixFQUFVLENBRWQsT0FBaUIsT0FDakIsV0FBb0IsR0FFUHFWLEVBQUlDLEVBQVN0VixHQUkxQi9DLEVBQU9ELFFBQVVzWSxFQUFRRSxRQUFVLEkiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTYpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNsaWRlclR5cGUgPSBleHBvcnRzLk9yaWVudGF0aW9uID0gdm9pZCAwO1xudmFyIE9yaWVudGF0aW9uO1xuKGZ1bmN0aW9uIChPcmllbnRhdGlvbikge1xuICAgIE9yaWVudGF0aW9uW09yaWVudGF0aW9uW1widmVydGljYWxcIl0gPSAwXSA9IFwidmVydGljYWxcIjtcbiAgICBPcmllbnRhdGlvbltPcmllbnRhdGlvbltcImhvcml6b250YWxcIl0gPSAxXSA9IFwiaG9yaXpvbnRhbFwiO1xufSkoT3JpZW50YXRpb24gfHwgKE9yaWVudGF0aW9uID0ge30pKTtcbmV4cG9ydHMuT3JpZW50YXRpb24gPSBPcmllbnRhdGlvbjtcbnZhciBTbGlkZXJUeXBlO1xuKGZ1bmN0aW9uIChTbGlkZXJUeXBlKSB7XG4gICAgU2xpZGVyVHlwZVtTbGlkZXJUeXBlW1wiZG91YmxlXCJdID0gMF0gPSBcImRvdWJsZVwiO1xuICAgIFNsaWRlclR5cGVbU2xpZGVyVHlwZVtcInNpbmdsZVwiXSA9IDFdID0gXCJzaW5nbGVcIjtcbn0pKFNsaWRlclR5cGUgfHwgKFNsaWRlclR5cGUgPSB7fSkpO1xuZXhwb3J0cy5TbGlkZXJUeXBlID0gU2xpZGVyVHlwZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSB2b2lkIDA7XG52YXIgRXZlbnRFbWl0dGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgICAgICAgdGhpcy5ldmVudHMgPSB7fTtcbiAgICB9XG4gICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBjYWxsYmFjaykge1xuICAgICAgICAhdGhpcy5ldmVudHNbZXZlbnROYW1lXSAmJiAodGhpcy5ldmVudHNbZXZlbnROYW1lXSA9IFtdKTtcbiAgICAgICAgdGhpcy5ldmVudHNbZXZlbnROYW1lXS5wdXNoKGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIChldmVudE5hbWUsIG5ld0RhdGEpIHtcbiAgICAgICAgdmFyIGV2ZW50ID0gdGhpcy5ldmVudHNbZXZlbnROYW1lXTtcbiAgICAgICAgZXZlbnQgJiYgZXZlbnQuZm9yRWFjaChmdW5jdGlvbiAoY2FsbGJhY2spIHsgcmV0dXJuIGNhbGxiYWNrLmNhbGwobnVsbCwgbmV3RGF0YSk7IH0pO1xuICAgIH07XG4gICAgcmV0dXJuIEV2ZW50RW1pdHRlcjtcbn0oKSk7XG5leHBvcnRzLkV2ZW50RW1pdHRlciA9IEV2ZW50RW1pdHRlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb3JyZWN0U2VwYXJhdGUgPSB2b2lkIDA7XG5mdW5jdGlvbiBjb3JyZWN0U2VwYXJhdGUodmFsdWUsIG9wdGlvbnMpIHtcbiAgICB2YXIgaXNTZXBhcmF0ZSA9IG9wdGlvbnMuaXNTZXBhcmF0ZTtcbiAgICB2YXIgc2VwYXJhdGUgPSBvcHRpb25zLnNlcGFyYXRlO1xuICAgIHZhciB2YWwgPSAnJztcbiAgICBpZiAoaXNTZXBhcmF0ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgdmFsID0gdmFsdWUudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHZhciBzZXBhcmF0ZUVuID0gc2VwYXJhdGUgPT09ICcsJztcbiAgICAgICAgdmFyIHNlcGFyYXRlRGUgPSBzZXBhcmF0ZSA9PT0gJy4nO1xuICAgICAgICB2YXIgc2VwYXJhdGVEZWZhdWx0ID0gc2VwYXJhdGUgPT09ICcgJztcbiAgICAgICAgaWYgKHNlcGFyYXRlRW4pIHtcbiAgICAgICAgICAgIHNlcGFyYXRlID0gJ2VuLVVTJztcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VwYXJhdGVEZSkge1xuICAgICAgICAgICAgc2VwYXJhdGUgPSAnZGUtREUnO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZXBhcmF0ZURlZmF1bHQpIHtcbiAgICAgICAgICAgIHNlcGFyYXRlID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHZhbCA9IHZhbHVlLnRvTG9jYWxlU3RyaW5nKHNlcGFyYXRlKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbDtcbn1cbmV4cG9ydHMuY29ycmVjdFNlcGFyYXRlID0gY29ycmVjdFNlcGFyYXRlO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnN0YW5kYXJkT3B0aW9ucyA9IHZvaWQgMDtcbnZhciBjb2xvcl8xID0gcmVxdWlyZShcIi4vY29sb3JcIik7XG52YXIgc3RhbmRhcmRPcHRpb25zID0ge1xuICAgIG9yaWVudGF0aW9uOiAnaG9yaXpvbnRhbCcsXG4gICAgdHlwZTogJ2RvdWJsZScsXG4gICAgbWluOiAwLFxuICAgIG1heDogMTAsXG4gICAgc3RlcDogMSxcbiAgICBmcm9tOiAzLFxuICAgIHRvOiA3LFxuICAgIHBvc3RmaXg6ICfigr0nLFxuICAgIGlzUHJlZml4OiBmYWxzZSxcbiAgICBpc1Bvc3RmaXg6IHRydWUsXG4gICAgaXNMYWJlbDogdHJ1ZSxcbiAgICBpc1NjYWxlOiB0cnVlLFxuICAgIGlzU2VwYXJhdGU6IHRydWUsXG4gICAgY29sb3I6ICdvcmFuZ2UnLFxuICAgIGlzU2NhbGVQb3N0Zml4OiB0cnVlLFxuICAgIHNjYWxlUG9zdGZpeDogJ+KCvScsXG4gICAgbWluTWF4OiBmYWxzZSxcbiAgICBmcm9tVG86IGZhbHNlLFxuICAgIGlzVHJhY2tQb3N0Zml4OiB0cnVlLFxuICAgIHRyYWNrUG9zdGZpeDogJ+KCvScsXG4gICAgaXNDb2xvcjogdHJ1ZSxcbiAgICBjaGFuZ2VDb2xvcjogdHJ1ZSxcbiAgICBpc0NoYW5nZUNvbG9yOiB0cnVlLFxuICAgIGlzR3JhZGllbnQ6IHRydWUsXG4gICAgZ3JhZGllbnQ6ICdwdXJwbGUnLFxuICAgIGdyYWRpZW50RGVnOiA0NSxcbiAgICBpc0NvbG9yT3V0OiBmYWxzZSxcbiAgICBvbmx5RGl2aXNpb25zOiBmYWxzZSxcbiAgICBzZXBhcmF0ZTogJyAnLFxuICAgIGFsbENvbG9yczogY29sb3JfMS5hbGxDb2xvcnMsXG59O1xuZXhwb3J0cy5zdGFuZGFyZE9wdGlvbnMgPSBzdGFuZGFyZE9wdGlvbnM7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBQcmVzZW50ZXJfMSA9IHJlcXVpcmUoXCIuL1ByZXNlbnRlci9QcmVzZW50ZXJcIik7XG52YXIgc3RhbmRhcmRPcHRpb25zXzEgPSByZXF1aXJlKFwiLi9pbnRlcmZhY2VzL3N0YW5kYXJkT3B0aW9uc1wiKTtcbnJlcXVpcmUoXCIuL3NsaWRlci5zY3NzXCIpO1xuKGZ1bmN0aW9uIGluaXRQbHVnaW4oJCkge1xuICAgICQuZm4uY29sb3JTbGlkZXIgPSBmdW5jdGlvbiBpbml0KG1ldGhvZCkge1xuICAgICAgICB2YXIgbWV0aG9kcyA9IHtcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgkc2xpZGVyLCBuZXdQYXJhbSkge1xuICAgICAgICAgICAgICAgIHZhciBuZXdPcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YW5kYXJkT3B0aW9uc18xLnN0YW5kYXJkT3B0aW9ucyksIG5ld1BhcmFtKTtcbiAgICAgICAgICAgICAgICAkc2xpZGVyLmRhdGEoJ3ByZXNlbnRlcicsIG5ldyBQcmVzZW50ZXJfMS5QcmVzZW50ZXIobmV3T3B0aW9ucywgJHNsaWRlcikpO1xuICAgICAgICAgICAgICAgIHJldHVybiAkc2xpZGVyO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24gKCRzbGlkZXIsIHZhbHVlcykge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS5zZXRPcHRpb25zKHZhbHVlcyk7XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS51cERhdGFWaWV3KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0VmFsdWU6IGZ1bmN0aW9uICgkc2xpZGVyLCBmdW5jKSB7XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS5lbWl0dGVyLnN1YnNjcmliZSgnbmV3RGF0YScsIGZ1bmMpO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZnVuYyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICRzbGlkZXIuZGF0YSgncHJlc2VudGVyJykuZW1pdHRlci5zdWJzY3JpYmUoJ25ld0RhdGEnLCBmdW5jKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICAgIHZhciBpc01ldGhvZCA9IHR5cGVvZiBtZXRob2QgPT09ICdvYmplY3QnIHx8ICFtZXRob2Q7XG4gICAgICAgIGlmICh0eXBlb2YgbWV0aG9kID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgaWYgKG1ldGhvZCA9PT0gJ2NoYW5nZScpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWV0aG9kc1ttZXRob2RdLmNhbGwodGhpcywgdGhpcywgYXJndW1lbnRzWzFdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIG1ldGhvZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGlmIChtZXRob2QgPT09ICdnZXRWYWx1ZScpIHtcbiAgICAgICAgICAgICAgICBtZXRob2RzW21ldGhvZF0uY2FsbCh0aGlzLCB0aGlzLCBhcmd1bWVudHNbMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpc01ldGhvZCkge1xuICAgICAgICAgICAgcmV0dXJuIG1ldGhvZHMuaW5pdCh0aGlzLCBtZXRob2QpO1xuICAgICAgICB9XG4gICAgfTtcbn0oalF1ZXJ5KSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByZXNlbnRlciA9IHZvaWQgMDtcbnZhciBNb2RlbF8xID0gcmVxdWlyZShcIi4uL01vZGVsL01vZGVsXCIpO1xudmFyIFZpZXdfMSA9IHJlcXVpcmUoXCIuLi9WaWV3L1ZpZXdcIik7XG52YXIgRXZlbnRFbWl0dGVyXzEgPSByZXF1aXJlKFwiLi4vRXZlbnRFbWl0dGVyL0V2ZW50RW1pdHRlclwiKTtcbnZhciBzdGFuZGFyZE9wdGlvbnNfMSA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzL3N0YW5kYXJkT3B0aW9uc1wiKTtcbnZhciBQcmVzZW50ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUHJlc2VudGVyKG9wdGlvbnMsIGVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy5lbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcl8xLkV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLm1vZGVsID0gdGhpcy5jcmVhdGVNb2RlbChvcHRpb25zKTtcbiAgICAgICAgdGhpcy52aWV3ID0gdGhpcy5jcmVhdGVWaWV3KHRoaXMubW9kZWwuc3RhdGUsIGVsZW1lbnQpO1xuICAgICAgICB0aGlzLmJpbmRTdWJzY3JpYmUoKTtcbiAgICB9XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS51cERhdGFWaWV3ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnZpZXcudXBEYXRhU2xpZGVyKCk7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLnNldE9wdGlvbnMgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgbmV3T3B0aW9ucyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBzdGFuZGFyZE9wdGlvbnNfMS5zdGFuZGFyZE9wdGlvbnMpLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5tb2RlbC5zZXREYXRhKG5ld09wdGlvbnMpO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5nZXRPcHRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tb2RlbC5zdGF0ZTtcbiAgICB9O1xuICAgIFByZXNlbnRlci5wcm90b3R5cGUuY3JlYXRlTW9kZWwgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IE1vZGVsXzEuTW9kZWwob3B0aW9ucyk7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLmNyZWF0ZVZpZXcgPSBmdW5jdGlvbiAob3B0aW9ucywgZWxlbWVudCkge1xuICAgICAgICByZXR1cm4gbmV3IFZpZXdfMS5WaWV3KG9wdGlvbnMsIGVsZW1lbnQpO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5iaW5kU3Vic2NyaWJlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmdldE5ld0RhdGEgPSB0aGlzLmdldE5ld0RhdGEuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5zZW5kTmV3UG9zaXRpb24gPSB0aGlzLnNlbmROZXdQb3NpdGlvbi5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmFkZFN1YnNjcmlidGlvbnMoKTtcbiAgICB9O1xuICAgIFByZXNlbnRlci5wcm90b3R5cGUuYWRkU3Vic2NyaWJ0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5tb2RlbC5lbWl0dGVyLnN1YnNjcmliZSgnbmV3RGF0YScsIHRoaXMuZ2V0TmV3RGF0YSk7XG4gICAgICAgIHRoaXMudmlldy5lbWl0dGVyLnN1YnNjcmliZSgnbmV3UG9zaXRpb24nLCB0aGlzLnNlbmROZXdQb3NpdGlvbik7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLmdldE5ld0RhdGEgPSBmdW5jdGlvbiAobmV3RGF0YSkge1xuICAgICAgICB0aGlzLnZpZXcudXBEYXRhKG5ld0RhdGEpO1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnbmV3RGF0YScsIG5ld0RhdGEpO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5zZW5kTmV3UG9zaXRpb24gPSBmdW5jdGlvbiAobmV3UG9zaXRpb24pIHtcbiAgICAgICAgdmFyIG1vZGVsU3RhdGUgPSB0aGlzLm1vZGVsLnN0YXRlO1xuICAgICAgICB2YXIgbmV3RGF0YSA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBtb2RlbFN0YXRlKSwgbmV3UG9zaXRpb24pO1xuICAgICAgICB0aGlzLm1vZGVsLnNldERhdGEobmV3RGF0YSk7XG4gICAgfTtcbiAgICByZXR1cm4gUHJlc2VudGVyO1xufSgpKTtcbmV4cG9ydHMuUHJlc2VudGVyID0gUHJlc2VudGVyO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Nb2RlbCA9IHZvaWQgMDtcbnZhciBpbnRlcmZhY2VzXzEgPSByZXF1aXJlKFwiLi4vaW50ZXJmYWNlcy9pbnRlcmZhY2VzXCIpO1xudmFyIEV2ZW50RW1pdHRlcl8xID0gcmVxdWlyZShcIi4uL0V2ZW50RW1pdHRlci9FdmVudEVtaXR0ZXJcIik7XG52YXIgTW9kZWwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTW9kZWwoT3B0aW9ucykge1xuICAgICAgICB0aGlzLmVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyXzEuRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB0aGlzLmluaXQoT3B0aW9ucyk7XG4gICAgfVxuICAgIE1vZGVsLnByb3RvdHlwZS5zZXREYXRhID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHZhbGlkYXRlRnJvbVRvID0gdGhpcy52YWxpZGF0ZUZyb21UbyhPcHRpb25zKTtcbiAgICAgICAgdmFyIHZhbGlkYXRlTWluTWF4U3RlcCA9IHRoaXMudmFsaWRhdGVNaW5NYXhTdGVwKE9wdGlvbnMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oe30sIE9wdGlvbnMpLCB2YWxpZGF0ZUZyb21UbyksIHZhbGlkYXRlTWluTWF4U3RlcCk7XG4gICAgICAgIHRoaXMuZW1pdHRlci5lbWl0KCduZXdEYXRhJywgdGhpcy5zdGF0ZSk7XG4gICAgfTtcbiAgICBNb2RlbC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uIChPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YShPcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGU7XG4gICAgfTtcbiAgICBNb2RlbC5wcm90b3R5cGUudmFsaWRhdGVNaW5NYXhTdGVwID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG1pbiA9IE9wdGlvbnMubWluLCBtYXggPSBPcHRpb25zLm1heCwgc3RlcCA9IE9wdGlvbnMuc3RlcDtcbiAgICAgICAgaWYgKHN0ZXAgPD0gMClcbiAgICAgICAgICAgIE9wdGlvbnMuc3RlcCA9IDAuMTtcbiAgICAgICAgdmFyIGlzTWF4TWluID0gbWF4IDw9IG1pbiAmJiBtYXggPCAwO1xuICAgICAgICB2YXIgaXNNaW5NYXggPSAobWluID49IG1heCAmJiBtYXggPiAwKSB8fCAobWF4IDwgMCAmJiBtYXggPCBtaW4pO1xuICAgICAgICBpZiAoaXNNYXhNaW4pIHtcbiAgICAgICAgICAgIE9wdGlvbnMubWluID0gbWluIC0gc3RlcDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNNaW5NYXgpIHtcbiAgICAgICAgICAgIE9wdGlvbnMubWluID0gbWluO1xuICAgICAgICAgICAgT3B0aW9ucy5tYXggPSBtaW4gKyBzdGVwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPcHRpb25zO1xuICAgIH07XG4gICAgTW9kZWwucHJvdG90eXBlLnZhbGlkYXRlRnJvbVRvID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGZyb20gPSBPcHRpb25zLmZyb20sIHRvID0gT3B0aW9ucy50bywgbWF4ID0gT3B0aW9ucy5tYXgsIG1pbiA9IE9wdGlvbnMubWluLCB0eXBlID0gT3B0aW9ucy50eXBlLCBzdGVwID0gT3B0aW9ucy5zdGVwO1xuICAgICAgICBpZiAodHlwZSA9PT0gaW50ZXJmYWNlc18xLlNsaWRlclR5cGVbMV0pIHtcbiAgICAgICAgICAgIE9wdGlvbnMudG8gPSBtYXg7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1heE1pblplcm8gPSBtYXggPCAwICYmIG1pbiA9PT0gMDtcbiAgICAgICAgdmFyIGlzTWluTWF4WmVybyA9IG1pbiA8IDAgJiYgbWF4IDwgMDtcbiAgICAgICAgdmFyIGlzU2luZ2xlRnJvbSA9IHR5cGUgPT09IGludGVyZmFjZXNfMS5TbGlkZXJUeXBlWzBdICYmIGZyb20gPj0gdG87XG4gICAgICAgIHZhciBpc0NvcnJlY3RGcm9tID0gZnJvbSA+IDAgJiYgaXNNaW5NYXhaZXJvO1xuICAgICAgICBpZiAoZnJvbSA+IG1heClcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1heCAtIHN0ZXA7XG4gICAgICAgIGlmIChmcm9tIDwgbWluKVxuICAgICAgICAgICAgT3B0aW9ucy5mcm9tID0gbWluO1xuICAgICAgICBpZiAodG8gPiBtYXgpXG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWF4O1xuICAgICAgICBpZiAobWF4TWluWmVybykge1xuICAgICAgICAgICAgT3B0aW9ucy5mcm9tID0gbWluO1xuICAgICAgICAgICAgT3B0aW9ucy50byA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNTaW5nbGVGcm9tKSB7XG4gICAgICAgICAgICBPcHRpb25zLmZyb20gPSB0byAtIHN0ZXA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQ29ycmVjdEZyb20pIHtcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG8gPD0gbWluKSB7XG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWluICsgc3RlcDtcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWF4IDwgbWluKSB7XG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWluICsgc3RlcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gT3B0aW9ucztcbiAgICB9O1xuICAgIHJldHVybiBNb2RlbDtcbn0oKSk7XG5leHBvcnRzLk1vZGVsID0gTW9kZWw7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZpZXcgPSB2b2lkIDA7XG52YXIgaW50ZXJmYWNlc18xID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiKTtcbnZhciBFdmVudEVtaXR0ZXJfMSA9IHJlcXVpcmUoXCIuLi9FdmVudEVtaXR0ZXIvRXZlbnRFbWl0dGVyXCIpO1xudmFyIFJvbGxlcnNfMSA9IHJlcXVpcmUoXCIuL1JvbGxlcnMvUm9sbGVyc1wiKTtcbnZhciBUcmFja18xID0gcmVxdWlyZShcIi4vVHJhY2svVHJhY2tcIik7XG52YXIgU2NhbGVfMSA9IHJlcXVpcmUoXCIuL1NjYWxlL1NjYWxlXCIpO1xudmFyIEJhcl8xID0gcmVxdWlyZShcIi4vQmFyL0JhclwiKTtcbnZhciBWaWV3ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFZpZXcoT3B0aW9ucywgZWxlbWVudCkge1xuICAgICAgICB0aGlzLmVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyXzEuRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgIHRoaXMuc2xpZGVyID0gdGhpcy5jcmVhdGVTbGlkZXIoT3B0aW9ucywgZWxlbWVudCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB0aGlzLmluaXQoT3B0aW9ucyk7XG4gICAgICAgIHRoaXMucm9sbGVycyA9IHRoaXMuY3JlYXRlUm9sbGVycyh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5iYXIgPSB0aGlzLmNyZWF0ZUJhcih0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy50cmFjayA9IHRoaXMuY3JlYXRlVHJhY2sodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMuc2NhbGUgPSB0aGlzLmNyZWF0ZVNjYWxlKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLnVwRGF0YSh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5iaW5kRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9XG4gICAgLy8gKiDQoNCw0YHRiNC40YDRj9GOIE9wdGlvbnMg0LTQviBJVmlld1N0YXRlXG4gICAgVmlldy5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uIChPcHRpb25zKSB7XG4gICAgICAgIHZhciBzaXplID0gdGhpcy5nZXRTbGlkZXJTaXplKE9wdGlvbnMpO1xuICAgICAgICB2YXIgb25lU3RlcCA9IHRoaXMuZ2V0T25lU3RlcChPcHRpb25zKTtcbiAgICAgICAgdmFyIHNsaWRlciA9IHRoaXMuc2xpZGVyO1xuICAgICAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oe30sIE9wdGlvbnMpLCB7IHNpemU6IHNpemUsXG4gICAgICAgICAgICBvbmVTdGVwOiBvbmVTdGVwLFxuICAgICAgICAgICAgc2xpZGVyOiBzbGlkZXIgfSk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5jcmVhdGVTbGlkZXIgPSBmdW5jdGlvbiAoT3B0aW9ucywgZWxlbWVudCkge1xuICAgICAgICB2YXIgb3JpZW50YXRpb24gPSBPcHRpb25zLm9yaWVudGF0aW9uO1xuICAgICAgICB2YXIgc2xpZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHNsaWRlci5jbGFzc05hbWUgPSBcInNsaWRlciBzbGlkZXJfXCIgKyBvcmllbnRhdGlvbjtcbiAgICAgICAgZWxlbWVudC5hcHBlbmQoc2xpZGVyKTtcbiAgICAgICAgcmV0dXJuIHNsaWRlcjtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmNyZWF0ZVRyYWNrID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUcmFja18xLlRyYWNrKE9wdGlvbnMpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuY3JlYXRlQmFyID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCYXJfMS5CYXIoT3B0aW9ucyk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5jcmVhdGVSb2xsZXJzID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBSb2xsZXJzXzEuUm9sbGVycyhPcHRpb25zKTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmNyZWF0ZVNjYWxlID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTY2FsZV8xLlNjYWxlKE9wdGlvbnMpO1xuICAgIH07XG4gICAgLyoqXG4gICAgKiDQntCx0L3QvtCy0LvRj9GOINGB0YLQvtGB0YLQvtGP0L3QuNC1IFZpZXdcbiAgICAqINCe0LHQvdC+0LLQu9GP0Y4g0YHQvtGB0YLQvtGP0L3QuNC1INCy0YHQtdGFINC/0L7QtNCy0LjQtNC+0LJcbiAgICAqICovXG4gICAgVmlldy5wcm90b3R5cGUudXBEYXRhID0gZnVuY3Rpb24gKG5ld1N0YXRlKSB7XG4gICAgICAgIHZhciB1cGRhdGFTdGF0ZSA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCB0aGlzLnN0YXRlKSwgbmV3U3RhdGUpO1xuICAgICAgICB0aGlzLnJvbGxlcnMudXBEYXRhKHVwZGF0YVN0YXRlKTtcbiAgICAgICAgdGhpcy5iYXIudXBEYXRhKHVwZGF0YVN0YXRlKTtcbiAgICAgICAgdGhpcy5zY2FsZS51cERhdGEodXBkYXRhU3RhdGUpO1xuICAgICAgICB0aGlzLnRyYWNrLnVwRGF0YSh1cGRhdGFTdGF0ZSk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBfX2Fzc2lnbih7fSwgdXBkYXRhU3RhdGUpO1xuICAgIH07XG4gICAgLy8g0JzQtdGC0L7QtCDQv9C10YDQtdGB0LHQvtGA0LrQuCDRgdC70LDQudC00LXRgNCwLCDQuNC8INGD0L/RgNCw0LLQu9GP0LXRgiDQn9GA0LXQt9C10L3RgtC10YBcbiAgICBWaWV3LnByb3RvdHlwZS51cERhdGFTbGlkZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuc2xpZGVyLnJlbW92ZSgpO1xuICAgICAgICB0aGlzLnNsaWRlciA9IHRoaXMuY3JlYXRlU2xpZGVyKHRoaXMuc3RhdGUsIHRoaXMuZWxlbWVudCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB0aGlzLmluaXQodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMucm9sbGVycyA9IHRoaXMuY3JlYXRlUm9sbGVycyh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5zY2FsZSA9IHRoaXMuY3JlYXRlU2NhbGUodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMudHJhY2sgPSB0aGlzLmNyZWF0ZVRyYWNrKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLmJhciA9IHRoaXMuY3JlYXRlQmFyKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLnVwRGF0YSh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5iaW5kRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmdldE9uZVN0ZXAgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICB2YXIgbWluID0gT3B0aW9ucy5taW4sIG1heCA9IE9wdGlvbnMubWF4LCBzdGVwID0gT3B0aW9ucy5zdGVwO1xuICAgICAgICB2YXIgcmVzdWx0ID0gTWF0aC5jZWlsKChtYXggLSBtaW4pIC8gc3RlcCk7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFNsaWRlclNpemUoT3B0aW9ucykgLyByZXN1bHQ7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5iaW5kRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlVHJhY2tDbGljayA9IHRoaXMuaGFuZGxlVHJhY2tDbGljay5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmhhbmRsZVNjYWxlQ2xpY2sgPSB0aGlzLmhhbmRsZVNjYWxlQ2xpY2suYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVycygpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBoYW5kbGVTbGlkZXJEcmFnID0gdGhpcy5kcmFnU3RhcnQuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5zbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGhhbmRsZVNsaWRlckRyYWcpO1xuICAgICAgICB0aGlzLnNsaWRlci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVTbGlkZXJEcmFnKTtcbiAgICAgICAgdGhpcy5zbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZVRyYWNrQ2xpY2spO1xuICAgICAgICB0aGlzLnNsaWRlci5hZGRFdmVudExpc3RlbmVyKCdzY2FsZWNsaWNrJywgdGhpcy5oYW5kbGVTY2FsZUNsaWNrKTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmRyYWdTdGFydCA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICBpZiAodGhpcy5nZXRUYXJnZXRUeXBlKHRhcmdldCkpIHtcbiAgICAgICAgICAgIHZhciBkcmFnXzEgPSB0aGlzLmRyYWcuYmluZCh0aGlzLCB0YXJnZXQpO1xuICAgICAgICAgICAgdmFyIGhhbmRsZVVwXzEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZHJhZ18xKTtcbiAgICAgICAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZHJhZ18xKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlVXBfMSk7XG4gICAgICAgICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgaGFuZGxlVXBfMSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZHJhZ18xKTtcbiAgICAgICAgICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBkcmFnXzEpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGhhbmRsZVVwXzEpO1xuICAgICAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgaGFuZGxlVXBfMSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmRyYWcgPSBmdW5jdGlvbiAodGFyZ2V0LCBldmVudCkge1xuICAgICAgICB2YXIgb3JpZW50YXRpb24gPSB0aGlzLnN0YXRlLm9yaWVudGF0aW9uO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgbW91c2VWYWx1ZSA9IDA7XG4gICAgICAgIHZhciBpc0hhbmRsZSA9ICEvdG9vbHRpcCB8fCByb2xsZXIvLnRlc3QodGFyZ2V0LmNsYXNzTmFtZSk7XG4gICAgICAgIGlmIChpc0hhbmRsZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIHNlbnNvckhvcml6b250YWxFdmVudCA9IGV2ZW50LnR5cGUgPT09ICd0b3VjaG1vdmUnICYmIG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV07XG4gICAgICAgIHZhciBtb3VzZUhvcml6b250YWxFdmVudCA9IGV2ZW50LnR5cGUgPT09ICdtb3VzZW1vdmUnICYmIG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV07XG4gICAgICAgIHZhciBzZW5zb3JWZXJ0aWNhbEV2ZW50ID0gZXZlbnQudHlwZSA9PT0gJ3RvdWNobW92ZScgJiYgb3JpZW50YXRpb24gPT09IGludGVyZmFjZXNfMS5PcmllbnRhdGlvblswXTtcbiAgICAgICAgdmFyIG1vdXNlVmVydGljYWxFdmVudCA9IGV2ZW50LnR5cGUgPT09ICdtb3VzZW1vdmUnICYmIG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMF07XG4gICAgICAgIGlmIChzZW5zb3JIb3Jpem9udGFsRXZlbnQpIHtcbiAgICAgICAgICAgIG1vdXNlVmFsdWUgPSB0aGlzLmNvbnZlcnRQeFRvVmFsdWUoZXZlbnQudG91Y2hlc1swXS5jbGllbnRYKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW91c2VIb3Jpem9udGFsRXZlbnQpIHtcbiAgICAgICAgICAgIG1vdXNlVmFsdWUgPSB0aGlzLmNvbnZlcnRQeFRvVmFsdWUoZXZlbnQuY2xpZW50WCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbnNvclZlcnRpY2FsRXZlbnQpIHtcbiAgICAgICAgICAgIG1vdXNlVmFsdWUgPSB0aGlzLmNvbnZlcnRQeFRvVmFsdWUoZXZlbnQudG91Y2hlc1swXS5jbGllbnRZKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW91c2VWZXJ0aWNhbEV2ZW50KSB7XG4gICAgICAgICAgICBtb3VzZVZhbHVlID0gdGhpcy5jb252ZXJ0UHhUb1ZhbHVlKGV2ZW50LmNsaWVudFkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRlUG9zaXRpb24obW91c2VWYWx1ZSwgdGFyZ2V0KTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmdldFRhcmdldFR5cGUgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgICAgIHZhciByb2xsZXJzID0gdGhpcy5zbGlkZXIucXVlcnlTZWxlY3RvckFsbCgnLmpzLXNsaWRlcl9fcm9sbGVyJyk7XG4gICAgICAgIGlmIChyb2xsZXJzWzBdLmNvbnRhaW5zKHRhcmdldCkpXG4gICAgICAgICAgICByZXR1cm4gJ2Zyb20nO1xuICAgICAgICBpZiAocm9sbGVyc1sxXS5jb250YWlucyh0YXJnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gJ3RvJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJ3VuZGVmaW5lZCc7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5oYW5kbGVTY2FsZUNsaWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciBzY2FsZVBvc3RmaXggPSB0aGlzLnN0YXRlLnNjYWxlUG9zdGZpeDtcbiAgICAgICAgdmFyIHNlcGFyYXRlID0gdGhpcy5zdGF0ZS5zZXBhcmF0ZTtcbiAgICAgICAgdmFyIHZhbHVlID0gZXZlbnQuZGV0YWlsLnZhbHVlO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSAwO1xuICAgICAgICBpZiAoc2VwYXJhdGUgPT09ICcgJykge1xuICAgICAgICAgICAgc2VwYXJhdGUgPSAnJm5ic3A7JztcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGVsID0gdmFsdWUuc3BsaXQoc2NhbGVQb3N0Zml4KS5qb2luKCcnKTtcbiAgICAgICAgcG9zaXRpb24gPSBkZWwuc3BsaXQoc2VwYXJhdGUpLmpvaW4oJycpO1xuICAgICAgICB2YXIgcmVzdWx0ID0gU3RyaW5nKHBvc2l0aW9uKS5zcGxpdCgnLCcpLmpvaW4oJy4nKTtcbiAgICAgICAgdGhpcy51cGRhdGVQb3NpdGlvbihOdW1iZXIocmVzdWx0KSk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5oYW5kbGVUcmFja0NsaWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciBvcmllbnRhdGlvbiA9IHRoaXMuc3RhdGUub3JpZW50YXRpb247XG4gICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIHZhciBjb29yZGluYXRlID0gMDtcbiAgICAgICAgaWYgKC9zY2FsZS8udGVzdCh0YXJnZXQuY2xhc3NOYW1lKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV0pIHtcbiAgICAgICAgICAgIGNvb3JkaW5hdGUgPSBldmVudC5jbGllbnRYO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29vcmRpbmF0ZSA9IGV2ZW50LmNsaWVudFk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5jb252ZXJ0UHhUb1ZhbHVlKGNvb3JkaW5hdGUpO1xuICAgICAgICB0aGlzLnVwZGF0ZVBvc2l0aW9uKHZhbHVlKTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLnVwZGF0ZVBvc2l0aW9uID0gZnVuY3Rpb24gKHZhbHVlLCB0YXJnZXQpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5zdGF0ZSwgZnJvbSA9IF9hLmZyb20sIHRvID0gX2EudG8sIHR5cGUgPSBfYS50eXBlLCBzdGVwID0gX2Euc3RlcDtcbiAgICAgICAgdmFyIGZyb21EaXN0YW5jZSA9IE1hdGguYWJzKGZyb20gLSB2YWx1ZSk7XG4gICAgICAgIHZhciB0b0Rpc3RhbmNlID0gTWF0aC5hYnModG8gLSB2YWx1ZSk7XG4gICAgICAgIHZhciBpc1NpbmdsZSA9IHR5cGUgPT09IGludGVyZmFjZXNfMS5TbGlkZXJUeXBlWzFdO1xuICAgICAgICB2YXIgaXNTaW5nbGVGcm9tID0gaXNTaW5nbGUgJiYgZnJvbURpc3RhbmNlO1xuICAgICAgICBpZiAoaXNTaW5nbGVGcm9tKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnbmV3UG9zaXRpb24nLCB7XG4gICAgICAgICAgICAgICAgZnJvbTogdmFsdWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuY29udmVydFZhbHVlVG9Db2xvcih2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzRnJvbSA9IChmcm9tRGlzdGFuY2UgPCB0b0Rpc3RhbmNlKSA/ICdmcm9tJyA6ICd0byc7XG4gICAgICAgIHZhciB0YXJnZXRGcm9tID0gIXRhcmdldCAmJiBpc0Zyb20gPT09ICdmcm9tJztcbiAgICAgICAgdmFyIHRhcmdldFRvID0gIXRhcmdldCAmJiBpc0Zyb20gPT09ICd0byc7XG4gICAgICAgIGlmICh0YXJnZXRGcm9tKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnbmV3UG9zaXRpb24nLCB7XG4gICAgICAgICAgICAgICAgZnJvbTogdmFsdWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuY29udmVydFZhbHVlVG9Db2xvcih2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRhcmdldFRvKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnbmV3UG9zaXRpb24nLCB7XG4gICAgICAgICAgICAgICAgdG86IHZhbHVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmNvbnZlcnRWYWx1ZVRvQ29sb3IodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0YXJnZXRzID0gdGFyZ2V0ICYmIHRoaXMuZ2V0VGFyZ2V0VHlwZSh0YXJnZXQpO1xuICAgICAgICB2YXIgaXNGcm9tVGFyZ2V0ID0gdGFyZ2V0cyA9PT0gJ2Zyb20nICYmIHR5cGUgPT09IGludGVyZmFjZXNfMS5TbGlkZXJUeXBlWzBdO1xuICAgICAgICB2YXIgaXNUb1RhcmdldCA9IHRhcmdldHMgPT09ICd0byc7XG4gICAgICAgIHZhciBjb3JyZWN0RnJvbSA9IGlzRnJvbVRhcmdldCAmJiB2YWx1ZSA+IHRvIC0gc3RlcDtcbiAgICAgICAgdmFyIGNvcnJlY3RUbyA9IGlzVG9UYXJnZXQgJiYgdmFsdWUgPCBmcm9tICsgc3RlcDtcbiAgICAgICAgaWYgKGlzRnJvbVRhcmdldCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoJ25ld1Bvc2l0aW9uJywge1xuICAgICAgICAgICAgICAgIGZyb206IHZhbHVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmNvbnZlcnRWYWx1ZVRvQ29sb3IodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb3JyZWN0RnJvbSkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoJ25ld1Bvc2l0aW9uJywge1xuICAgICAgICAgICAgICAgIGZyb206IHRvIC0gc3RlcCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1RvVGFyZ2V0KSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnbmV3UG9zaXRpb24nLCB7XG4gICAgICAgICAgICAgICAgdG86IHZhbHVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmNvbnZlcnRWYWx1ZVRvQ29sb3IodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb3JyZWN0VG8pIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5lbWl0KCduZXdQb3NpdGlvbicsIHtcbiAgICAgICAgICAgICAgICB0bzogZnJvbSArIHN0ZXAsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuY29udmVydFB4VG9WYWx1ZSA9IGZ1bmN0aW9uIChjb29yZGluYXRlKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMuc3RhdGUsIG1pbiA9IF9hLm1pbiwgbWF4ID0gX2EubWF4LCBzdGVwID0gX2Euc3RlcCwgb25lU3RlcCA9IF9hLm9uZVN0ZXAsIHNpemUgPSBfYS5zaXplLCBvcmllbnRhdGlvbiA9IF9hLm9yaWVudGF0aW9uO1xuICAgICAgICB2YXIgc2xpZGVyUG9zID0gdGhpcy5nZXRTbGlkZXJQb3NpdGlvbigpO1xuICAgICAgICB2YXIgc2xpZGVyRW5kUG9zID0gc2xpZGVyUG9zICsgc2l6ZTtcbiAgICAgICAgdmFyIHB4ID0gMDtcbiAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV0pIHtcbiAgICAgICAgICAgIHB4ID0gY29vcmRpbmF0ZSAtIHNsaWRlclBvcztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHB4ID0gc2xpZGVyRW5kUG9zIC0gY29vcmRpbmF0ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHggPiBzaXplKVxuICAgICAgICAgICAgcmV0dXJuIG1heDtcbiAgICAgICAgaWYgKHB4IDwgMClcbiAgICAgICAgICAgIHJldHVybiBtaW47XG4gICAgICAgIHZhciB2YWx1ZSA9IE1hdGgucm91bmQocHggLyBvbmVTdGVwKSAqIHN0ZXAgKyBtaW47XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIC8qKlxuICAgICog0JLRi9GH0LXRgdC70Y/QtdC8INC90L7QstGL0Lkg0YbQstC10YIg0LIg0LfQsNCy0LjRgdC40LzQvtGB0YLQuCDQvtGCINC/0L7Qu9C+0LbQtdC90LjRjyDQsdC10LPRg9C90LrQvtCyXG4gICAgKiDQn9C10YDQtdCy0L7QtNC40LwgdmFsdWUg0LIgMTYt0YDQuNGH0L3Ri9C5INGE0L7RgNC80LDRglxuICAgICogKi9cbiAgICBWaWV3LnByb3RvdHlwZS5jb252ZXJ0VmFsdWVUb0NvbG9yID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMuc3RhdGUsIGNvbG9yID0gX2EuY29sb3IsIGdyYWRpZW50ID0gX2EuZ3JhZGllbnQ7XG4gICAgICAgIHZhciBfYiA9IHRoaXMuc3RhdGUsIG1heCA9IF9iLm1heCwgaXNDb2xvciA9IF9iLmlzQ29sb3IsIGNoYW5nZUNvbG9yID0gX2IuY2hhbmdlQ29sb3I7XG4gICAgICAgIHZhciB2YWwgPSB2YWx1ZSAvIG1heDtcbiAgICAgICAgdmFyIGlzQ2hhbmdlQ29sb3IgPSBpc0NvbG9yID09PSB0cnVlICYmIGNoYW5nZUNvbG9yID09PSBmYWxzZTtcbiAgICAgICAgdmFyIGlzQ2hhbmdlTmV3Q29sb3IgPSBpc0NvbG9yID09PSB0cnVlICYmIGNoYW5nZUNvbG9yID09PSB0cnVlO1xuICAgICAgICB2YXIgcGFsaXRyYSA9IDA7XG4gICAgICAgIHZhciBnclBhbGl0cmEgPSAwO1xuICAgICAgICBpZiAoaXNDaGFuZ2VDb2xvcikge1xuICAgICAgICAgICAgcGFsaXRyYSA9IE1hdGgucm91bmQodmFsICogMjU1ICogMjU1ICogMjU1KTtcbiAgICAgICAgICAgIGdyUGFsaXRyYSA9IE1hdGgucm91bmQodmFsICogMjU1ICogMjU0ICogMjU0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNDaGFuZ2VOZXdDb2xvcikge1xuICAgICAgICAgICAgcGFsaXRyYSA9IE1hdGgucm91bmQodmFsICogMjU2ICogMjU2ICogMjU1KTtcbiAgICAgICAgICAgIGdyUGFsaXRyYSA9IE1hdGgucm91bmQodmFsICogMjU0ICogMjU0ICogMjU0KTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgY29ycmVjdEdyYWRpZW50ID0gTWF0aC5hYnMoZ3JQYWxpdHJhKTtcbiAgICAgICAgdmFyIGNvcnJlY3QgPSBNYXRoLmFicyhwYWxpdHJhKTtcbiAgICAgICAgdmFyIHNldENvbG9yID0gY29ycmVjdC50b1N0cmluZygxNik7XG4gICAgICAgIHZhciBzZXRHcmFkaWVudCA9IGNvcnJlY3RHcmFkaWVudC50b1N0cmluZygxNik7XG4gICAgICAgIGNvbG9yID0gXCIjXCIgKyBzZXRDb2xvcjtcbiAgICAgICAgZ3JhZGllbnQgPSBcIiNcIiArIHNldEdyYWRpZW50O1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnbmV3UG9zaXRpb24nLCB7XG4gICAgICAgICAgICBjb2xvcjogY29sb3IsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnbmV3UG9zaXRpb24nLCB7XG4gICAgICAgICAgICBncmFkaWVudDogZ3JhZGllbnQsXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZ2V0U2xpZGVyUG9zaXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMuc3RhdGUsIG9yaWVudGF0aW9uID0gX2Eub3JpZW50YXRpb24sIHNsaWRlciA9IF9hLnNsaWRlcjtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gMDtcbiAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV0pIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZ2V0U2xpZGVyU2l6ZSA9IGZ1bmN0aW9uIChPcHRpb25zKSB7XG4gICAgICAgIHZhciBvcmllbnRhdGlvbiA9IE9wdGlvbnMub3JpZW50YXRpb247XG4gICAgICAgIHZhciBzaXplID0gMDtcbiAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV0pIHtcbiAgICAgICAgICAgIHNpemUgPSB0aGlzLnNsaWRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNpemUgPSB0aGlzLnNsaWRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNpemU7XG4gICAgfTtcbiAgICByZXR1cm4gVmlldztcbn0oKSk7XG5leHBvcnRzLlZpZXcgPSBWaWV3O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJvbGxlcnMgPSB2b2lkIDA7XG52YXIgaW50ZXJmYWNlc18xID0gcmVxdWlyZShcIi4uLy4uL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiKTtcbnZhciBzZXBhcmF0ZV8xID0gcmVxdWlyZShcIi4uLy4uL2xpYnMvc2VwYXJhdGVcIik7XG52YXIgUm9sbGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSb2xsZXJzKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5jcmVhdGUob3B0aW9ucyk7XG4gICAgfVxuICAgIFJvbGxlcnMucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlciwgb3JpZW50YXRpb24gPSBvcHRpb25zLm9yaWVudGF0aW9uO1xuICAgICAgICB2YXIgcm9sbGVyRmlyc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcm9sbGVyRmlyc3QuY2xhc3NOYW1lID0gXCJzbGlkZXJfX3JvbGxlciBqcy1zbGlkZXJfX3JvbGxlciBzbGlkZXJfX3JvbGxlcl9maXJzdCBqcy1zbGlkZXJfX3JvbGxlcl9maXJzdCBzbGlkZXJfX3JvbGxlcl9cIiArIG9yaWVudGF0aW9uICsgXCIganMtc2xpZGVyX19yb2xsZXJfXCIgKyBvcmllbnRhdGlvbjtcbiAgICAgICAgdmFyIHJvbGxlclNlY29uZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICByb2xsZXJTZWNvbmQuY2xhc3NOYW1lID0gXCJzbGlkZXJfX3JvbGxlcl9zZWNvbmQganMtc2xpZGVyX19yb2xsZXIganMtc2xpZGVyX19yb2xsZXJfc2Vjb25kXFxuICAgIHNsaWRlcl9fcm9sbGVyXFxuICAgIHNsaWRlcl9fcm9sbGVyX1wiICsgb3JpZW50YXRpb24gKyBcIiBqcy1zbGlkZXJfX3JvbGxlcl9cIiArIG9yaWVudGF0aW9uO1xuICAgICAgICBzbGlkZXIuYXBwZW5kKHJvbGxlckZpcnN0KTtcbiAgICAgICAgc2xpZGVyLmFwcGVuZChyb2xsZXJTZWNvbmQpO1xuICAgICAgICB0aGlzLmNyZWF0ZVRvb2x0aXAocm9sbGVyRmlyc3QsIHJvbGxlclNlY29uZCwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMubW92ZVJvbGxlcnNBdFZhbHVlKG9wdGlvbnMsIHJvbGxlckZpcnN0LCByb2xsZXJTZWNvbmQpO1xuICAgICAgICB0aGlzLnRvZ2dsZVJvbGxlcnMob3B0aW9ucywgcm9sbGVyU2Vjb25kKTtcbiAgICAgICAgdGhpcy51cGRhdGFDb2xvcihvcHRpb25zLCByb2xsZXJGaXJzdCwgcm9sbGVyU2Vjb25kKTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNyZWF0ZVRvb2x0aXAgPSBmdW5jdGlvbiAocm9sbGVyRmlyc3QsIHJvbGxlclNlY29uZCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgb3JpZW50YXRpb24gPSBvcHRpb25zLm9yaWVudGF0aW9uO1xuICAgICAgICB2YXIgZmlzdFRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgZmlzdFRvb2x0aXAuY2xhc3NOYW1lID0gXCJzbGlkZXJfX3Rvb2x0aXBfZmlyc3QganMtc2xpZGVyX190b29sdGlwX2ZpcnN0IGpzLXNsaWRlcl9fdG9vbHRpcCBzbGlkZXJfX3Rvb2x0aXAgc2xpZGVyX190b29sdGlwX1wiICsgb3JpZW50YXRpb24gKyBcIiBqcy1zbGlkZXJfX3Rvb2x0aXBfXCIgKyBvcmllbnRhdGlvbjtcbiAgICAgICAgdmFyIHNlY29uZFRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgc2Vjb25kVG9vbHRpcC5jbGFzc05hbWUgPSBcInNsaWRlcl9fdG9vbHRpcF9zZWNvbmQganMtc2xpZGVyX190b29sdGlwIGpzLXNsaWRlcl9fdG9vbHRpcF9zZWNvbmQgc2xpZGVyX190b29sdGlwIHNsaWRlcl9fdG9vbHRpcF9cIiArIG9yaWVudGF0aW9uICsgXCIganMtc2xpZGVyX190b29sdGlwX1wiICsgb3JpZW50YXRpb247XG4gICAgICAgIHJvbGxlckZpcnN0LmFwcGVuZChmaXN0VG9vbHRpcCk7XG4gICAgICAgIHJvbGxlclNlY29uZC5hcHBlbmQoc2Vjb25kVG9vbHRpcCk7XG4gICAgICAgIHRoaXMudXBkYXRhT3V0VG9vbHRpcChmaXN0VG9vbHRpcCwgc2Vjb25kVG9vbHRpcCwgb3B0aW9ucyk7XG4gICAgfTtcbiAgICBSb2xsZXJzLnByb3RvdHlwZS51cGRhdGFPdXRUb29sdGlwID0gZnVuY3Rpb24gKGZpc3RUb29sdGlwLCBzZWNvbmRUb29sdGlwLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciB0byA9IG9wdGlvbnMudG8sIGZyb20gPSBvcHRpb25zLmZyb20sIGlzUG9zdGZpeCA9IG9wdGlvbnMuaXNQb3N0Zml4LCBpc0xhYmVsID0gb3B0aW9ucy5pc0xhYmVsLCBpc1ByZWZpeCA9IG9wdGlvbnMuaXNQcmVmaXg7XG4gICAgICAgIHZhciBwb3N0Zml4ID0gb3B0aW9ucy5wb3N0Zml4O1xuICAgICAgICBpZiAoaXNQb3N0Zml4ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcG9zdGZpeCA9ICcnO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpc1NldFByZWZpeCA9IGlzTGFiZWwgPT09IHRydWUgJiYgaXNQcmVmaXggPT09IHRydWU7XG4gICAgICAgIHZhciBpc1NldFBvc3RmaXggPSBpc0xhYmVsID09PSB0cnVlICYmIGlzUHJlZml4ID09PSBmYWxzZTtcbiAgICAgICAgLy8g0L3QsNGB0YLRgNC+0LnQutC4INC/0L7RgdGC0YTQuNC60YFcbiAgICAgICAgaWYgKGlzU2V0UG9zdGZpeCkge1xuICAgICAgICAgICAgZmlzdFRvb2x0aXAuaW5uZXJIVE1MID0gXCJcIiArIHNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKGZyb20sIG9wdGlvbnMpICsgcG9zdGZpeDtcbiAgICAgICAgICAgIHNlY29uZFRvb2x0aXAuaW5uZXJIVE1MID0gXCJcIiArIHNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKHRvLCBvcHRpb25zKSArIHBvc3RmaXg7XG4gICAgICAgIH1cbiAgICAgICAgLy8g0L3QsNGB0YLRgNC+0LnQutC4INC/0YDQtdGE0LjQutGBXG4gICAgICAgIGlmIChpc1NldFByZWZpeCkge1xuICAgICAgICAgICAgZmlzdFRvb2x0aXAuaW5uZXJIVE1MID0gXCJcIiArIHBvc3RmaXggKyBzZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShmcm9tLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHNlY29uZFRvb2x0aXAuaW5uZXJIVE1MID0gXCJcIiArIHBvc3RmaXggKyBzZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh0bywgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRDb2xvcihmaXN0VG9vbHRpcCwgc2Vjb25kVG9vbHRpcCwgb3B0aW9ucyk7XG4gICAgfTtcbiAgICBSb2xsZXJzLnByb3RvdHlwZS5zZXRDb2xvciA9IGZ1bmN0aW9uIChmaXN0VG9vbHRpcCwgc2Vjb25kVG9vbHRpcCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgY29sb3IgPSBvcHRpb25zLmNvbG9yLCBncmFkaWVudCA9IG9wdGlvbnMuZ3JhZGllbnQsIGlzQ29sb3JPdXQgPSBvcHRpb25zLmlzQ29sb3JPdXQsIGFsbENvbG9ycyA9IG9wdGlvbnMuYWxsQ29sb3JzLCBpc0NoYW5nZUNvbG9yID0gb3B0aW9ucy5pc0NoYW5nZUNvbG9yLCBpc0xhYmVsID0gb3B0aW9ucy5pc0xhYmVsO1xuICAgICAgICAvKipcbiAgICAgICAgKiDQl9Cw0LTRg9C80LrQsCDRgdC00LXQu9Cw0YLRjCDQvtCx0YDQsNGC0L3Ri9C5INC60L7QvdCy0LXQutGC0L7RgCDQuNC3IDE2LdGA0LjRh9C90L7Qs9C+INCyINC+0LHRi9GH0L3Ri9C5INCy0LjQtCwg0L3QsNC/0YDQuNC80LXRgCAjZmZmINCyXG4gICAgICAgIHdoaXRlLCDQuCDQsiDQtNCw0LvRjNC90LXQudGI0LXQvCDRgdC+0YzQuNGA0LDQu9GB0Y8g0LTQvtC/0L7Qu9C90Y/RgtGMINC/0LXRgNC10LLQvtC0XG4gICAgICAgICogKi9cbiAgICAgICAgdmFyIG5ld0NvbG9yID0gYWxsQ29sb3JzW2NvbG9yXTtcbiAgICAgICAgdmFyIG5ld0dyYWRpZW50ID0gYWxsQ29sb3JzW2dyYWRpZW50XTtcbiAgICAgICAgaWYgKG5ld0dyYWRpZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG5ld0dyYWRpZW50ID0gZ3JhZGllbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5ld0NvbG9yID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG5ld0NvbG9yID0gY29sb3I7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHNldE5ld0NvbG9yID0gaXNDaGFuZ2VDb2xvciA9PT0gdHJ1ZSAmJiBpc0NvbG9yT3V0ID09PSB0cnVlO1xuICAgICAgICBpZiAoc2V0TmV3Q29sb3IpIHtcbiAgICAgICAgICAgIGZpc3RUb29sdGlwLmlubmVySFRNTCA9IFN0cmluZyhuZXdDb2xvcik7XG4gICAgICAgICAgICBzZWNvbmRUb29sdGlwLmlubmVySFRNTCA9IFN0cmluZyhuZXdHcmFkaWVudCk7XG4gICAgICAgICAgICBmaXN0VG9vbHRpcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIlwiICsgY29sb3I7XG4gICAgICAgICAgICBzZWNvbmRUb29sdGlwLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiXCIgKyBncmFkaWVudDtcbiAgICAgICAgICAgIGZpc3RUb29sdGlwLmNsYXNzTGlzdC5hZGQoJ3NsaWRlcl9fdG9vbHRpcF93aGl0ZS1jb2xvcicpO1xuICAgICAgICAgICAgc2Vjb25kVG9vbHRpcC5jbGFzc0xpc3QuYWRkKCdzbGlkZXJfX3Rvb2x0aXBfd2hpdGUtY29sb3InKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNMYWJlbCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGZpc3RUb29sdGlwLmNsYXNzTGlzdC5hZGQoJ3NsaWRlcl9fdG9vbHRpcF9kaXNwbGF5LW5vbmUnKTtcbiAgICAgICAgICAgIHNlY29uZFRvb2x0aXAuY2xhc3NMaXN0LmFkZCgnc2xpZGVyX190b29sdGlwX2Rpc3BsYXktbm9uZScpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSb2xsZXJzLnByb3RvdHlwZS51cGRhdGFDb2xvciA9IGZ1bmN0aW9uIChvcHRpb25zLCByb2xsZXJGaXJzdCwgcm9sbGVyU2Vjb25kKSB7XG4gICAgICAgIHZhciBjb2xvciA9IG9wdGlvbnMuY29sb3IsIGlzR3JhZGllbnQgPSBvcHRpb25zLmlzR3JhZGllbnQsIGdyYWRpZW50ID0gb3B0aW9ucy5ncmFkaWVudCwgaXNDaGFuZ2VDb2xvciA9IG9wdGlvbnMuaXNDaGFuZ2VDb2xvciwgZ3JhZGllbnREZWcgPSBvcHRpb25zLmdyYWRpZW50RGVnO1xuICAgICAgICB2YXIgaXNDaGFuZ2VHcmFkaWVudCA9IGlzQ2hhbmdlQ29sb3IgPT09IHRydWUgJiYgaXNHcmFkaWVudCA9PT0gdHJ1ZTtcbiAgICAgICAgdmFyIGlzQ29sb3IgPSBpc0NoYW5nZUNvbG9yID09PSB0cnVlICYmIGlzR3JhZGllbnQgPT09IGZhbHNlO1xuICAgICAgICBpZiAoaXNDaGFuZ2VHcmFkaWVudCkge1xuICAgICAgICAgICAgcm9sbGVyRmlyc3Quc3R5bGUuYmFja2dyb3VuZCA9IFwibGluZWFyLWdyYWRpZW50KFwiICsgZ3JhZGllbnREZWcgKyBcImRlZywgXCIgKyBjb2xvciArIFwiLCBcIiArIGdyYWRpZW50ICsgXCIpXCI7XG4gICAgICAgICAgICByb2xsZXJTZWNvbmQuc3R5bGUuYmFja2dyb3VuZCA9IFwibGluZWFyLWdyYWRpZW50KFwiICsgZ3JhZGllbnREZWcgKyBcImRlZywgXCIgKyBjb2xvciArIFwiLCBcIiArIGdyYWRpZW50ICsgXCIpXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQ29sb3IpIHtcbiAgICAgICAgICAgIHJvbGxlckZpcnN0LnN0eWxlLmJhY2tncm91bmQgPSBjb2xvcjtcbiAgICAgICAgICAgIHJvbGxlclNlY29uZC5zdHlsZS5iYWNrZ3JvdW5kID0gY29sb3I7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLm1vdmVSb2xsZXJzQXRWYWx1ZSA9IGZ1bmN0aW9uIChvcHRpb25zLCByb2xsZXJGaXJzdCwgcm9sbGVyU2Vjb25kKSB7XG4gICAgICAgIHZhciB0byA9IG9wdGlvbnMudG8sIGZyb20gPSBvcHRpb25zLmZyb20sIG9yaWVudGF0aW9uID0gb3B0aW9ucy5vcmllbnRhdGlvbjtcbiAgICAgICAgdmFyIHB4VG8gPSB0aGlzLmNvbnZlcnRWYWx1ZVRvUHgodG8sIG9wdGlvbnMpO1xuICAgICAgICB2YXIgcHhGcm9tID0gdGhpcy5jb252ZXJ0VmFsdWVUb1B4KGZyb20sIG9wdGlvbnMpO1xuICAgICAgICB2YXIgcG9zaXRpb25UbyA9IHRoaXMuY29udmVydFB4VG9Qcm9jZW50KHB4VG8sIG9wdGlvbnMpO1xuICAgICAgICB2YXIgcG9zaXRpb25Gcm9tID0gdGhpcy5jb252ZXJ0UHhUb1Byb2NlbnQocHhGcm9tLCBvcHRpb25zKTtcbiAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV0pIHtcbiAgICAgICAgICAgIHJvbGxlckZpcnN0LnN0eWxlLmxlZnQgPSBwb3NpdGlvbkZyb20gKyBcIiVcIjtcbiAgICAgICAgICAgIHJvbGxlclNlY29uZC5zdHlsZS5sZWZ0ID0gcG9zaXRpb25UbyArIFwiJVwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcm9sbGVyRmlyc3Quc3R5bGUuYm90dG9tID0gcG9zaXRpb25Gcm9tICsgXCIlXCI7XG4gICAgICAgICAgICByb2xsZXJTZWNvbmQuc3R5bGUuYm90dG9tID0gcG9zaXRpb25UbyArIFwiJVwiO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSb2xsZXJzLnByb3RvdHlwZS51cERhdGEgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgc2xpZGVyID0gb3B0aW9ucy5zbGlkZXI7XG4gICAgICAgIHZhciByb2xsZXJGaXJzdCA9IHNsaWRlci5xdWVyeVNlbGVjdG9yKCcuanMtc2xpZGVyX19yb2xsZXJfZmlyc3QnKTtcbiAgICAgICAgdmFyIHJvbGxlclNlY29uZCA9IHNsaWRlci5xdWVyeVNlbGVjdG9yKCcuanMtc2xpZGVyX19yb2xsZXJfc2Vjb25kJyk7XG4gICAgICAgIHZhciBmaXN0VG9vbHRpcCA9IHNsaWRlci5xdWVyeVNlbGVjdG9yKCcuanMtc2xpZGVyX190b29sdGlwX2ZpcnN0Jyk7XG4gICAgICAgIHZhciBzZWNvbmRUb29sdGlwID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoJy5qcy1zbGlkZXJfX3Rvb2x0aXBfc2Vjb25kJyk7XG4gICAgICAgIHRoaXMubW92ZVJvbGxlcnNBdFZhbHVlKG9wdGlvbnMsIHJvbGxlckZpcnN0LCByb2xsZXJTZWNvbmQpO1xuICAgICAgICB0aGlzLnRvZ2dsZVJvbGxlcnMob3B0aW9ucywgcm9sbGVyU2Vjb25kKTtcbiAgICAgICAgdGhpcy51cGRhdGFDb2xvcihvcHRpb25zLCByb2xsZXJGaXJzdCwgcm9sbGVyU2Vjb25kKTtcbiAgICAgICAgdGhpcy51cGRhdGFPdXRUb29sdGlwKGZpc3RUb29sdGlwLCBzZWNvbmRUb29sdGlwLCBvcHRpb25zKTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNvbnZlcnRWYWx1ZVRvUHggPSBmdW5jdGlvbiAodmFsdWUsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG1pbiA9IG9wdGlvbnMubWluLCBtYXggPSBvcHRpb25zLm1heCwgc3RlcCA9IG9wdGlvbnMuc3RlcCwgc2l6ZSA9IG9wdGlvbnMuc2l6ZSwgb25lU3RlcCA9IG9wdGlvbnMub25lU3RlcDtcbiAgICAgICAgaWYgKHZhbHVlID09PSBtYXgpXG4gICAgICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoKHZhbHVlIC0gbWluKSAvIHN0ZXApICogb25lU3RlcDtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNvbnZlcnRQeFRvUHJvY2VudCA9IGZ1bmN0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgc2l6ZSA9IG9wdGlvbnMuc2l6ZTtcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAqIDEwMCkgLyBzaXplO1xuICAgIH07XG4gICAgUm9sbGVycy5wcm90b3R5cGUudG9nZ2xlUm9sbGVycyA9IGZ1bmN0aW9uIChvcHRpb25zLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciB0eXBlID0gb3B0aW9ucy50eXBlO1xuICAgICAgICBpZiAodHlwZSA9PT0gaW50ZXJmYWNlc18xLlNsaWRlclR5cGVbMV0pIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBSb2xsZXJzO1xufSgpKTtcbmV4cG9ydHMuUm9sbGVycyA9IFJvbGxlcnM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhY2sgPSB2b2lkIDA7XG52YXIgc2VwYXJhdGVfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL3NlcGFyYXRlXCIpO1xudmFyIFRyYWNrID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRyYWNrKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5jcmVhdGUob3B0aW9ucyk7XG4gICAgfVxuICAgIFRyYWNrLnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgc2xpZGVyID0gb3B0aW9ucy5zbGlkZXIsIG9yaWVudGF0aW9uID0gb3B0aW9ucy5vcmllbnRhdGlvbjtcbiAgICAgICAgdmFyIHRyYWNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRyYWNrLmNsYXNzTmFtZSA9IFwic2xpZGVyX190cmFjayBzbGlkZXJfX3RyYWNrX1wiICsgb3JpZW50YXRpb24gKyBcIiBqcy1zbGlkZXJfX3RyYWNrIGpzLXNsaWRlcl9fdHJhY2tfXCIgKyBvcmllbnRhdGlvbjtcbiAgICAgICAgc2xpZGVyLmFwcGVuZCh0cmFjayk7XG4gICAgICAgIHRoaXMuY3JlYXRlT3V0RWxlbWVudCh0cmFjaywgb3B0aW9ucyk7XG4gICAgfTtcbiAgICBUcmFjay5wcm90b3R5cGUuY3JlYXRlT3V0RWxlbWVudCA9IGZ1bmN0aW9uICh0cmFjaywgb3B0aW9ucykge1xuICAgICAgICB2YXIgb3JpZW50YXRpb24gPSBvcHRpb25zLm9yaWVudGF0aW9uO1xuICAgICAgICB2YXIgc3RhcnRWYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB2YXIgZW5kVmFsdWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgc3RhcnRWYWx1ZS5jbGFzc05hbWUgPSBcInNsaWRlcl9fb3V0IHNsaWRlcl9fb3V0LXN0YXJ0IHNsaWRlcl9fb3V0LXN0YXJ0X1wiICsgb3JpZW50YXRpb24gKyBcIiBqcy1zbGlkZXJfX291dCBqcy1zbGlkZXJfX291dC1zdGFydCBqcy1zbGlkZXJfX291dC1zdGFydF9cIiArIG9yaWVudGF0aW9uO1xuICAgICAgICBlbmRWYWx1ZS5jbGFzc05hbWUgPSBcInNsaWRlcl9fb3V0IHNsaWRlcl9fb3V0LWVuZCBzbGlkZXJfX291dC1lbmRfXCIgKyBvcmllbnRhdGlvbiArIFwiIGpzLXNsaWRlcl9fb3V0IGpzLXNsaWRlcl9fb3V0LWVuZCBqcy1zbGlkZXJfX291dC1lbmRfXCIgKyBvcmllbnRhdGlvbjtcbiAgICAgICAgdHJhY2suYXBwZW5kKHN0YXJ0VmFsdWUpO1xuICAgICAgICB0cmFjay5hcHBlbmQoZW5kVmFsdWUpO1xuICAgICAgICB0aGlzLnNldFN0YXJ0RW5kVHJhY2tPdXQoc3RhcnRWYWx1ZSwgZW5kVmFsdWUsIG9wdGlvbnMpO1xuICAgIH07XG4gICAgVHJhY2sucHJvdG90eXBlLnNldFN0YXJ0RW5kVHJhY2tPdXQgPSBmdW5jdGlvbiAob3V0U3RhcnQsIG91dEVuZCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgbWluID0gb3B0aW9ucy5taW4sIG1heCA9IG9wdGlvbnMubWF4LCBmcm9tID0gb3B0aW9ucy5mcm9tLCB0byA9IG9wdGlvbnMudG8sIG1pbk1heCA9IG9wdGlvbnMubWluTWF4LCBmcm9tVG8gPSBvcHRpb25zLmZyb21UbywgaXNUcmFja1Bvc3RmaXggPSBvcHRpb25zLmlzVHJhY2tQb3N0Zml4LCBpc1ByZWZpeCA9IG9wdGlvbnMuaXNQcmVmaXg7XG4gICAgICAgIHZhciB0cmFja1Bvc3RmaXggPSBvcHRpb25zLnRyYWNrUG9zdGZpeDtcbiAgICAgICAgaWYgKGlzVHJhY2tQb3N0Zml4ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgdHJhY2tQb3N0Zml4ID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgLy8g0L3QsNGB0YLRgNC+0LnQutC4INC00LvRjyDQv9C+0YHRgtGE0LjQutGB0LBcbiAgICAgICAgaWYgKG1pbk1heCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgb3V0U3RhcnQuaW5uZXJIVE1MID0gXCJcIiArIHNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKG1pbiwgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgICAgICBvdXRFbmQuaW5uZXJIVE1MID0gXCJcIiArIHNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKG1heCwgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZyb21UbyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgb3V0U3RhcnQuaW5uZXJIVE1MID0gXCJcIiArIHNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKGZyb20sIG9wdGlvbnMpICsgdHJhY2tQb3N0Zml4O1xuICAgICAgICAgICAgb3V0RW5kLmlubmVySFRNTCA9IFwiXCIgKyBzZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh0bywgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzRnJvbXRvUHJlZml4ID0gZnJvbVRvID09PSB0cnVlICYmIGlzUHJlZml4ID09PSB0cnVlO1xuICAgICAgICB2YXIgaXNNaW5NYXhQcmVmaXggPSBtaW5NYXggPT09IHRydWUgJiYgaXNQcmVmaXggPT09IHRydWU7XG4gICAgICAgIC8vINC90LDRgdGC0YDQvtC50LrQuCDQtNC70Y8g0L/RgNC10YTQuNC60YHQsFxuICAgICAgICBpZiAoaXNNaW5NYXhQcmVmaXgpIHtcbiAgICAgICAgICAgIG91dFN0YXJ0LmlubmVySFRNTCA9IFwiXCIgKyB0cmFja1Bvc3RmaXggKyBzZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShtaW4sIG9wdGlvbnMpO1xuICAgICAgICAgICAgb3V0RW5kLmlubmVySFRNTCA9IFwiXCIgKyB0cmFja1Bvc3RmaXggKyBzZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShtYXgsIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0Zyb210b1ByZWZpeCkge1xuICAgICAgICAgICAgb3V0U3RhcnQuaW5uZXJIVE1MID0gXCJcIiArIHRyYWNrUG9zdGZpeCArIHNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKGZyb20sIG9wdGlvbnMpO1xuICAgICAgICAgICAgb3V0RW5kLmlubmVySFRNTCA9IFwiXCIgKyB0cmFja1Bvc3RmaXggKyBzZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh0bywgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRyYWNrLnByb3RvdHlwZS51cERhdGEgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgc2xpZGVyID0gb3B0aW9ucy5zbGlkZXI7XG4gICAgICAgIHZhciBvdXRTdGFydCA9IHNsaWRlci5xdWVyeVNlbGVjdG9yKCcuanMtc2xpZGVyX19vdXQtc3RhcnQnKTtcbiAgICAgICAgdmFyIG91dEVuZCA9IHNsaWRlci5xdWVyeVNlbGVjdG9yKCcuanMtc2xpZGVyX19vdXQtZW5kJyk7XG4gICAgICAgIHRoaXMuc2V0U3RhcnRFbmRUcmFja091dChvdXRTdGFydCwgb3V0RW5kLCBvcHRpb25zKTtcbiAgICB9O1xuICAgIHJldHVybiBUcmFjaztcbn0oKSk7XG5leHBvcnRzLlRyYWNrID0gVHJhY2s7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjYWxlID0gdm9pZCAwO1xudmFyIGludGVyZmFjZXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9pbnRlcmZhY2VzL2ludGVyZmFjZXNcIik7XG52YXIgc2VwYXJhdGVfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL3NlcGFyYXRlXCIpO1xudmFyIFNjYWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNjYWxlKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5jcmVhdGUob3B0aW9ucyk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgfVxuICAgIFNjYWxlLnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgc2xpZGVyID0gb3B0aW9ucy5zbGlkZXIsIG9yaWVudGF0aW9uID0gb3B0aW9ucy5vcmllbnRhdGlvbjtcbiAgICAgICAgdmFyIHNjYWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHNjYWxlLmNsYXNzTmFtZSA9IFwic2xpZGVyX19zY2FsZSBzbGlkZXJfX3NjYWxlX1wiICsgb3JpZW50YXRpb24gKyBcIiBqcy1zbGlkZXJfX3NjYWxlIGpzLXNsaWRlcl9fc2NhbGVfXCIgKyBvcmllbnRhdGlvbjtcbiAgICAgICAgc2xpZGVyLmFwcGVuZChzY2FsZSk7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoc2NhbGUpO1xuICAgICAgICB0aGlzLmFkZFNjYWxlTWFya2VyKG9wdGlvbnMsIHNjYWxlKTtcbiAgICAgICAgdGhpcy5jaGVja1NjYWxlKG9wdGlvbnMsIHNjYWxlKTtcbiAgICB9O1xuICAgIFNjYWxlLnByb3RvdHlwZS51cERhdGEgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgc2xpZGVyID0gb3B0aW9ucy5zbGlkZXI7XG4gICAgICAgIHZhciBzY2FsZSA9IHNsaWRlci5xdWVyeVNlbGVjdG9yKCcuanMtc2xpZGVyX19zY2FsZScpO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgdGhpcy5vcHRpb25zKSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY2hlY2tTY2FsZShvcHRpb25zLCBzY2FsZSk7XG4gICAgICAgIHRoaXMudXBkYXRhU2NhbGVNYXJrZXIob3B0aW9ucyk7XG4gICAgfTtcbiAgICBTY2FsZS5wcm90b3R5cGUudXBkYXRhU2NhbGVNYXJrZXIgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgb25seURpdmlzaW9ucyA9IG9wdGlvbnMub25seURpdmlzaW9ucywgc2xpZGVyID0gb3B0aW9ucy5zbGlkZXIsIGNvbG9yID0gb3B0aW9ucy5jb2xvcjtcbiAgICAgICAgdmFyIHNjYWxlTWFya2VycyA9IHNsaWRlci5xdWVyeVNlbGVjdG9yQWxsKCcuanMtc2xpZGVyX19zY2FsZS12YWx1ZScpO1xuICAgICAgICBzY2FsZU1hcmtlcnMuZm9yRWFjaChmdW5jdGlvbiAoc2NhbGVNYXJrZXIpIHtcbiAgICAgICAgICAgIGlmIChvbmx5RGl2aXNpb25zID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgc2NhbGVNYXJrZXIuY2xhc3NMaXN0LmFkZCgnc2xpZGVyX19zY2FsZS12YWx1ZV9mcy0wJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzY2FsZU1hcmtlci5jbGFzc0xpc3QuYWRkKCdzbGlkZXJfX3NjYWxlLXZhbHVlX2ZzLW5vcm1hbCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLXNjYWxlLWNvbG9yJywgXCIgXCIgKyBjb2xvcik7XG4gICAgfTtcbiAgICBTY2FsZS5wcm90b3R5cGUuY2hlY2tTY2FsZSA9IGZ1bmN0aW9uIChvcHRpb25zLCBzY2FsZSkge1xuICAgICAgICB2YXIgaXNTY2FsZSA9IG9wdGlvbnMuaXNTY2FsZTtcbiAgICAgICAgaWYgKGlzU2NhbGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBzY2FsZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1NjYWxlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBzY2FsZS5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjYWxlLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uIChzY2FsZSkge1xuICAgICAgICB0aGlzLmhhbmRsZVNjYWxlQ2xpY2sgPSB0aGlzLmhhbmRsZVNjYWxlQ2xpY2suYmluZCh0aGlzKTtcbiAgICAgICAgc2NhbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZVNjYWxlQ2xpY2spO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLmFkZFNjYWxlTWFya2VyID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNjYWxlKSB7XG4gICAgICAgIHZhciBtaW4gPSBvcHRpb25zLm1pbiwgbWF4ID0gb3B0aW9ucy5tYXgsIHN0ZXAgPSBvcHRpb25zLnN0ZXAsIHNpemUgPSBvcHRpb25zLnNpemUsIG9uZVN0ZXAgPSBvcHRpb25zLm9uZVN0ZXA7XG4gICAgICAgIHZhciBpbmMgPSB0aGlzLmdldEluY3JlbWVudChvcHRpb25zKTtcbiAgICAgICAgdmFyIHB4SW5jID0gKGluYyAvIHN0ZXApICogb25lU3RlcDtcbiAgICAgICAgdmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICB2YXIgcHhDdXJyZW50ID0gMDtcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICBmb3IgKHZhciBjdXJyZW50ID0gbWluOyBjdXJyZW50IDwgbWF4OyBjdXJyZW50ICs9IGluYywgaSArPSAxKSB7XG4gICAgICAgICAgICBpZiAocHhDdXJyZW50ID4gc2l6ZSAtIDUwKVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVTY2FsZU1hcmtlcihmcmFnbWVudCwgY3VycmVudCwgcHhDdXJyZW50LCBvcHRpb25zLCBpKTtcbiAgICAgICAgICAgIHB4Q3VycmVudCArPSBweEluYztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNyZWF0ZVNjYWxlTWFya2VyKGZyYWdtZW50LCBtYXgsIHNpemUsIG9wdGlvbnMsIDUpO1xuICAgICAgICBzY2FsZS5hcHBlbmQoZnJhZ21lbnQpO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLmdldEluY3JlbWVudCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzaXplID0gb3B0aW9ucy5zaXplLCBvbmVTdGVwID0gb3B0aW9ucy5vbmVTdGVwLCBzdGVwID0gb3B0aW9ucy5zdGVwO1xuICAgICAgICB2YXIgdmFsdWUgPSBNYXRoLmNlaWwoc2l6ZSAvIG9uZVN0ZXApO1xuICAgICAgICB2YXIgaW5jID0gTWF0aC5jZWlsKHZhbHVlIC8gNSkgKiBzdGVwO1xuICAgICAgICByZXR1cm4gaW5jO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLmNyZWF0ZVNjYWxlTWFya2VyID0gZnVuY3Rpb24gKGZyYWdtZW50LCB2YWx1ZSwgcG9zaXRpb24sIG9wdGlvbnMsIHZhbCkge1xuICAgICAgICB2YXIgb3JpZW50YXRpb24gPSBvcHRpb25zLm9yaWVudGF0aW9uLCBpc1NjYWxlUG9zdGZpeCA9IG9wdGlvbnMuaXNTY2FsZVBvc3RmaXgsIGlzUHJlZml4ID0gb3B0aW9ucy5pc1ByZWZpeCwgb25seURpdmlzaW9ucyA9IG9wdGlvbnMub25seURpdmlzaW9ucztcbiAgICAgICAgdmFyIHNjYWxlUG9zdGZpeCA9IG9wdGlvbnMuc2NhbGVQb3N0Zml4O1xuICAgICAgICB2YWx1ZSA9IE51bWJlcih2YWx1ZS50b0ZpeGVkKDEpKTtcbiAgICAgICAgdmFyIHNjYWxlTWFya2VyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICBzY2FsZU1hcmtlci5jbGFzc05hbWUgPSBcInNsaWRlcl9fc2NhbGUtdmFsdWUgc2xpZGVyX19zY2FsZS12YWx1ZV9cIiArIG9yaWVudGF0aW9uICsgXCIganMtc2xpZGVyX19zY2FsZS12YWx1ZSBqcy1zbGlkZXJfX3NjYWxlLXZhbHVlX1wiICsgb3JpZW50YXRpb247XG4gICAgICAgIHZhciBkaXZpc2lvblZhbHVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICB2YXIgZGl2aXNpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIGRpdmlzaW9uVmFsdWUuY2xhc3NOYW1lID0gXCJzbGlkZXJfX2RpdmlzaW9uLXZhbHVlIGpzLXNsaWRlcl9fZGl2aXNpb24tdmFsdWUgc2xpZGVyX19kaXZpc2lvbi12YWx1ZV9cIiArIHZhbDtcbiAgICAgICAgZGl2aXNpb24uY2xhc3NOYW1lID0gJ3NsaWRlcl9fZGl2aXNpb24ganMtc2xpZGVyX19kaXZpc2lvbic7XG4gICAgICAgIHNjYWxlTWFya2VyLmFwcGVuZChkaXZpc2lvblZhbHVlKTtcbiAgICAgICAgc2NhbGVNYXJrZXIuYXBwZW5kKGRpdmlzaW9uKTtcbiAgICAgICAgZnJhZ21lbnQuYXBwZW5kKHNjYWxlTWFya2VyKTtcbiAgICAgICAgdmFyIGVsZW1lbnQgPSBkaXZpc2lvblZhbHVlO1xuICAgICAgICBpZiAob25seURpdmlzaW9ucyA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGVsZW1lbnQgPSBzY2FsZU1hcmtlcjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNTY2FsZVBvc3RmaXggPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBzY2FsZVBvc3RmaXggPSAnJztcbiAgICAgICAgfVxuICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IFwiXCIgKyBzZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh2YWx1ZSwgb3B0aW9ucykgKyBzY2FsZVBvc3RmaXg7XG4gICAgICAgIGlmIChpc1ByZWZpeCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBcIlwiICsgc2NhbGVQb3N0Zml4ICsgc2VwYXJhdGVfMS5jb3JyZWN0U2VwYXJhdGUodmFsdWUsIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRhU2NhbGVNYXJrZXIob3B0aW9ucyk7XG4gICAgICAgIHZhciBvZmZzZXQgPSB0aGlzLmNvbnZlcnRQeFRvUGVyY2VudChwb3NpdGlvbiwgb3B0aW9ucyk7XG4gICAgICAgIGlmIChvcmllbnRhdGlvbiA9PT0gaW50ZXJmYWNlc18xLk9yaWVudGF0aW9uWzFdKSB7XG4gICAgICAgICAgICBzY2FsZU1hcmtlci5zdHlsZS5sZWZ0ID0gb2Zmc2V0ICsgXCIlXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzY2FsZU1hcmtlci5zdHlsZS5ib3R0b20gPSBvZmZzZXQgKyBcIiVcIjtcbiAgICAgICAgfVxuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLmNvbnZlcnRQeFRvUGVyY2VudCA9IGZ1bmN0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgc2l6ZSA9IG9wdGlvbnMuc2l6ZTtcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAqIDEwMCkgLyBzaXplO1xuICAgIH07XG4gICAgLy8g0JrQsNGB0YLQvtC80L3Ri9C5INCt0LLQtdC90YIg0LTQu9GPINC/0LXRgNC10LTQsNGH0Lgg0LfQvdCw0YfQtdC90LjRjyDQsiDQktC40LRcbiAgICBTY2FsZS5wcm90b3R5cGUuaGFuZGxlU2NhbGVDbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICB2YXIgb25seURpdmlzaW9ucyA9IHRoaXMub3B0aW9ucy5vbmx5RGl2aXNpb25zO1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgaWYgKCEodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgaXNTY2FsZURpdmlzb24gPSAhdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnc2xpZGVyX19kaXZpc2lvbi12YWx1ZScpICYmIG9ubHlEaXZpc2lvbnMgPT09IHRydWU7XG4gICAgICAgIHZhciBpc1NjYWxlVmFsdWUgPSAhdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnc2xpZGVyX19zY2FsZS12YWx1ZScpICYmIG9ubHlEaXZpc2lvbnMgPT09IGZhbHNlO1xuICAgICAgICBpZiAoaXNTY2FsZURpdmlzb24pXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmIChpc1NjYWxlVmFsdWUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciB2YWx1ZSA9IHRhcmdldC5pbm5lckhUTUw7XG4gICAgICAgIHZhciBzY2FsZUV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdzY2FsZWNsaWNrJywge1xuICAgICAgICAgICAgYnViYmxlczogdHJ1ZSxcbiAgICAgICAgICAgIGRldGFpbDoge1xuICAgICAgICAgICAgICAgIGV2ZW50OiBldmVudCwgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHRhcmdldC5kaXNwYXRjaEV2ZW50KHNjYWxlRXZlbnQpO1xuICAgIH07XG4gICAgcmV0dXJuIFNjYWxlO1xufSgpKTtcbmV4cG9ydHMuU2NhbGUgPSBTY2FsZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXIgPSB2b2lkIDA7XG52YXIgaW50ZXJmYWNlc18xID0gcmVxdWlyZShcIi4uLy4uL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiKTtcbnZhciBCYXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQmFyKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5jcmVhdGUob3B0aW9ucyk7XG4gICAgfVxuICAgIEJhci5wcm90b3R5cGUuY3JlYXRlID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHNsaWRlciA9IG9wdGlvbnMuc2xpZGVyLCBvcmllbnRhdGlvbiA9IG9wdGlvbnMub3JpZW50YXRpb247XG4gICAgICAgIHZhciBiYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYmFyLmNsYXNzTmFtZSA9IFwic2xpZGVyX19iYXIgc2xpZGVyX19iYXJfXCIgKyBvcmllbnRhdGlvbiArIFwiIGpzLXNsaWRlcl9fYmFyIGpzLXNsaWRlcl9fYmFyX1wiICsgb3JpZW50YXRpb247XG4gICAgICAgIHNsaWRlci5hcHBlbmQoYmFyKTtcbiAgICAgICAgdGhpcy51cGRhdGFDb2xvcihvcHRpb25zLCBiYXIpO1xuICAgICAgICB0aGlzLnVwZGF0YUJhcihvcHRpb25zLCBiYXIpO1xuICAgIH07XG4gICAgQmFyLnByb3RvdHlwZS51cERhdGEgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgc2xpZGVyID0gb3B0aW9ucy5zbGlkZXI7XG4gICAgICAgIHZhciBiYXIgPSBzbGlkZXIucXVlcnlTZWxlY3RvcignLmpzLXNsaWRlcl9fYmFyJyk7XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucywgYmFyKTtcbiAgICAgICAgdGhpcy51cGRhdGFCYXIob3B0aW9ucywgYmFyKTtcbiAgICB9O1xuICAgIEJhci5wcm90b3R5cGUudXBkYXRhQ29sb3IgPSBmdW5jdGlvbiAob3B0aW9ucywgYmFyKSB7XG4gICAgICAgIHZhciBjb2xvciA9IG9wdGlvbnMuY29sb3IsIGlzR3JhZGllbnQgPSBvcHRpb25zLmlzR3JhZGllbnQsIGdyYWRpZW50ID0gb3B0aW9ucy5ncmFkaWVudCwgZ3JhZGllbnREZWcgPSBvcHRpb25zLmdyYWRpZW50RGVnLCBpc0NoYW5nZUNvbG9yID0gb3B0aW9ucy5pc0NoYW5nZUNvbG9yO1xuICAgICAgICB2YXIgaXNTZXRHcmFkaWVudCA9IGlzQ2hhbmdlQ29sb3IgPT09IHRydWUgJiYgaXNHcmFkaWVudCA9PT0gdHJ1ZTtcbiAgICAgICAgdmFyIGlzU2V0Q29sb3IgPSBpc0NoYW5nZUNvbG9yID09PSB0cnVlICYmIGlzR3JhZGllbnQgPT09IGZhbHNlO1xuICAgICAgICBpZiAoaXNTZXRHcmFkaWVudCkge1xuICAgICAgICAgICAgYmFyLnN0eWxlLmJhY2tncm91bmQgPSBcImxpbmVhci1ncmFkaWVudChcIiArIGdyYWRpZW50RGVnICsgXCJkZWcsIFwiICsgY29sb3IgKyBcIiwgXCIgKyBncmFkaWVudCArIFwiKVwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1NldENvbG9yKSB7XG4gICAgICAgICAgICBiYXIuc3R5bGUuYmFja2dyb3VuZCA9IGNvbG9yO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBCYXIucHJvdG90eXBlLmdldFJvbGxlclBvc2l0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIHJvbGxlcnMgPSBzbGlkZXIucXVlcnlTZWxlY3RvckFsbCgnLmpzLXNsaWRlcl9fcm9sbGVyJyk7XG4gICAgICAgIHZhciByb2xsZXJzUG9zaXRpb25zID0gW3RoaXMuY2FsY3VsYXRlUG9zaXRpb24ocm9sbGVyc1swXSwgb3B0aW9ucyksXG4gICAgICAgICAgICB0aGlzLmNhbGN1bGF0ZVBvc2l0aW9uKHJvbGxlcnNbMV0sIG9wdGlvbnMpXTtcbiAgICAgICAgcmV0dXJuIHJvbGxlcnNQb3NpdGlvbnMuc29ydChmdW5jdGlvbiAoYSwgYikgeyByZXR1cm4gYSAtIGI7IH0pO1xuICAgIH07XG4gICAgQmFyLnByb3RvdHlwZS5jYWxjdWxhdGVQb3NpdGlvbiA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBvcmllbnRhdGlvbiA9IG9wdGlvbnMub3JpZW50YXRpb247XG4gICAgICAgIHZhciBzaWRlID0gb3JpZW50YXRpb24gPT09IGludGVyZmFjZXNfMS5PcmllbnRhdGlvblsxXSA/ICdsZWZ0JyA6ICd0b3AnO1xuICAgICAgICB2YXIgd2lkdGggPSBOdW1iZXIucGFyc2VJbnQoZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS53aWR0aCwgMTApO1xuICAgICAgICByZXR1cm4gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVtzaWRlXSArIHdpZHRoIC8gMjtcbiAgICB9O1xuICAgIEJhci5wcm90b3R5cGUuY29udmVydFB4VG9Qcm9jZW50ID0gZnVuY3Rpb24gKHZhbHVlLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBzaXplID0gb3B0aW9ucy5zaXplO1xuICAgICAgICByZXR1cm4gKHZhbHVlICogMTAwKSAvIHNpemU7XG4gICAgfTtcbiAgICBCYXIucHJvdG90eXBlLnVwZGF0YUJhciA9IGZ1bmN0aW9uIChvcHRpb25zLCBiYXIpIHtcbiAgICAgICAgdmFyIHR5cGUgPSBvcHRpb25zLnR5cGUsIG9yaWVudGF0aW9uID0gb3B0aW9ucy5vcmllbnRhdGlvbjtcbiAgICAgICAgdmFyIGlzSG9yaXpvbnRhbCA9IG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV07XG4gICAgICAgIHZhciBzaWRlID0gaXNIb3Jpem9udGFsID8gJ2xlZnQnIDogJ3RvcCc7XG4gICAgICAgIHZhciBkaXJlY3Rpb24gPSBpc0hvcml6b250YWwgPyAnd2lkdGgnIDogJ2hlaWdodCc7XG4gICAgICAgIHZhciByb2xsZXJQb3MgPSB0aGlzLmdldFJvbGxlclBvc2l0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgdmFyIGlzU2luZ2xlID0gdHlwZSA9PT0gaW50ZXJmYWNlc18xLlNsaWRlclR5cGVbMV07XG4gICAgICAgIHZhciBzbGlkZXJQb3MgPSB0aGlzLmdldE5ld1NsaWRlclBvcyhvcHRpb25zKTtcbiAgICAgICAgdmFyIGlzU2luZ2xlSG9yaXpvbnRhbCA9IGlzU2luZ2xlICYmIGlzSG9yaXpvbnRhbDtcbiAgICAgICAgaWYgKGlzU2luZ2xlSG9yaXpvbnRhbCkge1xuICAgICAgICAgICAgdmFyIHRvID0gdGhpcy5jb252ZXJ0UHhUb1Byb2NlbnQoTWF0aC5hYnMocm9sbGVyUG9zWzFdIC0gc2xpZGVyUG9zKSwgb3B0aW9ucyk7XG4gICAgICAgICAgICBiYXIuc3R5bGVbc2lkZV0gPSAnMCUnO1xuICAgICAgICAgICAgYmFyLnN0eWxlW2RpcmVjdGlvbl0gPSB0byArIFwiJVwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIGZyb20gPSB0aGlzLmNvbnZlcnRQeFRvUHJvY2VudChNYXRoLmFicyhyb2xsZXJQb3NbMV0gLSBzbGlkZXJQb3MpLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHZhciB0byA9IDEwMCAtIGZyb207XG4gICAgICAgICAgICBiYXIuc3R5bGVbc2lkZV0gPSBmcm9tICsgXCIlXCI7XG4gICAgICAgICAgICBiYXIuc3R5bGVbZGlyZWN0aW9uXSA9IHRvICsgXCIlXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1NpbmdsZSkge1xuICAgICAgICAgICAgdmFyIGZyb20gPSB0aGlzLmNvbnZlcnRQeFRvUHJvY2VudChNYXRoLmFicyhyb2xsZXJQb3NbMF0gLSBzbGlkZXJQb3MpLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHZhciB0byA9IHRoaXMuY29udmVydFB4VG9Qcm9jZW50KE1hdGguYWJzKHJvbGxlclBvc1sxXSAtIHJvbGxlclBvc1swXSksIG9wdGlvbnMpO1xuICAgICAgICAgICAgYmFyLnN0eWxlW3NpZGVdID0gZnJvbSArIFwiJVwiO1xuICAgICAgICAgICAgYmFyLnN0eWxlW2RpcmVjdGlvbl0gPSB0byArIFwiJVwiO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBCYXIucHJvdG90eXBlLmdldE5ld1NsaWRlclBvcyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBvcmllbnRhdGlvbiA9IG9wdGlvbnMub3JpZW50YXRpb24sIHNsaWRlciA9IG9wdGlvbnMuc2xpZGVyO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSAwO1xuICAgICAgICBpZiAob3JpZW50YXRpb24gPT09IGludGVyZmFjZXNfMS5PcmllbnRhdGlvblsxXSkge1xuICAgICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcG9zaXRpb247XG4gICAgfTtcbiAgICByZXR1cm4gQmFyO1xufSgpKTtcbmV4cG9ydHMuQmFyID0gQmFyO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFsbENvbG9ycyA9IHZvaWQgMDtcbnZhciBhbGxDb2xvcnMgPSB7XG4gICAgJyNmMGY4ZmYnOiAnYWxpY2VibHVlJyxcbiAgICAnI2ZhZWJkNyc6ICdhbnRpcXVld2hpdGUnLFxuICAgICcjMDBmZmZmJzogJ2FxdWEnLFxuICAgICcjN2ZmZmQ0JzogJ2FxdWFtYXJpbmUnLFxuICAgICcjZjBmZmZmJzogJ2F6dXJlJyxcbiAgICAnI2Y1ZjVkYyc6ICdiZWlnZScsXG4gICAgJyNmZmU0YzQnOiAnYmlzcXVlJyxcbiAgICAnIzAwMDAwMCc6ICdibGFjaycsXG4gICAgJyNmZmViY2QnOiAnYmxhbmNoZWRhbG1vbmQnLFxuICAgICcjMDAwMGZmJzogJ2JsdWUnLFxuICAgICcjOGEyYmUyJzogJ2JsdWV2aW9sZXQnLFxuICAgICcjYTUyYTJhJzogJ2Jyb3duJyxcbiAgICAnI2RlYjg4Nyc6ICdidXJseXdvb2QnLFxuICAgICcjNWY5ZWEwJzogJ2NhZGV0Ymx1ZScsXG4gICAgJyM3ZmZmMDAnOiAnY2hhcnRyZXVzZScsXG4gICAgJyNkMjY5MWUnOiAnY2hvY29sYXRlJyxcbiAgICAnI2ZmN2Y1MCc6ICdjb3JhbCcsXG4gICAgJyM2NDk1ZWQnOiAnY29ybmZsb3dlcmJsdWUnLFxuICAgICcjZmZmOGRjJzogJ2Nvcm5zaWxrJyxcbiAgICAnI2RjMTQzYyc6ICdjcmltc29uJyxcbiAgICAnIzAwMDA4Yic6ICdkYXJrYmx1ZScsXG4gICAgJyMwMDhiOGInOiAnZGFya2N5YW4nLFxuICAgICcjYjg4NjBiJzogJ2Rhcmtnb2xkZW5yb2QnLFxuICAgICcjYTlhOWE5JzogJ2RhcmtncmF5JyxcbiAgICAnIzAwNjQwMCc6ICdkYXJrZ3JlZW4nLFxuICAgICcjYmRiNzZiJzogJ2RhcmtraGFraScsXG4gICAgJyM4YjAwOGInOiAnZGFya21hZ2VudGEnLFxuICAgICcjNTU2YjJmJzogJ2RhcmtvbGl2ZWdyZWVuJyxcbiAgICAnI2ZmOGMwMCc6ICdkYXJrb3JhbmdlJyxcbiAgICAnIzk5MzJjYyc6ICdkYXJrb3JjaGlkJyxcbiAgICAnIzhiMDAwMCc6ICdkYXJrcmVkJyxcbiAgICAnI2U5OTY3YSc6ICdkYXJrc2FsbW9uJyxcbiAgICAnIzhmYmM4Zic6ICdkYXJrc2VhZ3JlZW4nLFxuICAgICcjNDgzZDhiJzogJ2RhcmtzbGF0ZWJsdWUnLFxuICAgICcjNWRkZmJlJzogJ2FxdWFtYXJpbmUnLFxuICAgICcjMTk4MDAwJzogJ9CX0LXQu9C10L3Ri9C5JyxcbiAgICAnIzJmNGY0Zic6ICdkYXJrc2xhdGVncmF5JyxcbiAgICAnIzAwY2VkMSc6ICdkYXJrdHVycXVvaXNlJyxcbiAgICAnIzk0MDBkMyc6ICdkYXJrdmlvbGV0JyxcbiAgICAnI2ZmMTQ5Myc6ICdkZWVwcGluaycsXG4gICAgJyMwMGJmZmYnOiAnZGVlcHNreWJsdWUnLFxuICAgICcjNjk2OTY5JzogJ2RpbWdyYXknLFxuICAgICcjMWU5MGZmJzogJ2RvZGdlcmJsdWUnLFxuICAgICcjYjIyMjIyJzogJ2ZpcmVicmljaycsXG4gICAgJyNmZmZhZjAnOiAnZmxvcmFsd2hpdGUnLFxuICAgICcjMjI4YjIyJzogJ2ZvcmVzdGdyZWVuJyxcbiAgICAnI2ZmMDBmZic6ICdmdWNoc2lhJyxcbiAgICAnI2RjZGNkYyc6ICdnYWluc2Jvcm8nLFxuICAgICcjZjhmOGZmJzogJ2dob3N0d2hpdGUnLFxuICAgICcjZGFhNTIwJzogJ2dvbGRlbnJvZCcsXG4gICAgJyNmZmQ3MDAnOiAnZ29sZCcsXG4gICAgJyM4MDgwODAnOiAnZ3JheScsXG4gICAgJyMwMDgwMDAnOiAn0JfQtdC70LXQvdGL0LknLFxuICAgICcjYWRmZjJmJzogJ2dyZWVueWVsbG93JyxcbiAgICAnI2YwZmZmMCc6ICdob25leWRldycsXG4gICAgJyNmZjY5YjQnOiAnaG90cGluaycsXG4gICAgJyNjZDVjNWMnOiAnaW5kaWFucmVkJyxcbiAgICAnIzRiMDA4Mic6ICdpbmRpZ28nLFxuICAgICcjZmZmZmYwJzogJ2l2b3J5JyxcbiAgICAnI2YwZTY4Yyc6ICdraGFraScsXG4gICAgJyNmZmYwZjUnOiAnbGF2ZW5kZXJibHVzaCcsXG4gICAgJyNlNmU2ZmEnOiAnbGF2ZW5kZXInLFxuICAgICcjN2NmYzAwJzogJ2xhd25ncmVlbicsXG4gICAgJyNmZmZhY2QnOiAnbGVtb25jaGlmZm9uJyxcbiAgICAnI2FkZDhlNic6ICdsaWdodGJsdWUnLFxuICAgICcjZjA4MDgwJzogJ2xpZ2h0Y29yYWwnLFxuICAgICcjZTBmZmZmJzogJ2xpZ2h0Y3lhbicsXG4gICAgJyNmYWZhZDInOiAnbGlnaHRnb2xkZW5yb2R5ZWxsb3cnLFxuICAgICcjZDNkM2QzJzogJ2xpZ2h0Z3JheScsXG4gICAgJyM5MGVlOTAnOiAnbGlnaHRncmVlbicsXG4gICAgJyNmZmI2YzEnOiAnbGlnaHRwaW5rJyxcbiAgICAnI2ZmYTA3YSc6ICdsaWdodHNhbG1vbicsXG4gICAgJyMyMGIyYWEnOiAnbGlnaHRzZWFncmVlbicsXG4gICAgJyM4N2NlZmEnOiAnbGlnaHRza3libHVlJyxcbiAgICAnIzc3ODg5OSc6ICdsaWdodHNsYXRlZ3JheScsXG4gICAgJyNiMGM0ZGUnOiAnbGlnaHRzdGVlbGJsdWUnLFxuICAgICcjZmZmZmUwJzogJ2xpZ2h0eWVsbG93JyxcbiAgICAnIzAwZmYwMCc6ICdsaW1lJyxcbiAgICAnIzMyY2QzMic6ICdsaW1lZ3JlZW4nLFxuICAgICcjZmFmMGU2JzogJ2xpbmVuJyxcbiAgICAnIzgwMDAwMCc6ICdtYXJvb24nLFxuICAgICcjNjZjZGFhJzogJ21lZGl1bWFxdWFtYXJpbmUnLFxuICAgICcjMDAwMGNkJzogJ21lZGl1bWJsdWUnLFxuICAgICcjYmE1NWQzJzogJ21lZGl1bW9yY2hpZCcsXG4gICAgJyM5MzcwZGInOiAnbWVkaXVtcHVycGxlJyxcbiAgICAnIzNjYjM3MSc6ICdtZWRpdW1zZWFncmVlbicsXG4gICAgJyM3YjY4ZWUnOiAnbWVkaXVtc2xhdGVibHVlJyxcbiAgICAnIzAwZmE5YSc6ICdtZWRpdW1zcHJpbmdncmVlbicsXG4gICAgJyM0OGQxY2MnOiAnbWVkaXVtdHVycXVvaXNlJyxcbiAgICAnI2M3MTU4NSc6ICdtZWRpdW12aW9sZXRyZWQnLFxuICAgICcjMTkxOTcwJzogJ21pZG5pZ2h0Ymx1ZScsXG4gICAgJyNmNWZmZmEnOiAnbWludGNyZWFtJyxcbiAgICAnI2ZmZTRlMSc6ICdtaXN0eXJvc2UnLFxuICAgICcjZmZlNGI1JzogJ21vY2Nhc2luJyxcbiAgICAnI2ZmZGVhZCc6ICduYXZham93aGl0ZScsXG4gICAgJyMwMDAwODAnOiAnbmF2eScsXG4gICAgJyNmZGY1ZTYnOiAnb2xkbGFjZScsXG4gICAgJyM4MDgwMDAnOiAnb2xpdmUnLFxuICAgICcjNmI4ZTIzJzogJ29saXZlZHJhYicsXG4gICAgJyNmZmE1MDAnOiAnb3JhbmdlJyxcbiAgICAnI2ZmNDUwMCc6ICdvcmFuZ2VyZWQnLFxuICAgICcjZGE3MGQ2JzogJ29yY2hpZCcsXG4gICAgJyNlZWU4YWEnOiAncGFsZWdvbGRlbnJvZCcsXG4gICAgJyM5OGZiOTgnOiAncGFsZWdyZWVuJyxcbiAgICAnI2FmZWVlZSc6ICdwYWxldHVycXVvaXNlJyxcbiAgICAnI2RiNzA5Myc6ICdwYWxldmlvbGV0cmVkJyxcbiAgICAnI2ZmZWZkNSc6ICdwYXBheWF3aGlwJyxcbiAgICAnI2ZmZGFiOSc6ICdwZWFjaHB1ZmYnLFxuICAgICcjY2Q4NTNmJzogJ3BlcnUnLFxuICAgICcjZmZjMGNiJzogJ3BpbmsnLFxuICAgICcjZGRhMGRkJzogJ3BsdW0nLFxuICAgICcjYjBlMGU2JzogJ3Bvd2RlcmJsdWUnLFxuICAgICcjODAwMDgwJzogJ3B1cnBsZScsXG4gICAgJyM2NjMzOTknOiAncmViZWNjYXB1cnBsZScsXG4gICAgJyNmZjAwMDAnOiAn0JrRgNCw0YHQvdGL0LknLFxuICAgICcjYmM4ZjhmJzogJ3Jvc3licm93bicsXG4gICAgJyM0MTY5ZTEnOiAncm95YWxibHVlJyxcbiAgICAnIzhiNDUxMyc6ICdzYWRkbGVicm93bicsXG4gICAgJyNmYTgwNzInOiAnc2FsbW9uJyxcbiAgICAnI2Y0YTQ2MCc6ICdzYW5keWJyb3duJyxcbiAgICAnIzJlOGI1Nyc6ICdzZWFncmVlbicsXG4gICAgJyNmZmY1ZWUnOiAnc2Vhc2hlbGwnLFxuICAgICcjYTA1MjJkJzogJ3NpZW5uYScsXG4gICAgJyNjMGMwYzAnOiAnc2lsdmVyJyxcbiAgICAnIzg3Y2VlYic6ICdza3libHVlJyxcbiAgICAnIzZhNWFjZCc6ICdzbGF0ZWJsdWUnLFxuICAgICcjNzA4MDkwJzogJ3NsYXRlZ3JheScsXG4gICAgJyNmZmZhZmEnOiAnc25vdycsXG4gICAgJyMwMGZmN2YnOiAnc3ByaW5nZ3JlZW4nLFxuICAgICcjNDY4MmI0JzogJ3N0ZWVsYmx1ZScsXG4gICAgJyNkMmI0OGMnOiAndGFuJyxcbiAgICAnIzAwODA4MCc6ICd0ZWFsJyxcbiAgICAnI2Q4YmZkOCc6ICd0aGlzdGxlJyxcbiAgICAnI2ZmNjM0Nyc6ICd0b21hdG8nLFxuICAgICcjNDBlMGQwJzogJ3R1cnF1b2lzZScsXG4gICAgJyNlZTgyZWUnOiAndmlvbGV0JyxcbiAgICAnI2Y1ZGViMyc6ICd3aGVhdCcsXG4gICAgJyNmZmZmZmYnOiAn0JHQtdC70YvQuScsXG4gICAgJyNmNWY1ZjUnOiAnd2hpdGVzbW9rZScsXG4gICAgJyNmZmZmMDAnOiAn0JbQtdC70YLRi9C5JyxcbiAgICAnIzlhY2QzMic6ICfQr9Cx0LvQvtGH0L3Qvi3Qt9C10LvQtdC90YvQuScsXG4gICAgJyNlNTgwMDAnOiAn0JzQvtGA0LrQvtCy0L3Ri9C5JyxcbiAgICAnI2NjMDAwMCc6ICfQkdC+0YHRgtC+0L3RgdC60LjQuS3QutGA0LDRgdC90YvQuScsXG4gICAgJyMzMzAwMDAnOiAn0JrQvtGA0LjRh9C90LXQstGL0LknLFxuICAgICcjN2Y4MDAwJzogJ9Ce0LvQuNCy0LrQvtCy0YvQuScsXG4gICAgJyM5OTAwMDAnOiAn0KHQsNC90LPRgNC40Y8nLFxuICAgICcjYjI4MDAwJzogJ9Ci0LXQvNC90L4t0LfQvtC70L7RgtC+0LknLFxuICAgICcjNGM4MDAwJzogJ9Cd0LXQttC90L4t0L7Qu9C40LLQutC+0LLRi9C5JyxcbiAgICAnIzY2MDAwMCc6ICfQmtC+0YDQuNGH0L3QtdCy0L4t0LzQsNC70LjQvdC+0LLRi9C5JyxcbiAgICAnIzZjNjAwMCc6ICfQntC70LjQstC60L7QstGL0LknLFxuICAgICcjNmE1NWMzJzogJ9Cf0YPRgNC/0YPRgNC90L4t0YHQuNC90LjQuScsXG4gICAgJyM2N2M4ZjYnOiAn0K/RgNC60L4t0LPQvtC70YPQsdC+0LknLFxuICAgICcjNDkyZjVjJzogJ9CT0LvRg9Cx0L7QutC40Lkt0YTQuNC+0LvQtdGC0L7QstGL0LknLFxuICAgICcjNWNkMWVjJzogJ9CT0L7Qu9GD0LHQvtC5JyxcbiAgICAnIzEzZmY0Mic6ICfQr9GA0LrQvi3Qt9C10LvQtdC90YvQuScsXG4gICAgJyMxZGE0MjYnOiAn0J/QsNGB0YLQtdC70YzQvdC+LdC30LXQu9C10L3Ri9C5JyxcbiAgICAnIzJmZGJjMCc6ICfQkdC40YDRjtC30L7QstGL0LknLFxuICAgICcjMzg2NzQ4JzogJ9Ci0LXQvNC90L4t0LfQtdC70LXQvdGL0LknLFxuICAgICcjNTlhOWMxJzogJ9Ci0LXQvNC90L4t0LPQvtC70YPQsdC+0LknLFxuICAgICcjMTQ2NjY2JzogJ9Ci0LXQvNC90L4t0LHQuNGA0Y7Qt9C+0LLRi9C5JyxcbiAgICAnI2M4MDk5Myc6ICfQpNC40L7Qu9C10YLQvtCy0L4t0LrRgNCw0YHQvdGL0LknLFxuICAgICcjZmEwYmY4JzogJ9Ck0YPQutGB0LjRjycsXG4gICAgJyMxOTAxMzInOiAn0KLQtdC80L3Qvi3RhNC40L7Qu9C10YLQvtCy0YvQuScsXG4gICAgJyMzMjAyNjInOiAn0KLQtdC80L3Qvi3RhNC40L7Qu9C10YLQvtCy0YvQuScsXG4gICAgJyM0YjAzOTcnOiAn0JjQvdC00LjQs9C+JyxcbiAgICAnI2FmMDg2MSc6ICfQoNC+0LfQvtCy0LDRgtC+LdC70LjQu9C+0LLRi9C5JyxcbiAgICAnI2UxMGFjNic6ICfQnNCw0LvQuNC90L7QstGL0LknLFxuICAgICcjOTYwNzJlJzogJ9CR0YPRgNCz0YPQvdC00YHQutC40LknLFxuICAgICcjNjQwNGNhJzogJ9Cf0YPRgNC/0YPRgNC90L4t0YHQuNC90LjQuScsXG4gICAgJyM3ZDA1ZmMnOiAn0KTQuNC+0LvQtdGC0L7QstGL0LknLFxuICAgICcjMzIwMjY1JzogJ9Ci0LXQvNC90YvQuSDQuNC90LTQuNCz0L4nLFxuICAgICcjMCc6ICcjMDAwJyxcbiAgICBvcmFuZ2U6ICfQntGA0LDQvdC20LXQstGL0LknLFxuICAgIHB1cnBsZTogJ9Ck0LjQvtC70LXRgtC+0LLRi9C5JyxcbiAgICAnIzRiZTc0ZCc6ICfQnNCw0LvQsNGF0LjRgtC+0LLRi9C5JyxcbiAgICAnIzY1MzQ2Nic6ICfQn9GD0YDQv9GD0YDQvdGL0LknLFxuICAgICcjMzI5YTMzJzogJ9CX0LXQu9C10L3Ri9C5JyxcbiAgICAnIzE5NGQxYSc6ICfQotC10LzQvdC+LdC30LXQu9C10L3Ri9C5JyxcbiAgICAnI2ZkMDJmZic6ICfQoNC+0LfQvtCy0YvQuScsXG4gICAgJyNiMTFiYjMnOiAn0KTQuNC+0LvQtdGC0L7QstC+LdCx0LDQutC70LDQttCw0L3QvdGL0LknLFxuICAgICcjZTNiNWU2JzogJ9Ch0LLQtdGC0LvQvi3RgNC+0LfQvtCy0YvQuScsXG59O1xuZXhwb3J0cy5hbGxDb2xvcnMgPSBhbGxDb2xvcnM7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zbGlkZXIuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgRGVtb18xID0gcmVxdWlyZShcIi4vRGVtby9EZW1vXCIpO1xucmVxdWlyZShcIi4vaW5kZXguc2Nzc1wiKTtcbnJlcXVpcmUoXCIuLi9zbGlkZXIvc2xpZGVyXCIpO1xudmFyICR3cmFwID0gJCgnLmpzLXRlc3QnKTtcbiR3cmFwLmNvbG9yU2xpZGVyKHtcbiAgICBpc1NjYWxlOiBmYWxzZSxcbiAgICBpc0NoYW5nZUNvbG9yOiBmYWxzZSxcbn0pO1xuLyoqXG4gKiDQlNC70Y8g0LLRi9Cy0L7QtNCwINCyINGB0LLQvtC4INC40L3Qv9GD0YLRi1xuICog0KHQvtC30LTQsNGC0Ywg0LjQvdC/0YPRgtGLLCDQuCDQstGL0LfQstCw0YLRjCDQvNC10YLQvtC0IGdldFZhbHVlXG4gICDRgSDRhNGD0L3QutGG0LjQtdC5INC4INCy0YvQstC+0LTQuNGC0Ywg0LvRjtCx0L7QuSDQv9Cw0YDQsNC80LXRgtGAINC40LcgMjcg0L7QsdGA0LDRgtC40LLRiNC40YHRjCDRh9C10YDQtdC3INGC0L7Rh9C60YMgdmFsdWVzLmZyb21cbiogKi9cbiR3cmFwLmNvbG9yU2xpZGVyKCdnZXRWYWx1ZScsIGZ1bmN0aW9uICh2YWx1ZXMpIHtcbiAgICAkKCcuanMtY3VzdG9tLWZyb20nKS52YWwodmFsdWVzLmZyb20pO1xuICAgICQoJy5qcy1jdXN0b20tdG8nKS52YWwodmFsdWVzLnRvKTtcbn0pO1xuLyoqXG4gKiDQlNC70Y8g0LjQt9C80LXQvdC10L3QuNGPINC90LAgY3VzdG9tLWJ1dHRvblxuICog0JLRi9C30YvQsNGC0Ywg0LzQtdGC0L7QtCBjaGFuZ2Ug0YEg0L3QtdC+0LHRhdC+0LTQuNC80YvQvNC4INC/0LDRgNCw0LzQtdGC0YDQsNC80LhcbiogKi9cbiQoJy5qcy1jdXN0b20tYnRuJykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICR3cmFwLmNvbG9yU2xpZGVyKCdjaGFuZ2UnLCB7XG4gICAgICAgIGNvbG9yOiAncmVkJywgZ3JhZGllbnQ6ICdibHVlJywgbWF4OiAxMDAwLCBmcm9tOiAyMDAsIHRvOiA4MDAsIG9ubHlEaXZpc2lvbnM6IHRydWUsIGZyb21UbzogdHJ1ZSxcbiAgICB9KTtcbn0pO1xuLy8gICAgICAqKiogINCU0Y3QvNC+INGB0YLQsNC90LjRhtCwICAgKioqXG52YXIgZmlyc3RPcHRpb25zID0ge1xuICAgIG9yaWVudGF0aW9uOiAndmVydGljYWwnLFxuICAgIHR5cGU6ICdkb3VibGUnLFxuICAgIGlzQ29sb3JPdXQ6IHRydWUsXG4gICAgaXNTY2FsZTogZmFsc2UsXG59O1xudmFyIHR3b09wdGlvbnMgPSB7XG4gICAgZ3JhZGllbnQ6ICdyZWQnLFxuICAgIGNvbG9yOiAnIzY2OThkYicsXG4gICAgbWF4OiAxNTAwMCxcbiAgICBmcm9tOiA1MDAwLFxuICAgIHRvOiAxMDAwMCxcbiAgICBmcm9tVG86IHRydWUsXG4gICAgc2VwYXJhdGU6ICcuJyxcbiAgICBvbmx5RGl2aXNpb25zOiBmYWxzZSxcbn07XG52YXIgdGhyZWVPcHRpb25zID0ge1xuICAgIG9yaWVudGF0aW9uOiAndmVydGljYWwnLFxuICAgIGdyYWRpZW50OiAnYmx1ZScsXG4gICAgY29sb3I6ICd5ZWxsb3cnLFxuICAgIHBvc3RmaXg6ICcnLFxuICAgIHNjYWxlUG9zdGZpeDogJycsXG4gICAgbWluOiAtNTAwMCxcbiAgICBtYXg6IC0xMDAsXG4gICAgc3RlcDogMixcbiAgICBmcm9tOiAtNDAwMCxcbiAgICB0bzogLTcwMCxcbiAgICBjaGFuZ2VDb2xvcjogZmFsc2UsXG4gICAgc2VwYXJhdGU6ICcsJyxcbiAgICBvbmx5RGl2aXNpb25zOiBmYWxzZSxcbn07XG52YXIgZm91ck9wdGlvbnMgPSB7XG4gICAgaXNHcmFkaWVudDogZmFsc2UsXG4gICAgY29sb3I6ICdibGFjaycsXG4gICAgbWF4OiAxNTAwLFxuICAgIGZyb206IDUwMCxcbiAgICB0bzogMTAwMCxcbiAgICBmcm9tVG86IHRydWUsXG4gICAgc2VwYXJhdGU6ICcgJyxcbiAgICBwb3N0Zml4OiAnJCcsXG4gICAgc2NhbGVQb3N0Zml4OiAnJCcsXG4gICAgdHJhY2tQb3N0Zml4OiAnJCcsXG4gICAgaXNQcmVmaXg6IHRydWUsXG4gICAgaXNDb2xvcjogZmFsc2UsXG4gICAgb25seURpdmlzaW9uczogdHJ1ZSxcbn07XG52YXIgZml2ZU9wdGlvbnMgPSB7XG4gICAgb3JpZW50YXRpb246ICdob3Jpem9udGFsJyxcbiAgICB0eXBlOiAnc2luZ2xlJyxcbiAgICBpc1NjYWxlOiBmYWxzZSxcbiAgICBpc0xhYmVsOiBmYWxzZSxcbiAgICBjb2xvcjogJ2dyZWVuJyxcbn07XG52YXIgc2l4T3B0aW9ucyA9IHtcbiAgICBncmFkaWVudDogJ2JsYWNrJyxcbiAgICBjb2xvcjogJyM5MDAyMDInLFxuICAgIG1heDogMTUwMC41LFxuICAgIGZyb206IDUwMC4yLFxuICAgIHRvOiAxMDAwLjMsXG4gICAgc3RlcDogMy43LFxuICAgIG1pbjogLTEwMC4yLFxuICAgIHNlcGFyYXRlOiAnLicsXG4gICAgcG9zdGZpeDogJ+KCrCcsXG4gICAgc2NhbGVQb3N0Zml4OiAn4oKsJyxcbiAgICB0cmFja1Bvc3RmaXg6ICfigqwnLFxuICAgIGlzQ29sb3I6IGZhbHNlLFxuICAgIG9ubHlEaXZpc2lvbnM6IGZhbHNlLFxufTtcbnZhciBvcHRpb25zID0gW2ZpcnN0T3B0aW9ucywgdHdvT3B0aW9ucywgdGhyZWVPcHRpb25zLCBmb3VyT3B0aW9ucywgZml2ZU9wdGlvbnMsIHNpeE9wdGlvbnNdO1xudmFyICR3cmFwcGVycyA9ICQoJy5qcy1zbGlkZXInKTtcbiR3cmFwcGVycy5lYWNoKGZ1bmN0aW9uIChpbmRleCwgZWxlbWVudCkge1xuICAgIG5ldyBEZW1vXzEuRGVtbygkKGVsZW1lbnQpLmNvbG9yU2xpZGVyKG9wdGlvbnNbaW5kZXhdKS5jb2xvclNsaWRlcignY2hhbmdlJykpO1xufSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlbW8gPSB2b2lkIDA7XG52YXIgaW50ZXJmYWNlc18xID0gcmVxdWlyZShcIi4uLy4uL3NsaWRlci9pbnRlcmZhY2VzL2ludGVyZmFjZXNcIik7XG52YXIgZGVtb1RlbXBsYXRlXzEgPSByZXF1aXJlKFwiLi9kZW1vVGVtcGxhdGVcIik7XG52YXIgRGVtbyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEZW1vKHNsaWRlcikge1xuICAgICAgICB0aGlzLnNsaWRlciA9IHNsaWRlcjtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHNsaWRlci5nZXRPcHRpb25zKCk7XG4gICAgICAgIHRoaXMuZGVtb1Rvb2xzID0gdGhpcy5jcmVhdGVUb29scygpO1xuICAgICAgICB0aGlzLmluaXQoKTtcbiAgICB9XG4gICAgRGVtby5wcm90b3R5cGUudXBEYXRhID0gZnVuY3Rpb24gKG5ld1NldHRpbmcpIHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCB0aGlzLnN0YXRlKSwgbmV3U2V0dGluZyk7XG4gICAgICAgIHRoaXMuaW5pdFRvb2xzKCk7XG4gICAgfTtcbiAgICBEZW1vLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmNyZWF0ZVNldHRpbmdzKCk7XG4gICAgICAgIHRoaXMuaW5pdFRvb2xzKCk7XG4gICAgICAgIHRoaXMudXBEYXRhID0gdGhpcy51cERhdGEuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5zbGlkZXIuZW1pdHRlci5zdWJzY3JpYmUoJ25ld0RhdGEnLCB0aGlzLnVwRGF0YSk7XG4gICAgfTtcbiAgICBEZW1vLnByb3RvdHlwZS5jcmVhdGVUb29scyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRlbW9Ub29scyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBkZW1vVG9vbHMuY2xhc3NOYW1lID0gJ3BhbmVsX190b29scyc7XG4gICAgICAgIHJldHVybiBkZW1vVG9vbHM7XG4gICAgfTtcbiAgICBEZW1vLnByb3RvdHlwZS5jcmVhdGVTZXR0aW5ncyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5zbGlkZXIuZWxlbWVudC5hZnRlcih0aGlzLmRlbW9Ub29scyk7XG4gICAgICAgIHRoaXMuZGVtb1Rvb2xzLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgZGVtb1RlbXBsYXRlXzEuZGVtb1RlbXBsYXRlKTtcbiAgICB9O1xuICAgIERlbW8ucHJvdG90eXBlLmluaXRUb29scyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIF9hID0gdGhpcy5zdGF0ZSwgb3JpZW50YXRpb24gPSBfYS5vcmllbnRhdGlvbiwgaXNTY2FsZSA9IF9hLmlzU2NhbGUsIHR5cGUgPSBfYS50eXBlLCBpc0xhYmVsID0gX2EuaXNMYWJlbCwgZnJvbSA9IF9hLmZyb20sIHRvID0gX2EudG8sIG1pbiA9IF9hLm1pbiwgbWF4ID0gX2EubWF4LCBwb3N0Zml4ID0gX2EucG9zdGZpeCwgc3RlcCA9IF9hLnN0ZXAsIGNvbG9yID0gX2EuY29sb3IsIGlzU2NhbGVQb3N0Zml4ID0gX2EuaXNTY2FsZVBvc3RmaXgsIHNjYWxlUG9zdGZpeCA9IF9hLnNjYWxlUG9zdGZpeCwgbWluTWF4ID0gX2EubWluTWF4LCBmcm9tVG8gPSBfYS5mcm9tVG8sIGlzVHJhY2tQb3N0Zml4ID0gX2EuaXNUcmFja1Bvc3RmaXgsIHRyYWNrUG9zdGZpeCA9IF9hLnRyYWNrUG9zdGZpeCwgaXNDb2xvciA9IF9hLmlzQ29sb3IsIGdyYWRpZW50ID0gX2EuZ3JhZGllbnQsIGlzQ29sb3JPdXQgPSBfYS5pc0NvbG9yT3V0LCBjaGFuZ2VDb2xvciA9IF9hLmNoYW5nZUNvbG9yLCBpc0dyYWRpZW50ID0gX2EuaXNHcmFkaWVudCwgZ3JhZGllbnREZWcgPSBfYS5ncmFkaWVudERlZywgb25seURpdmlzaW9ucyA9IF9hLm9ubHlEaXZpc2lvbnMsIGlzUG9zdGZpeCA9IF9hLmlzUG9zdGZpeCwgaXNDaGFuZ2VDb2xvciA9IF9hLmlzQ2hhbmdlQ29sb3IsIHNlcGFyYXRlID0gX2Euc2VwYXJhdGUsIGlzU2VwYXJhdGUgPSBfYS5pc1NlcGFyYXRlLCBpc1ByZWZpeCA9IF9hLmlzUHJlZml4O1xuICAgICAgICB2YXIgYnRuU2NhbGUgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtYnRuLXNjYWxlJyk7XG4gICAgICAgIHZhciBidG5WaWV3ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWJ0bi12aWV3Jyk7XG4gICAgICAgIHZhciBidG5Qb3N0Zml4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWJ0bi1wb3N0Zml4Jyk7XG4gICAgICAgIHZhciBidG5Db2xvciA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1idG4tY29sb3InKTtcbiAgICAgICAgdmFyIG1lbnVTY2FsZSA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1tZW51LXNjYWxlJyk7XG4gICAgICAgIHZhciBtZW51VmlldyA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1tZW51LXZpZXcnKTtcbiAgICAgICAgdmFyIG1lbnVQb3N0Zml4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLW1lbnUtcG9zdGZpeCcpO1xuICAgICAgICB2YXIgbWVudUNvbG9yID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWNvbG9yLXNldHRpbmcnKTtcbiAgICAgICAgdmFyIGlzT3JpZW50YXRpb24gPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtb3JpZW50YXRpb24nKTtcbiAgICAgICAgdmFyIGNoYW5nZVNjYWxlID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzU2NhbGUnKTtcbiAgICAgICAgdmFyIGlucHV0Q29sb3JPdXQgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtaXNDb2xvck91dCcpO1xuICAgICAgICB2YXIgbGFiZWwgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtaXNMYWJlbCcpO1xuICAgICAgICB2YXIgaXNEb3VibGUgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtaXNEb3VibGUnKTtcbiAgICAgICAgdmFyIGlucHV0RnJvbSA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1mcm9tJyk7XG4gICAgICAgIHZhciBpbnB1dFRvID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLXRvJyk7XG4gICAgICAgIHZhciBpbnB1dE1pbiA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1taW4nKTtcbiAgICAgICAgdmFyIGlucHV0TWF4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLW1heCcpO1xuICAgICAgICB2YXIgaW5wdXRNYXJrZXIgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtbWFya2VyJyk7XG4gICAgICAgIHZhciBpbnB1dFN0ZXAgPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtc3RlcCcpO1xuICAgICAgICB2YXIgaW5wdXRTZXBhcmF0ZSA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1zZXBhcmF0ZScpO1xuICAgICAgICB2YXIgaW5wdXRDb2xvciA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1jb2xvcicpO1xuICAgICAgICB2YXIgaW5wdXRJc1Bvc3RmaXggPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtaXNQb3N0Zml4Jyk7XG4gICAgICAgIHZhciBpbnB1dElzUHJlZml4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzUHJlZml4LWFsbCcpO1xuICAgICAgICB2YXIgaW5wdXRTY2FsZVBvc3RmaXggPSB0aGlzLmRlbW9Ub29scy5xdWVyeVNlbGVjdG9yKCcuanMtc2NhbGUtcG9zdGZpeCcpO1xuICAgICAgICB2YXIgaW5wdXRJc0NoYW5nZUNvbG9yID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzQ2hhbmdlQ29sb3InKTtcbiAgICAgICAgdmFyIGlucHV0TWluTWF4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLW1pbk1heCcpO1xuICAgICAgICB2YXIgaW5wdXRJc1NlcGFyYXRlID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzU2NhbGVEZWwnKTtcbiAgICAgICAgdmFyIGlucHV0RnJvbVRvID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWZyb21UbycpO1xuICAgICAgICB2YXIgaW5wdXREaXZpc2lvbiA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1kaXZpc2lvbicpO1xuICAgICAgICB2YXIgaW5wdXRJc1RyYWNrUG9zdGZpeCA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1pc1RyYWNrUG9zdGZpeCcpO1xuICAgICAgICB2YXIgaW5wdXRJc1Rvb2xQb3N0Zml4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWlzUG9zdGZpeFRvb2wnKTtcbiAgICAgICAgdmFyIGlucHV0VHJhY2tQb3N0Zml4ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLXRyYWNrLXBvc3RmaXgnKTtcbiAgICAgICAgdmFyIGlucHV0SXNDb2xvciA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1pc0NvbG9yJyk7XG4gICAgICAgIHZhciBpbnB1dENoYW5nZUNvbG9yID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWNoYW5nZUNvbG9yJyk7XG4gICAgICAgIHZhciBpbnB1dEdyYWRpZW50ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWdyYWRpZW50Jyk7XG4gICAgICAgIHZhciBpbnB1dEdyYWRpZW50T3V0ID0gdGhpcy5kZW1vVG9vbHMucXVlcnlTZWxlY3RvcignLmpzLWdyYWRpZW50LW91dCcpO1xuICAgICAgICB2YXIgaW5wdXRHcmFkaWVudERlZyA9IHRoaXMuZGVtb1Rvb2xzLnF1ZXJ5U2VsZWN0b3IoJy5qcy1ncmFkaWVudC1kZWcnKTtcbiAgICAgICAgYnRuVmlldy5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbWVudVZpZXcuY2xhc3NMaXN0LnRvZ2dsZSgncGFuZWxfX2Nsb3NlJyk7XG4gICAgICAgIH07XG4gICAgICAgIGJ0blNjYWxlLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBtZW51U2NhbGUuY2xhc3NMaXN0LnRvZ2dsZSgncGFuZWxfX2Nsb3NlJyk7XG4gICAgICAgIH07XG4gICAgICAgIGJ0bkNvbG9yLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBtZW51Q29sb3IuY2xhc3NMaXN0LnRvZ2dsZSgncGFuZWxfX2Nsb3NlJyk7XG4gICAgICAgIH07XG4gICAgICAgIGJ0blBvc3RmaXgub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG1lbnVQb3N0Zml4LmNsYXNzTGlzdC50b2dnbGUoJ3BhbmVsX19jbG9zZScpO1xuICAgICAgICB9O1xuICAgICAgICAvKiogICAgINGH0LXQutCx0L7QutGB0YsgICAgKiAqL1xuICAgICAgICBpc09yaWVudGF0aW9uLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMV0pIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IG9yaWVudGF0aW9uOiAndmVydGljYWwnIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9yaWVudGF0aW9uID09PSBpbnRlcmZhY2VzXzEuT3JpZW50YXRpb25bMF0pIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IG9yaWVudGF0aW9uOiAnaG9yaXpvbnRhbCcgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0SXNQb3N0Zml4Lm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGlzU2NhbGVQb3N0Zml4ID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1NjYWxlUG9zdGZpeDogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNTY2FsZVBvc3RmaXggPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1NjYWxlUG9zdGZpeDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRJc1Rvb2xQb3N0Zml4Lm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGlzUG9zdGZpeCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNQb3N0Zml4OiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1Bvc3RmaXggPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1Bvc3RmaXg6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0SXNQcmVmaXgub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaXNQcmVmaXggPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzUHJlZml4OiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1ByZWZpeCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzUHJlZml4OiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dEdyYWRpZW50Lm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGlzR3JhZGllbnQgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzR3JhZGllbnQ6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzR3JhZGllbnQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0dyYWRpZW50OiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dElzQ2hhbmdlQ29sb3Iub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaXNDaGFuZ2VDb2xvciA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNDaGFuZ2VDb2xvcjogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNDaGFuZ2VDb2xvciA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzQ2hhbmdlQ29sb3I6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0SXNTZXBhcmF0ZS5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChpc1NlcGFyYXRlID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1NlcGFyYXRlOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1NlcGFyYXRlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNTZXBhcmF0ZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRDb2xvck91dC5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChpc0NvbG9yT3V0ID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0NvbG9yT3V0OiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc0NvbG9yT3V0ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNDb2xvck91dDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgY2hhbmdlU2NhbGUub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaXNTY2FsZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzU2NhbGU6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzU2NhbGU6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBsYWJlbC5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChpc0xhYmVsID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0xhYmVsOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc0xhYmVsID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNMYWJlbDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaXNEb3VibGUub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gaW50ZXJmYWNlc18xLlNsaWRlclR5cGVbMV0pIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHR5cGU6ICdkb3VibGUnIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyB0eXBlOiAnc2luZ2xlJyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRNaW5NYXgub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobWluTWF4ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgbWluTWF4OiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBtaW5NYXg6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dEZyb21Uby5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChmcm9tVG8gPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBmcm9tVG86IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGZyb21UbzogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0RGl2aXNpb24ub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAob25seURpdmlzaW9ucyA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IG9ubHlEaXZpc2lvbnM6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IG9ubHlEaXZpc2lvbnM6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dElzVHJhY2tQb3N0Zml4Lm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGlzVHJhY2tQb3N0Zml4ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNUcmFja1Bvc3RmaXg6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzVHJhY2tQb3N0Zml4OiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRJc0NvbG9yLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGlzQ29sb3IgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzQ29sb3I6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc0NvbG9yOiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpbnB1dENoYW5nZUNvbG9yLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGNoYW5nZUNvbG9yID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBjaGFuZ2VDb2xvcjogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGNoYW5nZUNvbG9yOiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvLyogKiAgICAg0LjQvdC/0YPRgtGLICAgICoqL1xuICAgICAgICBpbnB1dE1hcmtlci52YWx1ZSA9IHBvc3RmaXg7XG4gICAgICAgIGlucHV0TWFya2VyLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gaW5wdXRNYXJrZXIudmFsdWU7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHBvc3RmaXg6IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbnB1dEZyb20udmFsdWUgPSBTdHJpbmcoZnJvbSk7XG4gICAgICAgIGlucHV0RnJvbS5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IE51bWJlcihpbnB1dEZyb20udmFsdWUpO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBmcm9tOiB2YWx1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRUby52YWx1ZSA9IFN0cmluZyh0byk7XG4gICAgICAgIGlucHV0VG8ub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBOdW1iZXIoaW5wdXRUby52YWx1ZSk7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHRvOiB2YWx1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRNaW4udmFsdWUgPSBTdHJpbmcobWluKTtcbiAgICAgICAgaW5wdXRNaW4ub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBOdW1iZXIoaW5wdXRNaW4udmFsdWUpO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBtaW46IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbnB1dE1heC52YWx1ZSA9IFN0cmluZyhtYXgpO1xuICAgICAgICBpbnB1dE1heC5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IE51bWJlcihpbnB1dE1heC52YWx1ZSk7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IG1heDogdmFsdWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0U3RlcC52YWx1ZSA9IFN0cmluZyhzdGVwKTtcbiAgICAgICAgaW5wdXRTdGVwLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gTnVtYmVyKGlucHV0U3RlcC52YWx1ZSk7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHN0ZXA6IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbnB1dENvbG9yLnZhbHVlID0gU3RyaW5nKGNvbG9yKTtcbiAgICAgICAgaW5wdXRDb2xvci5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGlucHV0Q29sb3IudmFsdWU7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGNvbG9yOiB2YWx1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaW5wdXRHcmFkaWVudE91dC52YWx1ZSA9IFN0cmluZyhncmFkaWVudCk7XG4gICAgICAgIGlucHV0R3JhZGllbnRPdXQub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBpbnB1dEdyYWRpZW50T3V0LnZhbHVlO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBncmFkaWVudDogdmFsdWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0R3JhZGllbnREZWcudmFsdWUgPSBTdHJpbmcoZ3JhZGllbnREZWcpO1xuICAgICAgICBpbnB1dEdyYWRpZW50RGVnLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gTnVtYmVyKGlucHV0R3JhZGllbnREZWcudmFsdWUpO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBncmFkaWVudERlZzogdmFsdWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlucHV0U2NhbGVQb3N0Zml4LnZhbHVlID0gc2NhbGVQb3N0Zml4O1xuICAgICAgICBpbnB1dFNjYWxlUG9zdGZpeC5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGlucHV0U2NhbGVQb3N0Zml4LnZhbHVlO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBzY2FsZVBvc3RmaXg6IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbnB1dFRyYWNrUG9zdGZpeC52YWx1ZSA9IHRyYWNrUG9zdGZpeDtcbiAgICAgICAgaW5wdXRUcmFja1Bvc3RmaXgub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBpbnB1dFRyYWNrUG9zdGZpeC52YWx1ZTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgdHJhY2tQb3N0Zml4OiB2YWx1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8g0LLQsNC70LjQtNCw0YbQuNGPINCy0LLQvtC00LBcbiAgICAgICAgaWYgKHNlcGFyYXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlucHV0U2VwYXJhdGUudmFsdWUgPSAnICc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2VwYXJhdGUgPT09ICcgJykge1xuICAgICAgICAgICAgaW5wdXRTZXBhcmF0ZS52YWx1ZSA9ICcgJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlucHV0U2VwYXJhdGUudmFsdWUgPSBzZXBhcmF0ZTtcbiAgICAgICAgfVxuICAgICAgICBpbnB1dFNlcGFyYXRlLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gaW5wdXRTZXBhcmF0ZS52YWx1ZTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gJy4nICYmIHZhbHVlICE9PSAnLCcpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9ICcgJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgc2VwYXJhdGU6IHZhbHVlIH0pO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgRGVtby5wcm90b3R5cGUuc2V0U3RhdGUgPSBmdW5jdGlvbiAobmV3T3B0aW9ucykge1xuICAgICAgICB0aGlzLnN0YXRlID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHRoaXMuc3RhdGUpLCBuZXdPcHRpb25zKTtcbiAgICAgICAgdGhpcy5zbGlkZXIuc2V0T3B0aW9ucyh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5zbGlkZXIudXBEYXRhVmlldygpO1xuICAgIH07XG4gICAgcmV0dXJuIERlbW87XG59KCkpO1xuZXhwb3J0cy5EZW1vID0gRGVtbztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZW1vVGVtcGxhdGUgPSB2b2lkIDA7XG52YXIgZGVtb1RlbXBsYXRlID0gXCJcXG5cXG5cXG48aDQgIGNsYXNzPVxcXCJwYW5lbF9fdGl0bGVcXFwiPlxcdTA0MUZcXHUwNDMwXFx1MDQzRFxcdTA0MzVcXHUwNDNCXFx1MDQ0QyBcXHUwNDQzXFx1MDQzRlxcdTA0NDBcXHUwNDMwXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRGPC9oND5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+Vi9IIFxcdTA0MTJcXHUwNDM4XFx1MDQzNFxcbjxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgY2xhc3M9XFxcInBhbmVsX19jaGVja2JveCBwYW5lbF9faW5wdXRzIGpzLW9yaWVudGF0aW9uXFxcIiBuYW1lPVxcXCJvcmllbnRhdGlvblxcXCIgLz5cXG48L2xhYmVsPlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDFGXFx1MDQzRVxcdTA0M0FcXHUwNDMwXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQ0Qy9cXHUwNDIxXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgVG9vbHRpcFxcbjxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgY2xhc3M9XFxcInBhbmVsX19jaGVja2JveCBwYW5lbF9faW5wdXRzIGpzLWlzTGFiZWxcXFwiIG5hbWU9XFxcImxhYmVsXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+UmFuZ2UvU2luZ2xlXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNEb3VibGVcXFwiIG5hbWU9XFxcImRvdWJsZVxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuXFxuPGJ1dHRvbiBjbGFzcz1cXFwicGFuZWxfX2J1dHRvbiBqcy1idG4tdmlld1xcXCI+XFx1MDQxRFxcdTA0MzBcXHUwNDQxXFx1MDQ0MlxcdTA0NDBcXHUwNDNFXFx1MDQzOVxcdTA0M0FcXHUwNDM4IFxcdTA0M0VcXHUwNDQyXFx1MDQzRVxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0MzZcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRGPC9idXR0b24+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX21lbnUganMtbWVudS12aWV3XFxcIj5cXG5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQxRlxcdTA0M0VcXHUwNDNBXFx1MDQzMFxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMgbWluL21heFxcbjxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgY2xhc3M9XFxcInBhbmVsX19jaGVja2JveCBwYW5lbF9faW5wdXRzIGpzLW1pbk1heFxcXCIgbmFtZT1cXFwibWluTWF4XFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQxRlxcdTA0M0VcXHUwNDNBXFx1MDQzMFxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMgZnJvbS90b1xcbjxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgY2xhc3M9XFxcInBhbmVsX19jaGVja2JveCBwYW5lbF9faW5wdXRzIGpzLWZyb21Ub1xcXCIgbmFtZT1cXFwiZnJvbVRvXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQxNFxcdTA0M0VcXHUwNDMxXFx1MDQzMFxcdTA0MzJcXHUwNDM4XFx1MDQ0MlxcdTA0NEMvXFx1MDQ0M1xcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0NDBcXHUwNDMwXFx1MDQzN1xcdTA0MzRcXHUwNDM1XFx1MDQzQlxcdTA0MzhcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDRDXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNTY2FsZURlbFxcXCIgbmFtZT1cXFwic2NhbGVcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzXFxcIj5cXHUwNDE0XFx1MDQzNVxcdTA0M0JcXHUwNDM4XFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcbjxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwicGFuZWxfX2lucHV0cyBqcy1zZXBhcmF0ZVxcXCIgbmFtZT1cXFwic2VwYXJhdGVcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDEyXFx1MDQ0QlxcdTA0MzJcXHUwNDNFXFx1MDQzNFxcdTA0MzhcXHUwNDQyXFx1MDQ0QyBcXHUwNDQ2XFx1MDQzMlxcdTA0MzVcXHUwNDQyXFx1MDQzMC9cXHUwNDM3XFx1MDQzRFxcdTA0MzBcXHUwNDQ3XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0RlxcbjxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgY2xhc3M9XFxcInBhbmVsX19jaGVja2JveCBwYW5lbF9faW5wdXRzIGpzLWlzQ29sb3JPdXRcXFwiIG5hbWU9XFxcImNvbG9yXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG5cXG5cXG5cXG48YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcInBhbmVsX19idXR0b24ganMtYnRuLXNjYWxlXFxcIj5cXHUwNDIzXFx1MDQzRlxcdTA0NDBcXHUwNDMwXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IFxcdTA0NDhcXHUwNDNBXFx1MDQzMFxcdTA0M0JcXHUwNDNFXFx1MDQzOTwvYnV0dG9uPlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19tZW51IGpzLW1lbnUtc2NhbGVcXFwiPlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDI4XFx1MDQzQVxcdTA0MzBcXHUwNDNCXFx1MDQzMCBcXHUwNDQxIFxcdTA0MzRcXHUwNDM1XFx1MDQzQlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEZcXHUwNDNDXFx1MDQzOC9cXHUwNDM3XFx1MDQzRFxcdTA0MzBcXHUwNDQ3XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0RlxcdTA0M0NcXHUwNDM4XFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtZGl2aXNpb25cXFwiIG5hbWU9XFxcImRpdmlzaW9uXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQxRlxcdTA0M0VcXHUwNDNBXFx1MDQzMFxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMvXFx1MDQyMVxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDIFxcdTA0MjhcXHUwNDNBXFx1MDQzMFxcdTA0M0JcXHUwNDQzXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNTY2FsZVxcXCIgbmFtZT1cXFwic2NhbGVcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjwvZGl2PlxcbjwvZGl2PlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzXFxcIj5NYXhcXG48aW5wdXQgdHlwZT1cXFwibnVtYmVyXFxcIiBjbGFzcz1cXFwicGFuZWxfX2lucHV0cyBqcy1tYXhcXFwiIG5hbWU9XFxcIm1heFxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPk1pblxcbjxpbnB1dCB0eXBlPVxcXCJudW1iZXJcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLW1pblxcXCIgbmFtZT1cXFwibWluXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVsc1xcXCI+RnJvbVxcbjxpbnB1dCB0eXBlPVxcXCJudW1iZXJcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLWZyb21cXFwiIG5hbWU9XFxcImZyb21cXFwiIC8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVsc1xcXCI+VG9cXG48aW5wdXQgdHlwZT1cXFwibnVtYmVyXFxcIiBjbGFzcz1cXFwicGFuZWxfX2lucHV0cyBqcy10b1xcXCIgbmFtZT1cXFwidG9cXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzXFxcIj5cXHUwNDI4XFx1MDQzMFxcdTA0MzNcXG48aW5wdXQgdHlwZT1cXFwibnVtYmVyXFxcIiBjbGFzcz1cXFwicGFuZWxfX2lucHV0cyBqcy1zdGVwXFxcIiBuYW1lPVxcXCJzdGVwXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48L2Rpdj5cXG5cXG5cXG48YnV0dG9uIGNsYXNzPVxcXCJwYW5lbF9fYnV0dG9uIGpzLWJ0bi1jb2xvclxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIj5cXHUwNDFEXFx1MDQzMFxcdTA0NDFcXHUwNDQyXFx1MDQ0MFxcdTA0M0VcXHUwNDM5XFx1MDQzQVxcdTA0MzggXFx1MDQ0NlxcdTA0MzJcXHUwNDM1XFx1MDQ0MlxcdTA0MzA8L2J1dHRvbj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9fbWVudSBqcy1jb2xvci1zZXR0aW5nXFxcIj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVscyBwYW5lbF9fY2hlY2tib3hlc1xcXCI+XFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQzQi9cXHUwNDEyXFx1MDQzQVxcdTA0M0IgXFx1MDQzOFxcdTA0MzdcXHUwNDNDXFx1MDQzNVxcdTA0M0RcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IFxcdTA0NDZcXHUwNDMyXFx1MDQzNVxcdTA0NDJcXHUwNDMwXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtaXNDb2xvclxcXCIgbmFtZT1cXFwiaXNDb2xvclxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXNcXFwiPlxcdTA0MThcXHUwNDQxXFx1MDQzRlxcdTA0M0VcXHUwNDNCXFx1MDQ0Q1xcdTA0MzdcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDQyXFx1MDQ0QyBcXHUwNDQyXFx1MDQzRVxcdTA0M0JcXHUwNDRDXFx1MDQzQVxcdTA0M0UgY3NzL1xcdTA0M0ZcXHUwNDM1XFx1MDQ0MFxcdTA0MzVcXHUwNDNDXFx1MDQzNVxcdTA0M0RcXHUwNDNEXFx1MDQzRVxcdTA0MzkgXFx1MDQ0NlxcdTA0MzJcXHUwNDM1XFx1MDQ0MlxcbjxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgY2xhc3M9XFxcInBhbmVsX19jaGVja2JveCBwYW5lbF9faW5wdXRzIGpzLWlzQ2hhbmdlQ29sb3JcXFwiIG5hbWU9XFxcImlzQ29sb3JcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDIxXFx1MDQzQ1xcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NDJcXHUwNDRDIFxcdTA0M0VcXHUwNDQyXFx1MDQ0MlxcdTA0MzVcXHUwNDNEXFx1MDQzRVxcdTA0M0FcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1jaGFuZ2VDb2xvclxcXCIgbmFtZT1cXFwiaXNDb2xvclxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXNcXFwiPlxcdTA0MTNcXHUwNDQwXFx1MDQzMFxcdTA0MzRcXHUwNDM4XFx1MDQzNVxcdTA0M0RcXHUwNDQyIFxcdTA0MzJcXHUwNDNBXFx1MDQzQi9cXHUwNDNFXFx1MDQ0MlxcdTA0M0FcXHUwNDNCXFxuPGlucHV0IHR5cGU9XFxcImNoZWNrYm94XFxcIiBjbGFzcz1cXFwicGFuZWxfX2NoZWNrYm94IHBhbmVsX19pbnB1dHMganMtZ3JhZGllbnRcXFwiIG5hbWU9XFxcImlzQ29sb3JcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzXFxcIj5cXHUwNDI2XFx1MDQzMlxcdTA0MzVcXHUwNDQyXFxuPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLWNvbG9yXFxcIiBuYW1lPVxcXCJjb2xvclxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHNcXFwiPlxcdTA0MTNcXHUwNDQwXFx1MDQzMFxcdTA0MzRcXHUwNDM4XFx1MDQzNVxcdTA0M0RcXHUwNDQyXFxuPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLWdyYWRpZW50LW91dFxcXCIgbmFtZT1cXFwiZ3JhZGllbnRcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzXFxcIj5cXHUwNDIzXFx1MDQzM1xcdTA0M0VcXHUwNDNCIFxcdTA0MzNcXHUwNDQwXFx1MDQzMFxcdTA0MzRcXHUwNDM4XFx1MDQzNVxcdTA0M0RcXHUwNDQyXFx1MDQzMFxcbjxpbnB1dCB0eXBlPVxcXCJudW1iZXJcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLWdyYWRpZW50LWRlZ1xcXCIgbmFtZT1cXFwiZ3JhZGllbnRcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjwvZGl2PlxcblxcblxcbjxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwicGFuZWxfX2J1dHRvbiBqcy1idG4tcG9zdGZpeFxcXCI+UG9zdGZpeC9QcmVmaXg8L2J1dHRvbj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9fbWVudSBqcy1tZW51LXBvc3RmaXhcXFwiPlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXNcXFwiPlxcdTA0MTRcXHUwNDNFXFx1MDQzMVxcdTA0MzBcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDRDL1xcdTA0NDNcXHUwNDMxXFx1MDQ0MFxcdTA0MzBcXHUwNDQyXFx1MDQ0QyBcXHUwNDFGXFx1MDQ0MFxcdTA0MzVcXHUwNDQ0XFx1MDQzOFxcdTA0M0FcXHUwNDQxIHRvb2x0aXBcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1pc1ByZWZpeC1hbGxcXFwiIG5hbWU9XFxcImlzUHJlZml4XFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXMganMtbGFiZWwtcG9zdGZpeFxcXCI+XFx1MDQxRlxcdTA0M0VcXHUwNDNBXFx1MDQzMFxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMvXFx1MDQyMVxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDIFByZS9Qb3N0Zml4IHRvb2x0aXBcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1pc1Bvc3RmaXhUb29sXFxcIiBuYW1lPVxcXCJpc1ByZWZpeFxcXCIvPlxcbjwvbGFiZWw+XFxuPC9kaXY+XFxuPGRpdiBjbGFzcz1cXFwicGFuZWxfX2l0ZW1zXFxcIj5cXG5cXG48bGFiZWwgY2xhc3M9XFxcInBhbmVsX19sYWJlbHMgcGFuZWxfX2NoZWNrYm94ZXNcXFwiPlxcdTA0MUZcXHUwNDNFXFx1MDQzQVxcdTA0MzBcXHUwNDM3XFx1MDQzMFxcdTA0NDJcXHUwNDRDL1xcdTA0MjFcXHUwNDNBXFx1MDQ0MFxcdTA0NEJcXHUwNDQyXFx1MDQ0QyBQcmUvUG9zdGZpeCBcXHUwNDQ4XFx1MDQzQVxcdTA0MzBcXHUwNDNCXFx1MDQ0QlxcbjxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgY2xhc3M9XFxcInBhbmVsX19jaGVja2JveCBwYW5lbF9faW5wdXRzIGpzLWlzUG9zdGZpeFxcXCIgbmFtZT1cXFwiaXNQcmVmaXhcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzIHBhbmVsX19jaGVja2JveGVzXFxcIj5cXHUwNDFGXFx1MDQzRVxcdTA0M0FcXHUwNDMwXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQ0Qy9cXHUwNDIxXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgUHJlL1Bvc3RmaXggdHJhY2tcXG48aW5wdXQgdHlwZT1cXFwiY2hlY2tib3hcXFwiIGNsYXNzPVxcXCJwYW5lbF9fY2hlY2tib3ggcGFuZWxfX2lucHV0cyBqcy1pc1RyYWNrUG9zdGZpeFxcXCIgbmFtZT1cXFwiaXNQcmVmaXhcXFwiLz5cXG48L2xhYmVsPlxcbjwvZGl2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsX19pdGVtc1xcXCI+XFxuXFxuPGxhYmVsIGNsYXNzPVxcXCJwYW5lbF9fbGFiZWxzXFxcIj5QcmUvUG9zdGZpeCB0b29sdGlwXFxuPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJwYW5lbF9faW5wdXRzIGpzLW1hcmtlclxcXCIgbmFtZT1cXFwibWFya2VyXFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVsc1xcXCI+UHJlL1Bvc3RmaXggXFx1MDQ0OFxcdTA0M0FcXHUwNDMwXFx1MDQzQlxcdTA0NEJcXG48aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgY2xhc3M9XFxcInBhbmVsX19pbnB1dHMganMtc2NhbGUtcG9zdGZpeFxcXCIgbmFtZT1cXFwianMtcHJlZml4XFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48ZGl2IGNsYXNzPVxcXCJwYW5lbF9faXRlbXNcXFwiPlxcblxcbjxsYWJlbCBjbGFzcz1cXFwicGFuZWxfX2xhYmVsc1xcXCI+UHJlL1Bvc3RmaXggdHJhY2tcXG48aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgY2xhc3M9XFxcInBhbmVsX19pbnB1dHMganMtdHJhY2stcG9zdGZpeFxcXCIgbmFtZT1cXFwianMtcHJlZml4XFxcIi8+XFxuPC9sYWJlbD5cXG48L2Rpdj5cXG48L2Rpdj5cXG5cXG5cIjtcbmV4cG9ydHMuZGVtb1RlbXBsYXRlID0gZGVtb1RlbXBsYXRlO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sInNvdXJjZVJvb3QiOiIifQ==