!function(e){var t={};function i(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(r,s,function(t){return e[t]}.bind(null,s));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=17)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.classNames=void 0;t.classNames={slider:"slider",sliderVertical:"slider slider_orientation-vertical",trackOutStart:"slider__out slider__out-start js-slider__out js-slider__out-start",trackOutEnd:"slider__out slider__out-end js-slider__out js-slider__out-end",findTrackOut:".js-slider__out",track:"slider__track js-slider__track",findTrack:".js-slider__track",scale:"slider__scale js-slider__scale ",findScale:".js-slider__scale",scaleFsZero:"slider__scale-value_not-visible",bar:"slider__bar js-slider__bar",findBar:".js-slider__bar",rollerFirst:"slider__roller js-slider__roller slider__roller_first js-slider__roller_first",rollerSecond:"slider__roller_second js-slider__roller js-slider__roller_second slider__roller",findRollers:".js-slider__roller",firstTooltip:"slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip",secondTooltip:"slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip",findFirstTooltip:".js-slider__tooltip_first",findSecondTooltip:".js-slider__tooltip_second",findTooltip:".js-slider__tooltip",tooltipWhite:"slider__tooltip_white",notVisible:"slider__element_not-visible",scaleMarker:"slider__scale-value  js-slider__scale-value",findScaleValue:".js-slider__scale-value",isScaleValue:"slider__scale-value",divisionValue:"slider__division-value js-slider__division-value slider__element-",isScaleDivison:"slider__division-value",division:"slider__division js-slider__division"}},function(e,t,i){"use strict";var r,s;Object.defineProperty(t,"__esModule",{value:!0}),t.Events=t.Direction=void 0,function(e){e[e.FORWARD=0]="FORWARD",e[e.BACKWARD=1]="BACKWARD",e[e.TARGET_FORWARD=2]="TARGET_FORWARD",e[e.TARGET_BACKWARD=3]="TARGET_BACKWARD"}(r||(r={})),t.Direction=r,function(e){e[e.NEW_DATA=0]="NEW_DATA",e[e.NEW_POSITION=1]="NEW_POSITION"}(s||(s={})),t.Events=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var r=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var i=this.events[e];i&&i.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var i=t.isSeparate,r=t.separate,s="";if(!1===i)s=e.toString();else{var o="."===r,a=" "===r;","===r&&(r="en-US"),o&&(r="de-DE"),a&&(r=void 0),s=e.toLocaleString(r)}return s}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var r={min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:i(14).allColors,isVertical:!1,isDouble:!1};t.standardOptions=r},function(e,t,i){"use strict";var r,s=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var e={};return function(t){if(void 0===e[t]){var i=document.querySelector(t);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(e){i=null}e[t]=i}return e[t]}}(),a=[];function n(e){for(var t=-1,i=0;i<a.length;i++)if(a[i].identifier===e){t=i;break}return t}function l(e,t){for(var i={},r=[],s=0;s<e.length;s++){var o=e[s],l=t.base?o[0]+t.base:o[0],c=i[l]||0,u="".concat(l," ").concat(c);i[l]=c+1;var d=n(u),f={css:o[1],media:o[2],sourceMap:o[3]};-1!==d?(a[d].references++,a[d].updater(f)):a.push({identifier:u,updater:m(f,t),references:1}),r.push(u)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var s=i.nc;s&&(r.nonce=s)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function f(e,t,i,r){var s=i?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=d(t,s);else{var o=document.createTextNode(s),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function p(e,t,i){var r=i.css,s=i.media,o=i.sourceMap;if(s?e.setAttribute("media",s):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,v=0;function m(e,t){var i,r,s;if(t.singleton){var o=v++;i=h||(h=c(t)),r=f.bind(null,i,o,!1),s=f.bind(null,i,o,!0)}else i=c(t),r=p.bind(null,i,t),s=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(i)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else s()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=s());var i=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<i.length;r++){var s=n(i[r]);a[s].references--}for(var o=l(e,t),c=0;c<i.length;c++){var u=n(i[c]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}i=o}}}},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)},s=this&&this.__spreadArrays||function(){for(var e=0,t=0,i=arguments.length;t<i;t++)e+=arguments[t].length;var r=Array(e),s=0;for(t=0;t<i;t++)for(var o=arguments[t],a=0,n=o.length;a<n;a++,s++)r[s]=o[a];return r};Object.defineProperty(t,"__esModule",{value:!0});var o=i(7),a=i(1),n=i(4);i(15),function(e){e.fn.colorSlider=function(e){for(var t,i=[],l=1;l<arguments.length;l++)i[l-1]=arguments[l];var c={init:function(e,t){var i=r(r({},n.standardOptions),t);return e.data("presenter",new o.Presenter(i,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe(a.Events.NEW_DATA,t),void 0===t||e.data("presenter").emitter.subscribe(a.Events.NEW_DATA,t),this}},u="object"==typeof e||!e;return"string"==typeof e?(t=c[e]).call.apply(t,s([this,this],i)):u?c.init(this,e):void 0}}(jQuery)},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var s=i(8),o=i(9),a=i(1),n=i(2),l=i(4),c=function(){function e(e,t){this.element=t,this.emitter=new n.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=r(r({},l.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new s.Model(e)},e.prototype.createView=function(e,t){return new o.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe(a.Events.NEW_DATA,this.getNewData),this.view.emitter.subscribe(a.Events.NEW_POSITION,this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit(a.Events.NEW_DATA,e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,i=r(r({},t),e);this.model.setData(i)},e}();t.Presenter=c},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var s=i(1),o=i(2),a=function(){function e(e){this.emitter=new o.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),i=this.validateMinMaxStep(e);this.state=r(r(r({},e),t),i),this.emitter.emit(s.Events.NEW_DATA,this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,i=e.max,r=e.step;r<=0&&(e.step=.1);var s=t>=i&&i>0||i<0&&i<t;return i<=t&&i<0&&(e.min=t-r),s&&(e.min=t,e.max=t+r),e},e.prototype.validateFromTo=function(e){var t=e.from,i=e.to,r=e.max,s=e.min,o=e.step,a=e.isDouble;a&&(e.to=r);var n=r<0&&0===s,l=!a&&t>=i,c=t>0&&(s<0&&r<0);return t>r&&(e.from=r-o),t<s&&(e.from=s),i>r&&(e.to=r),n&&(e.from=s,e.to=s),l&&(e.from=i-o),c&&(e.from=s),i<=s&&(e.to=s+o,e.from=s),r<s&&(e.to=s+o),e},e}();t.Model=a},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var s=i(2),o=i(10),a=i(11),n=i(12),l=i(13),c=i(1),u=i(0),d=function(){function e(e,t){this.emitter=new s.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),i=this.getOneStep(e),s=this.slider;return r(r({},e),{size:t,oneStep:i,slider:s})},e.prototype.createSlider=function(e,t){var i=e.isVertical,r=document.createElement("div");return r.className=u.classNames.slider,i&&(r.className=u.classNames.sliderVertical),t.append(r),r},e.prototype.createTrack=function(e){return new a.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new o.Rollers(e)},e.prototype.createScale=function(e){return new n.Scale(e)},e.prototype.upData=function(e){var t=r(r({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.setOut(t),this.state=r({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,i=e.max,r=e.step,s=Math.ceil((i-t)/r);return this.getSliderSize(e)/s},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var i=this.drag.bind(this,t),r=function(){document.removeEventListener("mousemove",i),t.removeEventListener("touchmove",i),document.removeEventListener("mouseup",r),t.removeEventListener("touchend",r)};document.addEventListener("mousemove",i),t.addEventListener("touchmove",i),document.addEventListener("mouseup",r),t.addEventListener("touchend",r)}},e.prototype.drag=function(e,t){var i=this.state.isVertical;t.preventDefault();var r=0,s=e.classList.contains(u.classNames.findTooltip),o=e.classList.contains(u.classNames.findRollers);if(!(s||o)){var a="touchmove"===t.type&&!i,n="mousemove"===t.type&&!i,l="touchmove"===t.type&&i,c="mousemove"===t.type&&i;a&&(r=this.convertPxToValue(t.touches[0].clientX)),n&&(r=this.convertPxToValue(t.clientX)),l&&(r=this.convertPxToValue(t.touches[0].clientY)),c&&(r=this.convertPxToValue(t.clientY)),this.updatePosition(r,e)}},e.prototype.getTargetType=function(e){var t=Array.from(this.slider.querySelectorAll(u.classNames.findRollers)),i=t[0],r=t[1];return i.contains(e)?c.Direction.TARGET_FORWARD:r.contains(e)?c.Direction.TARGET_BACKWARD:"undefined"},e.prototype.handleScaleClick=function(e){var t,i=this.state.scalePostfix,r=this.state.separate;" "===r&&(r="&nbsp;"),t=e.detail.value.split(i).join("").split(r).join("");var s=String(t).split(",").join(".");this.updatePosition(Number(s))},e.prototype.handleTrackClick=function(e){var t=this.state.isVertical,i=0;if(!e.target.classList.contains(u.classNames.findScale)){i=t?e.clientY:e.clientX;var r=this.convertPxToValue(i);this.updatePosition(r)}},e.prototype.updatePosition=function(e,t){var i=this.state,r=i.from,s=i.to,o=i.step,a=i.isDouble,n=Math.abs(r-e),l=Math.abs(s-e);if(a&&n)return this.emitter.emit(c.Events.NEW_POSITION,{from:e}),void this.convertValueToColor(e);var u=n<l?c.Direction.FORWARD:c.Direction.BACKWARD,d=!t&&u===c.Direction.FORWARD,f=!t&&u===c.Direction.BACKWARD;d&&(this.emitter.emit(c.Events.NEW_POSITION,{from:e}),this.convertValueToColor(e)),f&&(this.emitter.emit(c.Events.NEW_POSITION,{to:e}),this.convertValueToColor(e));var p=t&&this.getTargetType(t),h=p===c.Direction.TARGET_FORWARD&&!a,v=p===c.Direction.TARGET_BACKWARD&&!a,m=v&&e<r+o;h&&e>s-o?this.emitter.emit(c.Events.NEW_POSITION,{from:s-o}):(h&&(this.emitter.emit(c.Events.NEW_POSITION,{from:e}),this.convertValueToColor(e)),m?this.emitter.emit(c.Events.NEW_POSITION,{to:r+o}):v&&(this.emitter.emit(c.Events.NEW_POSITION,{to:e}),this.convertValueToColor(e)))},e.prototype.convertPxToValue=function(e){var t=this.state,i=t.min,r=t.max,s=t.step,o=t.oneStep,a=t.size,n=t.isVertical,l=this.getSliderPosition(),c=0;return(c=n?l+a-e:e-l)>a?r:c<0?i:Math.round(c/o)*s+i},e.prototype.convertValueToColor=function(e){var t=this.state,i=t.color,r=t.gradient,s=this.state,o=s.max,a=s.isColor,n=s.changeColor,l=e/o,u=a&&n,d=0,f=0;a&&!n&&(d=Math.round(255*l*255*255),f=Math.round(255*l*254*254)),u&&(d=Math.round(256*l*256*255),f=Math.round(254*l*254*254));var p=Math.abs(f);i="#"+Math.abs(d).toString(16),r="#"+p.toString(16),this.emitter.emit(c.Events.NEW_POSITION,{color:i}),this.emitter.emit(c.Events.NEW_POSITION,{gradient:r})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e.prototype.getSliderSize=function(e){return e.isVertical?this.slider.getBoundingClientRect().height:this.slider.getBoundingClientRect().width},e}();t.View=d},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var r=i(3),s=i(0),o=function(){function e(e){this.rollers=this.create(e),this.tooltips=this.createTooltip(),this.moveRollersAtValue(e),this.toggleRollers(e)}return e.prototype.create=function(e){var t=e.slider,i=document.createElement("div");i.className=s.classNames.rollerFirst;var r=document.createElement("div");return r.className=s.classNames.rollerSecond,t.append(i),t.append(r),[i,r]},e.prototype.createTooltip=function(){var e=document.createElement("div");e.className=s.classNames.firstTooltip;var t=document.createElement("div");t.className=s.classNames.secondTooltip;var i=this.rollers,r=i[0],o=i[1];return r.append(e),o.append(t),[e,t]},e.prototype.updataOutTooltip=function(e){var t=e.to,i=e.from,s=e.isPostfix,o=e.isLabel,a=e.isPrefix,n=e.postfix,l=this.tooltips,c=l[0],u=l[1];s||(n="");var d=o&&a;o&&!a&&(c.innerHTML=""+r.correctSeparate(i,e)+n,u.innerHTML=""+r.correctSeparate(t,e)+n),d&&(c.innerHTML=""+n+r.correctSeparate(i,e),u.innerHTML=""+n+r.correctSeparate(t,e)),this.setColor(e)},e.prototype.setColor=function(e){var t=e.color,i=e.gradient,r=e.isColorOut,o=e.allColors,a=e.isChangeColor,n=e.isLabel,l=o[t],c=o[i];c||(c=i),l||(l=t);var u=this.tooltips,d=u[0],f=u[1];a&&r&&(d.innerHTML=String(l),f.innerHTML=String(c),d.style.backgroundColor=""+t,f.style.backgroundColor=""+i,d.classList.add(s.classNames.tooltipWhite),f.classList.add(s.classNames.tooltipWhite)),n||(d.classList.add(s.classNames.notVisible),f.classList.add(s.classNames.notVisible))},e.prototype.updataColor=function(e){var t=e.color,i=e.isGradient,r=e.gradient,s=e.isChangeColor,o=e.gradientDeg,a=this.rollers,n=a[0],l=a[1],c=s&&!i;s&&i&&(n.style.background="linear-gradient("+o+"deg, "+t+", "+r+")",l.style.background="linear-gradient("+o+"deg, "+t+", "+r+")"),c&&(n.style.background=t,l.style.background=t)},e.prototype.moveRollersAtValue=function(e){var t=e.to,i=e.from,r=e.isVertical,s=this.rollers,o=s[0],a=s[1],n=this.convertValueToPx(t,e),l=this.convertValueToPx(i,e),c=this.convertPxToProcent(n,e),u=this.convertPxToProcent(l,e);r?(o.style.bottom=u+"%",a.style.bottom=c+"%"):(o.style.left=u+"%",a.style.left=c+"%"),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.upData=function(e){this.moveRollersAtValue(e),this.toggleRollers(e),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.convertValueToPx=function(e,t){var i=t.min,r=t.max,s=t.step,o=t.size,a=t.oneStep;return e===r?o:Math.round((e-i)/s)*a},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e){var t=e.isDouble,i=this.rollers,r=i[0],o=i[1];t&&r?o.classList.add(s.classNames.notVisible):o.classList.remove(s.classNames.notVisible)},e}();t.Rollers=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var r=i(3),s=i(0),o=function(){function e(e){this.track=this.create(e),this.outElements=this.createOutElements(),this.setOut(e)}return e.prototype.create=function(e){var t=e.slider,i=document.createElement("div");return i.className=s.classNames.track,t.append(i),i},e.prototype.createOutElements=function(){var e=document.createElement("div"),t=document.createElement("div");return e.className=s.classNames.trackOutStart,t.className=s.classNames.trackOutEnd,this.track.append(e),this.track.append(t),[e,t]},e.prototype.setOut=function(e){var t=e.min,i=e.max,s=e.from,o=e.to,a=e.minMax,n=e.fromTo,l=e.isTrackPostfix,c=e.isPrefix,u=e.trackPostfix;l||(u="");var d=this.outElements,f=d[0],p=d[1];a&&(f.innerHTML=""+r.correctSeparate(t,e)+u,p.innerHTML=""+r.correctSeparate(i,e)+u),n&&(f.innerHTML=""+r.correctSeparate(s,e)+u,p.innerHTML=""+r.correctSeparate(o,e)+u);var h=n&&c;a&&c&&(f.innerHTML=""+u+r.correctSeparate(t,e),p.innerHTML=""+u+r.correctSeparate(i,e)),h&&(f.innerHTML=""+u+r.correctSeparate(s,e),p.innerHTML=""+u+r.correctSeparate(o,e))},e}();t.Track=o},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var s=i(3),o=i(0),a=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,i=document.createElement("div");i.className=o.classNames.scale,t.append(i),this.addEventListeners(i),this.addScaleMarker(e,i),this.checkScale(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(o.classNames.findScale);this.options=r(r({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,i=e.slider,r=e.color;i.querySelectorAll(o.classNames.findScaleValue).forEach((function(e){t&&e.classList.add(o.classNames.scaleFsZero)})),document.documentElement.style.setProperty("--scale-color"," "+r)},e.prototype.checkScale=function(e,t){var i=e.isScale;i||t.classList.add(o.classNames.notVisible),i&&t.classList.remove(o.classNames.notVisible)},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var i=e.min,r=e.max,s=e.step,o=e.size,a=e.oneStep,n=this.getIncrement(e),l=n/s*a,c=document.createDocumentFragment(),u=0,d=0,f=i;f<r&&!(u>o-50);f+=n,d+=1){var p={fragment:c,value:f,position:u,options:e,val:d};this.createScaleMarker(p),u+=l}var h={fragment:c,value:r,position:o,options:e,val:5};this.createScaleMarker(h),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,i=e.oneStep,r=e.step,s=Math.ceil(t/i);return Math.ceil(s/5)*r},e.prototype.createScaleMarker=function(e){var t=e.fragment,i=e.value,r=e.position,a=e.options,n=e.val,l=a.isScalePostfix,c=a.isPrefix,u=a.onlyDivisions,d=a.isVertical,f=a.scalePostfix,p=document.createElement("span");p.className=o.classNames.scaleMarker;var h=document.createElement("span"),v=document.createElement("span");h.className=""+o.classNames.divisionValue+n,v.className=o.classNames.division,p.append(h),p.append(v),t.append(p);var m=h;u||(m=p),l||(f=""),m.innerHTML=""+s.correctSeparate(i,a)+f,c&&(m.innerHTML=""+f+s.correctSeparate(i,a)),this.updataScaleMarker(a);var b=this.convertPxToPercent(r,a);d?p.style.bottom=b+"%":p.style.left=b+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,i=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var r=!t.classList.contains(o.classNames.isScaleDivison)&&i,s=!t.classList.contains(o.classNames.isScaleValue)&&!i;if(!r&&!s){var a=t.innerHTML,n=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:a}});t.dispatchEvent(n)}}},e}();t.Scale=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var r=i(0),s=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,i=document.createElement("div");i.className=r.classNames.bar,t.append(i),this.updataColor(e,i),this.updataBar(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(r.classNames.findBar);this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var i=e.color,r=e.isGradient,s=e.gradient,o=e.gradientDeg,a=e.isChangeColor,n=a&&!r;a&&r&&(t.style.background="linear-gradient("+o+"deg, "+i+", "+s+")"),n&&(t.style.background=i)},e.prototype.getRollerPositions=function(e){var t=e.slider,i=Array.from(t.querySelectorAll(r.classNames.findRollers)),s=i[0],o=i[1];return[this.calculatePosition(s,e),this.calculatePosition(o,e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var i=t.isVertical,r=Number.parseInt(getComputedStyle(e).width,10);return i?e.getBoundingClientRect().top+r/2:e.getBoundingClientRect().left+r/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var i=e.isVertical,r=e.isDouble,s=i?"top":"left",o=i?"height":"width",a=this.getRollerPositions(e),n=a[0],l=a[1],c=this.getNewSliderPos(e);if(r&&!i){var u=this.convertPxToProcent(Math.abs(l-c),e);t.style[s]="0%",t.style[o]=u+"%"}else{u=100-(d=this.convertPxToProcent(Math.abs(l-c),e));t.style[s]=d+"%",t.style[o]=u+"%"}if(!r){var d=this.convertPxToProcent(Math.abs(n-c),e);u=this.convertPxToProcent(Math.abs(l-n),e);t.style[s]=d+"%",t.style[o]=u+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e}();t.Bar=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,i){var r=i(5),s=i(16);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var o={insert:"head",singleton:!1};r(s,o);e.exports=s.locals||{}},function(e,t,i){},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(18);i(20),i(6);var s=[{isVertical:!0,isDouble:!1,isColorOut:!0,isScale:!1},{gradient:"red",color:"#6698db",max:15e3,from:5e3,to:1e4,fromTo:!0,separate:".",onlyDivisions:!1},{isVertical:!0,gradient:"blue",color:"yellow",postfix:"",scalePostfix:"",min:-5e3,max:-100,step:2,from:-4e3,to:-700,changeColor:!1,separate:",",onlyDivisions:!1},{isGradient:!1,color:"black",max:1500,from:500,to:1e3,fromTo:!0,separate:" ",postfix:"$",scalePostfix:"$",trackPostfix:"$",isPrefix:!0,isColor:!1,onlyDivisions:!0}];$(".js-slider").each((function(e,t){new r.Demo($(t).colorSlider(s[e]).colorSlider("change"))}))},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Demo=void 0;var s=i(1),o=i(19),a=function(){function e(e){this.slider=e,this.state=e.getOptions(),this.demoTools=this.createTools(),this.init()}return e.prototype.upData=function(e){this.state=r(r({},this.state),e),this.initTools()},e.prototype.init=function(){this.createSettings(),this.initTools(),this.upData=this.upData.bind(this),this.slider.emitter.subscribe(s.Events.NEW_DATA,this.upData)},e.prototype.createTools=function(){var e=document.createElement("div");return e.className="panel__tools",e},e.prototype.createSettings=function(){this.slider.element.after(this.demoTools),this.demoTools.insertAdjacentHTML("beforeend",o.demoTemplate)},e.prototype.initTools=function(){var e=this,t=this.state,i=t.isLabel,r=t.from,s=t.to,o=t.min,a=t.max,n=t.step,l=t.isVertical,c=t.isDouble,u=this.demoTools.querySelector(".js-orientation"),d=this.demoTools.querySelector(".js-isLabel"),f=this.demoTools.querySelector(".js-isDouble"),p=this.demoTools.querySelector(".js-from"),h=this.demoTools.querySelector(".js-to"),v=this.demoTools.querySelector(".js-min"),m=this.demoTools.querySelector(".js-max"),b=this.demoTools.querySelector(".js-step");u.onchange=function(){l||e.setState({isVertical:!0}),l&&e.setState({isVertical:!1})},d.onchange=function(){i&&e.setState({isLabel:!1}),i||e.setState({isLabel:!0})},f.onchange=function(){c||e.setState({isDouble:!0}),c&&e.setState({isDouble:!1})},p.value=String(r),p.onchange=function(){var t=Number(p.value);e.setState({from:t})},h.value=String(s),h.onchange=function(){var t=Number(h.value);e.setState({to:t})},v.value=String(o),v.onchange=function(){var t=Number(v.value);e.setState({min:t})},m.value=String(a),m.onchange=function(){var t=Number(m.value);e.setState({max:t})},b.value=String(n),b.onchange=function(){var t=Number(b.value);e.setState({step:t})}},e.prototype.setState=function(e){this.state=r(r({},this.state),e),this.slider.setOptions(this.state),this.slider.upDataView()},e}();t.Demo=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.demoTemplate=void 0;t.demoTemplate='\n\n<h4  class="panel__title">Панель управления</h4>\n\n<label class="panel__labels">V/H Вид\n<input type="checkbox" class="panel__checkbox panel__inputs js-orientation" /></label>\n\n<label class="panel__labels">Показать/Скрыть Tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isLabel"/></label>\n\n<label class="panel__labels">Range/Single\n<input type="checkbox" class="panel__checkbox panel__inputs js-isDouble"/></label>\n\n<div class="panel__items">\n<label class="panel__labels">Max\n<input type="number" class="panel__inputs js-max" /></label>\n\n<label class="panel__labels">Min\n<input type="number" class="panel__inputs js-min"/></label>\n\n<label class="panel__labels">From\n<input type="number" class="panel__inputs js-from"/></label>\n\n<label class="panel__labels">To\n<input type="number" class="panel__inputs js-to" /></label>\n\n<label class="panel__labels">Шаг\n<input type="number" class="panel__inputs js-step"/></label>\n</div>\n'},function(e,t,i){var r=i(5),s=i(21);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var o={insert:"head",singleton:!1};r(s,o);e.exports=s.locals||{}},function(e,t,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,