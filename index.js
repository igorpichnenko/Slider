!function(e){var t={};function s(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(n,i,function(t){return e[t]}.bind(null,i));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=16)}([function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.classNames=void 0;t.classNames={slider:"slider",sliderVertical:"slider slider_orientation-vertical",trackOutStart:"slider__out slider__out-start js-slider__out js-slider__out-start",trackOutEnd:"slider__out slider__out-end js-slider__out js-slider__out-end",track:"slider__track js-slider__track",scale:"slider__scale js-slider__scale ",scaleFsZero:"slider__scale-value_fontSize-zero",scaleFsNormal:"slider__scale-value_fontSize-normal",bar:"slider__bar js-slider__bar",rollerFirst:"slider__roller js-slider__roller slider__roller_first js-slider__roller_first",rollerSecond:"slider__roller_second js-slider__roller js-slider__roller_second slider__roller",firstTooltip:"slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip",secondTooltip:"slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip",tooltipWhite:"slider__tooltip_white-color",tooltipDisplay:"slider__tooltip_display-none",scaleMarker:"slider__scale-value  js-slider__scale-value",divisionValue:"slider__division-value js-slider__division-value",division:"slider__division js-slider__division"}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var n=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var s=this.events[e];s&&s.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=n},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var s=t.isSeparate,n=t.separate,i="";if(!1===s)i=e.toString();else{var a="."===n,o=" "===n;","===n&&(n="en-US"),a&&(n="de-DE"),o&&(n=void 0),i=e.toLocaleString(n)}return i}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var n={min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:s(13).allColors,isVertical:!1,isDouble:!1};t.standardOptions=n},function(e,t,s){"use strict";var n,i=function(){return void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n},a=function(){var e={};return function(t){if(void 0===e[t]){var s=document.querySelector(t);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(e){s=null}e[t]=s}return e[t]}}(),o=[];function r(e){for(var t=-1,s=0;s<o.length;s++)if(o[s].identifier===e){t=s;break}return t}function l(e,t){for(var s={},n=[],i=0;i<e.length;i++){var a=e[i],l=t.base?a[0]+t.base:a[0],c=s[l]||0,u="".concat(l," ").concat(c);s[l]=c+1;var d=r(u),p={css:a[1],media:a[2],sourceMap:a[3]};-1!==d?(o[d].references++,o[d].updater(p)):o.push({identifier:u,updater:_(p,t),references:1}),n.push(u)}return n}function c(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var i=s.nc;i&&(n.nonce=i)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var o=a(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function p(e,t,s,n){var i=s?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(e.styleSheet)e.styleSheet.cssText=d(t,i);else{var a=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function f(e,t,s){var n=s.css,i=s.media,a=s.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var h=null,m=0;function _(e,t){var s,n,i;if(t.singleton){var a=m++;s=h||(h=c(t)),n=p.bind(null,s,a,!1),i=p.bind(null,s,a,!0)}else s=c(t),n=f.bind(null,s,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(s)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var s=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<s.length;n++){var i=r(s[n]);o[i].references--}for(var a=l(e,t),c=0;c<s.length;c++){var u=r(s[c]);0===o[u].references&&(o[u].updater(),o.splice(u,1))}s=a}}}},function(e,t,s){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,s=1,n=arguments.length;s<n;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},i=this&&this.__spreadArrays||function(){for(var e=0,t=0,s=arguments.length;t<s;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<s;t++)for(var a=arguments[t],o=0,r=a.length;o<r;o++,i++)n[i]=a[o];return n};Object.defineProperty(t,"__esModule",{value:!0});var a=s(6),o=s(3);s(14),function(e){e.fn.colorSlider=function(e){for(var t,s=[],r=1;r<arguments.length;r++)s[r-1]=arguments[r];var l={init:function(e,t){var s=n(n({},o.standardOptions),t);return e.data("presenter",new a.Presenter(s,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe("newData",t),void 0===t||e.data("presenter").emitter.subscribe("newData",t),this}},c="object"==typeof e||!e;return"string"==typeof e?(t=l[e]).call.apply(t,i([this,this],s)):c?l.init(this,e):void 0}}(jQuery)},function(e,t,s){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,s=1,n=arguments.length;s<n;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var i=s(7),a=s(8),o=s(1),r=s(3),l=function(){function e(e,t){this.element=t,this.emitter=new o.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=n(n({},r.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new i.Model(e)},e.prototype.createView=function(e,t){return new a.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe("newData",this.getNewData),this.view.emitter.subscribe("newPosition",this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit("newData",e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,s=n(n({},t),e);this.model.setData(s)},e}();t.Presenter=l},function(e,t,s){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,s=1,n=arguments.length;s<n;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var i=s(1),a=function(){function e(e){this.emitter=new i.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),s=this.validateMinMaxStep(e);this.state=n(n(n({},e),t),s),this.emitter.emit("newData",this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,s=e.max,n=e.step;n<=0&&(e.step=.1);var i=t>=s&&s>0||s<0&&s<t;return s<=t&&s<0&&(e.min=t-n),i&&(e.min=t,e.max=t+n),e},e.prototype.validateFromTo=function(e){var t=e.from,s=e.to,n=e.max,i=e.min,a=e.step,o=e.isDouble;o&&(e.to=n);var r=n<0&&0===i,l=!o&&t>=s,c=t>0&&(i<0&&n<0);return t>n&&(e.from=n-a),t<i&&(e.from=i),s>n&&(e.to=n),r&&(e.from=i,e.to=i),l&&(e.from=s-a),c&&(e.from=i),s<=i&&(e.to=i+a,e.from=i),n<i&&(e.to=i+a),e},e}();t.Model=a},function(e,t,s){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,s=1,n=arguments.length;s<n;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var i=s(1),a=s(9),o=s(10),r=s(11),l=s(12),c=s(0),u=function(){function e(e,t){this.emitter=new i.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),s=this.getOneStep(e),i=this.slider;return n(n({},e),{size:t,oneStep:s,slider:i})},e.prototype.createSlider=function(e,t){var s=e.isVertical,n=document.createElement("div");return n.className=c.classNames.slider,s&&(n.className=c.classNames.sliderVertical),t.append(n),n},e.prototype.createTrack=function(e){return new o.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new a.Rollers(e)},e.prototype.createScale=function(e){return new r.Scale(e)},e.prototype.upData=function(e){var t=n(n({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.upData(t),this.state=n({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,s=e.max,n=e.step,i=Math.ceil((s-t)/n);return this.getSliderSize(e)/i},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var s=this.drag.bind(this,t),n=function(){document.removeEventListener("mousemove",s),t.removeEventListener("touchmove",s),document.removeEventListener("mouseup",n),t.removeEventListener("touchend",n)};document.addEventListener("mousemove",s),t.addEventListener("touchmove",s),document.addEventListener("mouseup",n),t.addEventListener("touchend",n)}},e.prototype.drag=function(e,t){var s=this.state.isVertical;t.preventDefault();var n=0;if(!!/tooltip || roller/.test(e.className)){var i="touchmove"===t.type&&!s,a="mousemove"===t.type&&!s,o="touchmove"===t.type&&s,r="mousemove"===t.type&&s;i&&(n=this.convertPxToValue(t.touches[0].clientX)),a&&(n=this.convertPxToValue(t.clientX)),o&&(n=this.convertPxToValue(t.touches[0].clientY)),r&&(n=this.convertPxToValue(t.clientY)),this.updatePosition(n,e)}},e.prototype.getTargetType=function(e){var t=this.slider.querySelectorAll(".js-slider__roller");return t[0].contains(e)?"from":t[1].contains(e)?"to":"undefined"},e.prototype.handleScaleClick=function(e){var t,s=this.state.scalePostfix,n=this.state.separate;" "===n&&(n="&nbsp;"),t=e.detail.value.split(s).join("").split(n).join("");var i=String(t).split(",").join(".");this.updatePosition(Number(i))},e.prototype.handleTrackClick=function(e){var t=this.state.isVertical,s=e.target,n=0;if(!/scale/.test(s.className)){n=t?e.clientY:e.clientX;var i=this.convertPxToValue(n);this.updatePosition(i)}},e.prototype.updatePosition=function(e,t){var s=this.state,n=s.from,i=s.to,a=s.step,o=s.isDouble,r=Math.abs(n-e),l=Math.abs(i-e);if(o&&r)return this.emitter.emit("newPosition",{from:e}),void this.convertValueToColor(e);var c=r<l?"from":"to",u=!t&&"to"===c;!t&&"from"===c&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),u&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e));var d=t&&this.getTargetType(t),p="from"===d&&!o,f="to"===d&&!o,h=f&&e<n+a;p&&e>i-a?this.emitter.emit("newPosition",{from:i-a}):(p&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),h?this.emitter.emit("newPosition",{to:n+a}):f&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e)))},e.prototype.convertPxToValue=function(e){var t=this.state,s=t.min,n=t.max,i=t.step,a=t.oneStep,o=t.size,r=t.isVertical,l=this.getSliderPosition(),c=0;return(c=r?l+o-e:e-l)>o?n:c<0?s:Math.round(c/a)*i+s},e.prototype.convertValueToColor=function(e){var t=this.state,s=t.color,n=t.gradient,i=this.state,a=i.max,o=i.isColor,r=i.changeColor,l=e/a,c=!0===o&&!0===r,u=0,d=0;!0===o&&!1===r&&(u=Math.round(255*l*255*255),d=Math.round(255*l*254*254)),c&&(u=Math.round(256*l*256*255),d=Math.round(254*l*254*254));var p=Math.abs(d);s="#"+Math.abs(u).toString(16),n="#"+p.toString(16),this.emitter.emit("newPosition",{color:s}),this.emitter.emit("newPosition",{gradient:n})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e.prototype.getSliderSize=function(e){return e.isVertical?this.slider.getBoundingClientRect().height:this.slider.getBoundingClientRect().width},e}();t.View=u},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var n=s(2),i=s(0),a=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=i.classNames.rollerFirst;var n=document.createElement("div");n.className=i.classNames.rollerSecond,t.append(s),t.append(n),this.createTooltip(s,n,e),this.moveRollersAtValue(e,s,n),this.toggleRollers(e,n),this.updataColor(e,s,n)},e.prototype.createTooltip=function(e,t,s){var n=document.createElement("div");n.className=i.classNames.firstTooltip;var a=document.createElement("div");a.className=i.classNames.secondTooltip,e.append(n),t.append(a),this.updataOutTooltip(n,a,s)},e.prototype.updataOutTooltip=function(e,t,s){var i=s.to,a=s.from,o=s.isPostfix,r=s.isLabel,l=s.isPrefix,c=s.postfix;!1===o&&(c="");var u=!0===r&&!0===l;!0===r&&!1===l&&(e.innerHTML=""+n.correctSeparate(a,s)+c,t.innerHTML=""+n.correctSeparate(i,s)+c),u&&(e.innerHTML=""+c+n.correctSeparate(a,s),t.innerHTML=""+c+n.correctSeparate(i,s)),this.setColor(e,t,s)},e.prototype.setColor=function(e,t,s){var n=s.color,a=s.gradient,o=s.isColorOut,r=s.allColors,l=s.isChangeColor,c=s.isLabel,u=r[n],d=r[a];void 0===d&&(d=a),void 0===u&&(u=n),!0===l&&!0===o&&(e.innerHTML=String(u),t.innerHTML=String(d),e.style.backgroundColor=""+n,t.style.backgroundColor=""+a,e.classList.add(i.classNames.tooltipWhite),t.classList.add(i.classNames.tooltipWhite)),!1===c&&(e.classList.add(i.classNames.tooltipDisplay),t.classList.add(i.classNames.tooltipDisplay))},e.prototype.updataColor=function(e,t,s){var n=e.color,i=e.isGradient,a=e.gradient,o=e.isChangeColor,r=e.gradientDeg,l=!0===o&&!1===i;!0===o&&!0===i&&(t.style.background="linear-gradient("+r+"deg, "+n+", "+a+")",s.style.background="linear-gradient("+r+"deg, "+n+", "+a+")"),l&&(t.style.background=n,s.style.background=n)},e.prototype.moveRollersAtValue=function(e,t,s){var n=e.to,i=e.from,a=e.isVertical,o=this.convertValueToPx(n,e),r=this.convertValueToPx(i,e),l=this.convertPxToProcent(o,e),c=this.convertPxToProcent(r,e);a?(t.style.bottom=c+"%",s.style.bottom=l+"%"):(t.style.left=c+"%",s.style.left=l+"%")},e.prototype.upData=function(e){var t=e.slider,s=t.querySelector(".js-slider__roller_first"),n=t.querySelector(".js-slider__roller_second"),i=t.querySelector(".js-slider__tooltip_first"),a=t.querySelector(".js-slider__tooltip_second");this.moveRollersAtValue(e,s,n),this.toggleRollers(e,n),this.updataColor(e,s,n),this.updataOutTooltip(i,a,e)},e.prototype.convertValueToPx=function(e,t){var s=t.min,n=t.max,i=t.step,a=t.size,o=t.oneStep;return e===n?a:Math.round((e-s)/i)*o},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e,t){var s=e.isDouble;t.style.display=s?"none":"block"},e}();t.Rollers=a},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var n=s(2),i=s(0),a=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=i.classNames.track,t.append(s),this.createOutElement(s,e)},e.prototype.createOutElement=function(e,t){var s=document.createElement("div"),n=document.createElement("div");s.className=i.classNames.trackOutStart,n.className=i.classNames.trackOutEnd,e.append(s),e.append(n),this.setStartEndTrackOut(s,n,t)},e.prototype.setStartEndTrackOut=function(e,t,s){var i=s.min,a=s.max,o=s.from,r=s.to,l=s.minMax,c=s.fromTo,u=s.isTrackPostfix,d=s.isPrefix,p=s.trackPostfix;!1===u&&(p=""),!0===l&&(e.innerHTML=""+n.correctSeparate(i,s)+p,t.innerHTML=""+n.correctSeparate(a,s)+p),!0===c&&(e.innerHTML=""+n.correctSeparate(o,s)+p,t.innerHTML=""+n.correctSeparate(r,s)+p);var f=!0===c&&!0===d;!0===l&&!0===d&&(e.innerHTML=""+p+n.correctSeparate(i,s),t.innerHTML=""+p+n.correctSeparate(a,s)),f&&(e.innerHTML=""+p+n.correctSeparate(o,s),t.innerHTML=""+p+n.correctSeparate(r,s))},e.prototype.upData=function(e){var t=e.slider,s=t.querySelector(".js-slider__out-start"),n=t.querySelector(".js-slider__out-end");this.setStartEndTrackOut(s,n,e)},e}();t.Track=a},function(e,t,s){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,s=1,n=arguments.length;s<n;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var i=s(2),a=s(0),o=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=a.classNames.scale,t.append(s),this.addEventListeners(s),this.addScaleMarker(e,s),this.checkScale(e,s)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__scale");this.options=n(n({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,s=e.slider,n=e.color;s.querySelectorAll(".js-slider__scale-value").forEach((function(e){!0===t?e.classList.add(a.classNames.scaleFsZero):e.classList.add(a.classNames.scaleFsNormal)})),document.documentElement.style.setProperty("--scale-color"," "+n)},e.prototype.checkScale=function(e,t){var s=e.isScale;!1===s&&(t.style.display="none"),!0===s&&(t.style.display="")},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var s=e.min,n=e.max,i=e.step,a=e.size,o=e.oneStep,r=this.getIncrement(e),l=r/i*o,c=document.createDocumentFragment(),u=0,d=0,p=s;p<n&&!(u>a-50);p+=r,d+=1)this.createScaleMarker(c,p,u,e,d),u+=l;this.createScaleMarker(c,n,a,e,5),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,s=e.oneStep,n=e.step,i=Math.ceil(t/s);return Math.ceil(i/5)*n},e.prototype.createScaleMarker=function(e,t,s,n,o){var r=n.isScalePostfix,l=n.isPrefix,c=n.onlyDivisions,u=n.isVertical,d=n.scalePostfix,p=document.createElement("span");p.className=a.classNames.scaleMarker;var f=document.createElement("span"),h=document.createElement("span");f.className=a.classNames.divisionValue+" slider__division-value_"+o+"-element",h.className=a.classNames.division,p.append(f),p.append(h),e.append(p);var m=f;!1===c&&(m=p),!1===r&&(d=""),m.innerHTML=""+i.correctSeparate(t,n)+d,!0===l&&(m.innerHTML=""+d+i.correctSeparate(t,n)),this.updataScaleMarker(n);var _=this.convertPxToPercent(s,n);u?p.style.bottom=_+"%":p.style.left=_+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,s=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var n=!t.classList.contains("slider__division-value")&&!0===s,i=!t.classList.contains("slider__scale-value")&&!1===s;if(!n&&!i){var a=t.innerHTML,o=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:a}});t.dispatchEvent(o)}}},e}();t.Scale=o},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var n=s(0),i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=document.createElement("div");s.className=n.classNames.bar,t.append(s),this.updataColor(e,s),this.updataBar(e,s)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__bar");this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var s=e.color,n=e.isGradient,i=e.gradient,a=e.gradientDeg,o=e.isChangeColor,r=!0===o&&!1===n;!0===o&&!0===n&&(t.style.background="linear-gradient("+a+"deg, "+s+", "+i+")"),r&&(t.style.background=s)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(".js-slider__roller");return[this.calculatePosition(t[0],e),this.calculatePosition(t[1],e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var s=t.isVertical?"top":"left",n=Number.parseInt(getComputedStyle(e).width,10);return e.getBoundingClientRect()[s]+n/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var s=e.isVertical,n=e.isDouble,i=s?"top":"left",a=s?"height":"width",o=this.getRollerPositions(e),r=this.getNewSliderPos(e);if(n&&!s){var l=this.convertPxToProcent(Math.abs(o[1]-r),e);t.style[i]="0%",t.style[a]=l+"%"}else{l=100-(c=this.convertPxToProcent(Math.abs(o[1]-r),e));t.style[i]=c+"%",t.style[a]=l+"%"}if(!n){var c=this.convertPxToProcent(Math.abs(o[0]-r),e);l=this.convertPxToProcent(Math.abs(o[1]-o[0]),e);t.style[i]=c+"%",t.style[a]=l+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e}();t.Bar=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,s){var n=s(4),i=s(15);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var a={insert:"head",singleton:!1};n(i,a);e.exports=i.locals||{}},function(e,t,s){},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(17);s(19),s(5);var i=$(".js-test");i.colorSlider({isScale:!1,isChangeColor:!1}),i.colorSlider("getValue",(function(e){$(".js-custom-from").val(e.from),$(".js-custom-to").val(e.to)})),$(".js-custom-btn").click((function(){i.colorSlider("change",{color:"red",gradient:"blue",max:1e3,from:200,to:800,onlyDivisions:!0,fromTo:!0})}));var a=[{isVertical:!0,isDouble:!1,isColorOut:!0,isScale:!1},{gradient:"red",color:"#6698db",max:15e3,from:5e3,to:1e4,fromTo:!0,separate:".",onlyDivisions:!1},{isVertical:!0,gradient:"blue",color:"yellow",postfix:"",scalePostfix:"",min:-5e3,max:-100,step:2,from:-4e3,to:-700,changeColor:!1,separate:",",onlyDivisions:!1},{isGradient:!1,color:"black",max:1500,from:500,to:1e3,fromTo:!0,separate:" ",postfix:"$",scalePostfix:"$",trackPostfix:"$",isPrefix:!0,isColor:!1,onlyDivisions:!0},{isScale:!1,isLabel:!1,color:"green",isDouble:!0},{gradient:"black",color:"#900202",max:1500.5,from:500.2,to:1000.3,step:3.7,min:-100.2,separate:".",postfix:"€",scalePostfix:"€",trackPostfix:"€",isColor:!1,onlyDivisions:!1}];$(".js-slider").each((function(e,t){new n.Demo($(t).colorSlider(a[e]).colorSlider("change"))}))},function(e,t,s){"use strict";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,s=1,n=arguments.length;s<n;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Demo=void 0;var i=s(18),a=function(){function e(e){this.slider=e,this.state=e.getOptions(),this.demoTools=this.createTools(),this.init()}return e.prototype.upData=function(e){this.state=n(n({},this.state),e),this.initTools()},e.prototype.init=function(){this.createSettings(),this.initTools(),this.upData=this.upData.bind(this),this.slider.emitter.subscribe("newData",this.upData)},e.prototype.createTools=function(){var e=document.createElement("div");return e.className="panel__tools",e},e.prototype.createSettings=function(){this.slider.element.after(this.demoTools),this.demoTools.insertAdjacentHTML("beforeend",i.demoTemplate)},e.prototype.initTools=function(){var e=this,t=this.state,s=t.isScale,n=t.isLabel,i=t.from,a=t.to,o=t.min,r=t.max,l=t.postfix,c=t.step,u=t.color,d=t.isScalePostfix,p=t.scalePostfix,f=t.minMax,h=t.fromTo,m=t.isTrackPostfix,_=t.trackPostfix,v=t.isColor,b=t.gradient,y=t.isColorOut,g=t.changeColor,S=t.isGradient,x=t.gradientDeg,k=t.onlyDivisions,j=t.isPostfix,T=t.isChangeColor,P=t.separate,C=t.isSeparate,w=t.isPrefix,M=t.isVertical,D=t.isDouble,O=this.demoTools.querySelector(".js-btn-scale"),N=this.demoTools.querySelector(".js-btn-view"),L=this.demoTools.querySelector(".js-btn-postfix"),E=this.demoTools.querySelector(".js-btn-color"),q=this.demoTools.querySelector(".js-menu-scale"),V=this.demoTools.querySelector(".js-menu-view"),R=this.demoTools.querySelector(".js-menu-postfix"),H=this.demoTools.querySelector(".js-color-setting"),B=this.demoTools.querySelector(".js-orientation"),z=this.demoTools.querySelector(".js-isScale"),A=this.demoTools.querySelector(".js-isColorOut"),F=this.demoTools.querySelector(".js-isLabel"),$=this.demoTools.querySelector(".js-isDouble"),G=this.demoTools.querySelector(".js-from"),I=this.demoTools.querySelector(".js-to"),U=this.demoTools.querySelector(".js-min"),W=this.demoTools.querySelector(".js-max"),X=this.demoTools.querySelector(".js-marker"),Y=this.demoTools.querySelector(".js-step"),Z=this.demoTools.querySelector(".js-separate"),J=this.demoTools.querySelector(".js-color"),Q=this.demoTools.querySelector(".js-isPostfix"),K=this.demoTools.querySelector(".js-isPrefix-all"),ee=this.demoTools.querySelector(".js-scale-postfix"),te=this.demoTools.querySelector(".js-isChangeColor"),se=this.demoTools.querySelector(".js-minMax"),ne=this.demoTools.querySelector(".js-isScaleDel"),ie=this.demoTools.querySelector(".js-fromTo"),ae=this.demoTools.querySelector(".js-division"),oe=this.demoTools.querySelector(".js-isTrackPostfix"),re=this.demoTools.querySelector(".js-isPostfixTool"),le=this.demoTools.querySelector(".js-track-postfix"),ce=this.demoTools.querySelector(".js-isColor"),ue=this.demoTools.querySelector(".js-changeColor"),de=this.demoTools.querySelector(".js-gradient"),pe=this.demoTools.querySelector(".js-gradient-out"),fe=this.demoTools.querySelector(".js-gradient-deg");N.onclick=function(){V.classList.toggle("panel__close")},O.onclick=function(){q.classList.toggle("panel__close")},E.onclick=function(){H.classList.toggle("panel__close")},L.onclick=function(){R.classList.toggle("panel__close")},B.onchange=function(){!1===M&&e.setState({isVertical:!0}),!0===M&&e.setState({isVertical:!1})},Q.onchange=function(){!0===d&&e.setState({isScalePostfix:!1}),!1===d&&e.setState({isScalePostfix:!0})},re.onchange=function(){!0===j&&e.setState({isPostfix:!1}),!1===j&&e.setState({isPostfix:!0})},K.onchange=function(){!0===w&&e.setState({isPrefix:!1}),!1===w&&e.setState({isPrefix:!0})},de.onchange=function(){!0===S&&e.setState({isGradient:!1}),!1===S&&e.setState({isGradient:!0})},te.onchange=function(){!0===T&&e.setState({isChangeColor:!1}),!1===T&&e.setState({isChangeColor:!0})},ne.onchange=function(){!0===C&&e.setState({isSeparate:!1}),!1===C&&e.setState({isSeparate:!0})},A.onchange=function(){!0===y&&e.setState({isColorOut:!1}),!1===y&&e.setState({isColorOut:!0})},z.onchange=function(){!1===s?e.setState({isScale:!0}):e.setState({isScale:!1})},F.onchange=function(){!0===n&&e.setState({isLabel:!1}),!1===n&&e.setState({isLabel:!0})},$.onchange=function(){!1===D&&e.setState({isDouble:!0}),!0===D&&e.setState({isDouble:!1})},se.onchange=function(){!1===f?e.setState({minMax:!0}):e.setState({minMax:!1})},ie.onchange=function(){!1===h?e.setState({fromTo:!0}):e.setState({fromTo:!1})},ae.onchange=function(){!1===k?e.setState({onlyDivisions:!0}):e.setState({onlyDivisions:!1})},oe.onchange=function(){!1===m?e.setState({isTrackPostfix:!0}):e.setState({isTrackPostfix:!1})},ce.onchange=function(){!0===v?e.setState({isColor:!1}):e.setState({isColor:!0})},ue.onchange=function(){!0===g?e.setState({changeColor:!1}):e.setState({changeColor:!0})},X.value=l,X.onchange=function(){var t=X.value;e.setState({postfix:t})},G.value=String(i),G.onchange=function(){var t=Number(G.value);e.setState({from:t})},I.value=String(a),I.onchange=function(){var t=Number(I.value);e.setState({to:t})},U.value=String(o),U.onchange=function(){var t=Number(U.value);e.setState({min:t})},W.value=String(r),W.onchange=function(){var t=Number(W.value);e.setState({max:t})},Y.value=String(c),Y.onchange=function(){var t=Number(Y.value);e.setState({step:t})},J.value=String(u),J.onchange=function(){var t=J.value;e.setState({color:t})},pe.value=String(b),pe.onchange=function(){var t=pe.value;e.setState({gradient:t})},fe.value=String(x),fe.onchange=function(){var t=Number(fe.value);e.setState({gradientDeg:t})},ee.value=p,ee.onchange=function(){var t=ee.value;e.setState({scalePostfix:t})},le.value=_,le.onchange=function(){var t=le.value;e.setState({trackPostfix:t})},Z.value=void 0===P||" "===P?" ":P,Z.onchange=function(){var t=Z.value;"."!==t&&","!==t&&(t=" "),e.setState({separate:t})}},e.prototype.setState=function(e){this.state=n(n({},this.state),e),this.slider.setOptions(this.state),this.slider.upDataView()},e}();t.Demo=a},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.demoTemplate=void 0;t.demoTemplate='\n\n\n<h4  class="panel__title">Панель управления</h4>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">V/H Вид\n<input type="checkbox" class="panel__checkbox panel__inputs js-orientation" name="orientation" />\n</label>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isLabel" name="label"/>\n</label>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Range/Single\n<input type="checkbox" class="panel__checkbox panel__inputs js-isDouble" name="double"/>\n</label>\n</div>\n\n<button class="panel__button js-btn-view">Настройки отображения</button>\n<div class="panel__menu js-menu-view">\n\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать min/max\n<input type="checkbox" class="panel__checkbox panel__inputs js-minMax" name="minMax"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать from/to\n<input type="checkbox" class="panel__checkbox panel__inputs js-fromTo" name="fromTo"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Добавить/убрать разделитель\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScaleDel" name="scale"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Делитель\n<input type="text" class="panel__inputs js-separate" name="separate"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Выводить цвета/значения\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColorOut" name="color"/>\n</label>\n</div>\n\n\n\n<button type="button" class="panel__button js-btn-scale">Управление шкалой</button>\n<div class="panel__menu js-menu-scale">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Шкала с делениями/значениями\n<input type="checkbox" class="panel__checkbox panel__inputs js-division" name="division"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Шкалу\n<input type="checkbox" class="panel__checkbox panel__inputs js-isScale" name="scale"/>\n</label>\n</div>\n</div>\n</div>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Max\n<input type="number" class="panel__inputs js-max" name="max"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Min\n<input type="number" class="panel__inputs js-min" name="min"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">From\n<input type="number" class="panel__inputs js-from" name="from" />\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">To\n<input type="number" class="panel__inputs js-to" name="to"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Шаг\n<input type="number" class="panel__inputs js-step" name="step"/>\n</label>\n</div>\n</div>\n\n\n<button class="panel__button js-btn-color" type="button">Настройки цвета</button>\n<div class="panel__menu js-color-setting">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Откл/Вкл изменение цвета\n<input type="checkbox" class="panel__checkbox panel__inputs js-isColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Использовать только css/переменной цвет\n<input type="checkbox" class="panel__checkbox panel__inputs js-isChangeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Сменить оттенок\n<input type="checkbox" class="panel__checkbox panel__inputs js-changeColor" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Градиент вкл/откл\n<input type="checkbox" class="panel__checkbox panel__inputs js-gradient" name="isColor"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Цвет\n<input type="text" class="panel__inputs js-color" name="color"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Градиент\n<input type="text" class="panel__inputs js-gradient-out" name="gradient"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Угол градиента\n<input type="number" class="panel__inputs js-gradient-deg" name="gradient"/>\n</label>\n</div>\n</div>\n\n\n<button type="button" class="panel__button js-btn-postfix">Postfix/Prefix</button>\n<div class="panel__menu js-menu-postfix">\n<div class="panel__items">\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Добавить/убрать Префикс tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPrefix-all" name="isPrefix"/>\n</label>\n</div>\n<label class="panel__labels panel__checkboxes js-label-postfix">Показать/Скрыть Pre/Postfix tooltip\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfixTool" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix шкалы\n<input type="checkbox" class="panel__checkbox panel__inputs js-isPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels panel__checkboxes">Показать/Скрыть Pre/Postfix track\n<input type="checkbox" class="panel__checkbox panel__inputs js-isTrackPostfix" name="isPrefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix tooltip\n<input type="text" class="panel__inputs js-marker" name="marker"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix шкалы\n<input type="text" class="panel__inputs js-scale-postfix" name="js-prefix"/>\n</label>\n</div>\n<div class="panel__items">\n\n<label class="panel__labels">Pre/Postfix track\n<input type="text" class="panel__inputs js-track-postfix" name="js-prefix"/>\n</label>\n</div>\n</div>\n\n'},function(e,t,s){var n=s(4),i=s(20);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var a={insert:"head",singleton:!1};n(i,a);e.exports=i.locals||{}},function(e,t,s){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,