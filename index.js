!function(e){var t={};function s(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)s.d(i,o,function(t){return e[t]}.bind(null,o));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=14)}([function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var i=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var s=this.events[e];s&&s.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var i={orientation:"horizontal",type:"double",min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:s(11).allColors};t.standardOptions=i},function(e,t,s){"use strict";var i,o=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},n=function(){var e={};return function(t){if(void 0===e[t]){var s=document.querySelector(t);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(e){s=null}e[t]=s}return e[t]}}(),a=[];function r(e){for(var t=-1,s=0;s<a.length;s++)if(a[s].identifier===e){t=s;break}return t}function l(e,t){for(var s={},i=[],o=0;o<e.length;o++){var n=e[o],l=t.base?n[0]+t.base:n[0],c=s[l]||0,u="".concat(l," ").concat(c);s[l]=c+1;var d=r(u),f={css:n[1],media:n[2],sourceMap:n[3]};-1!==d?(a[d].references++,a[d].updater(f)):a.push({identifier:u,updater:b(f,t),references:1}),i.push(u)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var o=s.nc;o&&(i.nonce=o)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var a=n(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function f(e,t,s,i){var o=s?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=d(t,o);else{var n=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(n,a[t]):e.appendChild(n)}}function p(e,t,s){var i=s.css,o=s.media,n=s.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),n&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h=null,m=0;function b(e,t){var s,i,o;if(t.singleton){var n=m++;s=h||(h=c(t)),i=f.bind(null,s,n,!1),o=f.bind(null,s,n,!0)}else s=c(t),i=p.bind(null,s,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(s)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var s=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<s.length;i++){var o=r(s[i]);a[o].references--}for(var n=l(e,t),c=0;c<s.length;c++){var u=r(s[c]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}s=n}}}},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var o in t=arguments[s])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=s(4),n=s(1);s(12),function(e){e.fn.colorSlider=function(e){var t={init:function(e,t){var s=i(i({},n.standardOptions),t);return e.data("presenter",new o.Presenter(s,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe("newData",t),void 0===t||e.data("presenter").emitter.subscribe("newData",t),this}};return"string"==typeof e&&"change"===e?t[e].call(this,this,arguments[1]):("string"==typeof e&&"getValue"===e&&t[e].call(this,this,arguments[1]),"object"!=typeof e&&e?void 0:t.init(this,e))}}(jQuery)},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var o in t=arguments[s])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var o=s(5),n=s(6),a=s(0),r=s(1),l=function(){function e(e,t){this.element=t,this.emitter=new a.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=i(i({},r.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new o.Model(e)},e.prototype.createView=function(e,t){return new n.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe("newData",this.getNewData),this.view.emitter.subscribe("newPosition",this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit("newData",e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,s=i(i({},t),e);this.model.setData(s)},e}();t.Presenter=l},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var o in t=arguments[s])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var o=s(0),n=function(){function e(e){this.emitter=new o.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),s=this.validateMinMaxStep(e);this.state=i(i(i({},e),t),s),this.emitter.emit("newData",this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,s=e.max,i=e.step;i<1&&(e.step=1);var o=Math.abs(s)/2;return i>o&&(e.step=o),s<=t&&s<0&&(e.min=t-i),t>=s&&s>0&&(e.min=t,e.max=t+i),s<0&&s<t&&(e.max=t+i,e.min=t),e},e.prototype.validateFromTo=function(e){var t=e.from,s=e.to,i=e.max,o=e.min,n=e.type,a=e.step;return"single"===n&&(e.to=i),o>t&&(e.from=o),s>i&&(e.to=i),i<0&&0===o&&(e.from=o,e.to=o),"double"===n&&t>=s&&(e.from=s-a),s<=o&&(e.to=o+a,e.from=o),t>0&&o<0&&i<0&&(e.from=o),i<o&&(e.to=o+a),e},e}();t.Model=n},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var o in t=arguments[s])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var o=s(0),n=s(7),a=s(8),r=s(9),l=s(10),c=function(){function e(e,t){this.emitter=new o.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),s=this.getOneStep(e),o=this.slider;return i(i({},e),{size:t,oneStep:s,slider:o})},e.prototype.createSlider=function(e,t){var s=e.orientation,i=document.createElement("div");return i.className="slider slider_"+s,t.append(i),i},e.prototype.createTrack=function(e){return new a.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new n.Rollers(e)},e.prototype.createScale=function(e){return new r.Scale(e)},e.prototype.upData=function(e){var t=i(i({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.upData(t),this.state=i({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,s=e.max,i=e.step,o=Math.ceil((s-t)/i);return this.getSliderSize(e)/o},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var s=this.drag.bind(this,t),i=function(){document.removeEventListener("mousemove",s),t.removeEventListener("touchmove",s),document.removeEventListener("mouseup",i),t.removeEventListener("touchend",i)};document.addEventListener("mousemove",s),t.addEventListener("touchmove",s),document.addEventListener("mouseup",i),t.addEventListener("touchend",i)}},e.prototype.drag=function(e,t){var s=this.state.orientation,i=0;t.preventDefault(),/roller/.test(e.className)&&(i="horizontal"===s?"touchmove"===t.type?this.convertPxToValue(t.touches[0].clientX):this.convertPxToValue(t.clientX):"touchmove"===t.type?this.convertPxToValue(t.touches[0].clientY):this.convertPxToValue(t.clientY),this.updatePosition(i,e))},e.prototype.getTargetType=function(e){var t=this.slider.querySelectorAll(".slider__roller");return t[0]&&t[0].contains(e)?"from":t[1].contains(e)?"to":"undefined"},e.prototype.handleScaleClick=function(e){var t,s=this.state.scalePostfix,i=this.state.separate;" "===i&&(i="&nbsp;");var o=e.detail.value.split(s).join("");t=Math.floor(o.split(i).join("")),this.updatePosition(t)},e.prototype.handleTrackClick=function(e){var t=this.state.orientation,s=e.target,i=0;if(!/scale/.test(s.className)){i="horizontal"===t?e.clientX:e.clientY;var o=this.convertPxToValue(i);this.updatePosition(o)}},e.prototype.updatePosition=function(e,t){var s=this.state,i=s.from,o=s.to,n=s.type,a=s.step;this.convertValueToColor(e);var r=Math.abs(i-e),l=Math.abs(o-e);"single"===n&&r?this.emitter.emit("newPosition",{from:e}):t?"from"===this.getTargetType(t)?(e>o-a&&(e=i),this.emitter.emit("newPosition",{from:e})):(e<i+a&&(e=o),this.emitter.emit("newPosition",{to:e})):"from"===(r<l?"from":"to")?this.emitter.emit("newPosition",{from:e}):this.emitter.emit("newPosition",{to:e})},e.prototype.convertPxToValue=function(e){var t=this.state,s=t.min,i=t.max,o=t.step,n=t.oneStep,a=t.size,r=t.orientation,l=this.getSliderPosition(),c=0;return(c="horizontal"===r?e-l:l+a-e)>a?i:c<0?s:Math.round(c/n)*o+s},e.prototype.convertValueToColor=function(e){var t=this.state,s=t.color,i=t.gradient,o=this.state,n=o.max,a=o.isColor,r=o.changeColor,l=e/n;if(!0===a){var c=0,u=0;!1===r?(c=Math.round(255*l*255*255),u=Math.round(255*l*254*254)):(c=Math.round(256*l*256*255),u=Math.round(254*l*254*254));var d=Math.abs(u);s="#"+Math.abs(c).toString(16),i="#"+d.toString(16),this.emitter.emit("newPosition",{color:s}),this.emitter.emit("newPosition",{gradient:i})}},e.prototype.getSliderPosition=function(){var e=this.state,t=e.orientation,s=e.slider;return"horizontal"===t?s.getBoundingClientRect().left:s.getBoundingClientRect().top},e.prototype.getSliderSize=function(e){return"horizontal"===e.orientation?this.slider.getBoundingClientRect().width:this.slider.getBoundingClientRect().height},e}();t.View=c},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=e.orientation,i=document.createElement("div");i.className="slider__roller slider__roller_first slider__roller_"+s;var o=document.createElement("div");o.className="slider__roller_second\n      slider__roller\n      slider__roller_"+s,t.append(i),t.append(o),this.createTooltip(i,o,e),this.moveRollersAtValue(e,i,o),this.toggleRollers(e,o),this.updataColor(e,i,o)},e.prototype.createTooltip=function(e,t,s){var i=s.orientation,o=document.createElement("div");o.className="slider__tooltip_first slider__tooltip slider__tooltip_"+i;var n=document.createElement("div");n.className="slider__tooltip_second slider__tooltip slider__tooltip_"+i,e.append(o),t.append(n),this.updataOutTooltip(o,n,s)},e.prototype.updataOutTooltip=function(e,t,s){var i=s.to,o=s.from,n=s.isPostfix,a=s.isLabel,r=s.isPrefix,l=s.postfix;!1===n&&(l=""),!0===a&&(e.innerHTML=""+this.separate(o,s)+l,t.innerHTML=""+this.separate(i,s)+l,!0===r&&(e.innerHTML=""+l+this.separate(o,s),t.innerHTML=""+l+this.separate(i,s))),this.setColor(e,t,s)},e.prototype.separate=function(e,t){var s=t.isSeparate,i=t.separate,o="";return!1===s?o=e.toString():(","===i&&(i="en-US"),"."===i&&(i="de-DE")," "===i&&(i=void 0),o=e.toLocaleString(i)),o},e.prototype.setColor=function(e,t,s){var i=s.color,o=s.gradient,n=s.isColorOut,a=s.allColors,r=s.isChangeColor,l=s.isLabel,c=a[i],u=a[o];void 0===u&&(u=o),void 0===c&&(c=i),!0===r&&!0===n&&(e.innerHTML=String(c),t.innerHTML=String(u),e.style.backgroundColor=""+i,t.style.backgroundColor=""+o,e.classList.add("slider__tooltip_bg"),t.classList.add("slider__tooltip_bg")),!1===l&&(e.classList.add("slider__tooltip_display-none"),t.classList.add("slider__tooltip_display-none"))},e.prototype.updataColor=function(e,t,s){var i=e.color,o=e.isGradient,n=e.gradient,a=e.isChangeColor,r=e.gradientDeg;!0===a&&(!0===o?(t.style.background="linear-gradient("+r+"deg, "+i+", "+n+")",s.style.background="linear-gradient("+r+"deg, "+i+", "+n+")"):(t.style.background=i,s.style.background=i))},e.prototype.moveRollersAtValue=function(e,t,s){var i=e.to,o=e.from,n=e.orientation,a=this.convertValueToPx(i,e),r=this.convertValueToPx(o,e),l=this.convertPxToProcent(a,e),c=this.convertPxToProcent(r,e);"horizontal"===n?(t.style.left=c+"%",s.style.left=l+"%"):(t.style.bottom=c+"%",s.style.bottom=l+"%")},e.prototype.upData=function(e){var t=e.slider,s=t.querySelector(".slider__roller_first"),i=t.querySelector(".slider__roller_second"),o=t.querySelector(".slider__tooltip_first"),n=t.querySelector(".slider__tooltip_second");this.moveRollersAtValue(e,s,i),this.toggleRollers(e,i),this.updataColor(e,s,i),this.updataOutTooltip(o,n,e)},e.prototype.convertValueToPx=function(e,t){var s=t.min,i=t.max,o=t.step,n=t.size,a=t.oneStep;return e===i?n:Math.round((e-s)/o)*a},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e,t){var s=e.type;t.style.display="single"===s?"none":"block"},e}();t.Rollers=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=e.orientation,i=document.createElement("div");i.className="slider__track slider__track_"+s,t.append(i),this.createOutElement(i,e)},e.prototype.createOutElement=function(e,t){var s=t.orientation,i=document.createElement("div"),o=document.createElement("div");i.className="slider__out slider__out-start slider__out-start_"+s,o.className="slider__out slider__out-end slider__out-end_"+s,e.append(i),e.append(o),this.setStartEndTrackOut(i,o,t)},e.prototype.setStartEndTrackOut=function(e,t,s){var i=s.min,o=s.max,n=s.from,a=s.to,r=s.minMax,l=s.fromTo,c=s.isTrackPostfix,u=s.isPrefix,d=s.trackPostfix;!1===c&&(d=""),!0===r&&(e.innerHTML=""+this.separate(i,s)+d,t.innerHTML=""+this.separate(o,s)+d),!0===l&&(e.innerHTML=""+this.separate(n,s)+d,t.innerHTML=""+this.separate(a,s)+d),!0===u&&(!0===r&&(e.innerHTML=""+d+this.separate(i,s),t.innerHTML=""+d+this.separate(o,s)),!0===l&&(e.innerHTML=""+d+this.separate(n,s),t.innerHTML=""+d+this.separate(a,s)))},e.prototype.separate=function(e,t){var s=t.isSeparate,i=t.separate,o="";return!1===s?o=e.toString():(","===i&&(i="en-US"),"."===i&&(i="de-DE")," "===i&&(i=void 0),o=e.toLocaleString(i)),o},e.prototype.upData=function(e){var t=e.slider,s=t.querySelector(".slider__out-start"),i=t.querySelector(".slider__out-end");this.setStartEndTrackOut(s,i,e)},e}();t.Track=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=e.orientation,i=document.createElement("div");i.className="slider__scale slider__scale_"+s,t.append(i),this.addEventListeners(i),this.addScaleMarker(e,i),this.checkScale(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(".slider__scale");this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,s=e.slider,i=e.color;s.querySelectorAll(".slider__scale-value").forEach((function(e){!0===t?(e.setAttribute("data-text",""),e.classList.add("slider__scale-value_fs-0")):e.classList.add("slider__scale-value_fs-normal")})),document.documentElement.style.setProperty("--scale-color"," "+i)},e.prototype.checkScale=function(e,t){var s=e.isScale;!1===s&&(t.style.display="none"),!0===s&&(t.style.display="")},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var s=e.min,i=e.max,o=e.step,n=e.size,a=e.oneStep,r=this.getIncrement(e),l=r/o*a,c=document.createDocumentFragment(),u=0,d=s;d<i&&!(u>n-50);d+=r)this.createScaleMarker(c,d,u,e),u+=l;this.createScaleMarker(c,i,n,e),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,s=e.oneStep,i=e.step,o=Math.ceil(t/s);return Math.ceil(o/5)*i},e.prototype.createScaleMarker=function(e,t,s,i){var o=i.orientation,n=(i.isSeparate,i.isScalePostfix),a=i.isPrefix,r=i.scalePostfix;i.separate;t=Math.floor(t);var l=document.createElement("span");l.className="slider__scale-value slider__scale-value_"+o,e.append(l),!1===n&&(r=""),l.innerHTML=""+this.separate(t,i)+r,!0===a&&(l.innerHTML=""+r+this.separate(t,i)),this.updataScaleMarker(i);var c=this.convertPxToPercent(s,i);"horizontal"===o?l.style.left=c+"%":l.style.bottom=c+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target;if(t instanceof HTMLElement&&t.classList.contains("slider__scale-value")){var s=t.innerHTML,i=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:s}});t.dispatchEvent(i)}},e.prototype.separate=function(e,t){var s=t.isSeparate,i=t.separate,o="";return!1===s?o=e.toString():(","===i&&(i="en-US"),"."===i&&(i="de-DE")," "===i&&(i=void 0),o=e.toLocaleString(i)),o},e}();t.Scale=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var i=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,s=e.orientation,i=document.createElement("div");i.className="slider__bar slider__bar_"+s,t.append(i),this.updataColor(e,i),this.updataBar(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(".slider__bar");this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var s=e.color,i=e.isGradient,o=e.gradient,n=e.gradientDeg;!0===e.isChangeColor&&(t.style.background=!0===i?"linear-gradient("+n+"deg, "+s+", "+o+")":s)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(".slider__roller");return[this.calculatePosition(t[0],e),this.calculatePosition(t[1],e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var s="horizontal"===t.orientation?"left":"top",i=Number.parseInt(getComputedStyle(e).width,10);return e.getBoundingClientRect()[s]+i/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var s=e.type,i="horizontal"===e.orientation,o=i?"left":"top",n=i?"width":"height",a=this.getRollerPositions(e),r="single"===s,l=this.getNewSliderPos(e);if(r)if(i){var c=this.convertPxToProcent(Math.abs(a[1]-l),e);t.style[o]="0%",t.style[n]=c+"%"}else{c=100-(u=this.convertPxToProcent(Math.abs(a[1]-l),e));t.style[o]=u+"%",t.style[n]=c+"%"}else{var u=this.convertPxToProcent(Math.abs(a[0]-l),e);c=this.convertPxToProcent(Math.abs(a[1]-a[0]),e);t.style[o]=u+"%",t.style[n]=c+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.orientation,s=e.slider;return"horizontal"===t?s.getBoundingClientRect().left:s.getBoundingClientRect().top},e}();t.Bar=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,s){var i=s(2),o=s(13);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var n={insert:"head",singleton:!1};i(o,n);e.exports=o.locals||{}},function(e,t,s){},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=s(15);s(17),s(3);var o=$(".js-test-slider");o.colorSlider({isScale:!1,isChangeColor:!1}),o.colorSlider("getValue",(function(e){$(".js-custom-from").val(e.from),$(".js-custom-to").val(e.to)})),$(".js-custom-btn").click((function(){o.colorSlider("change",{color:"red",gradient:"blue",max:1e3,from:200,to:800,onlyDivisions:!0,fromTo:!0})}));var n=[{orientation:"vertical",type:"double",isColorOut:!0,onlyDivisions:!0},{gradient:"red",color:"#6698db",max:15e3,from:5e3,to:1e4,fromTo:!0,separate:"."},{orientation:"vertical",gradient:"blue",color:"yellow",postfix:"",scalePostfix:"",min:-5e3,max:-100,step:2,from:-4e3,to:-700,changeColor:!1,separate:","},{isGradient:!1,color:"black",max:1500,from:500,to:1e3,fromTo:!0,separate:" ",postfix:"$",scalePostfix:"$",trackPostfix:"$",isPrefix:!0,isColor:!1},{orientation:"horizontal",type:"single",isScale:!1,isLabel:!1,color:"green"},{gradient:"black",color:"#900202",max:1500.5,from:500.2,to:1000.3,step:3.7,min:-100.2,separate:".",postfix:"€",scalePostfix:"€",trackPostfix:"€",isColor:!1}];$(".js-toxin-slider").each((function(e,t){new i.Demo($(t).colorSlider(n[e]).colorSlider("change"))}))},function(e,t,s){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,s=1,i=arguments.length;s<i;s++)for(var o in t=arguments[s])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Demo=void 0;var o=s(16),n=function(){function e(e){this.slider=e,this.state=e.getOptions(),this.demoTools=this.createTools(),this.init()}return e.prototype.upData=function(e){this.state=i(i({},this.state),e),this.initTools()},e.prototype.init=function(){this.createSettings(),this.initTools(),this.upData=this.upData.bind(this),this.slider.emitter.subscribe("newData",this.upData)},e.prototype.createTools=function(){var e=document.createElement("div");return e.className="demoTools",e},e.prototype.createSettings=function(){this.slider.element.after(this.demoTools),this.demoTools.insertAdjacentHTML("beforeend",o.demoTemplate)},e.prototype.initTools=function(){var e=this,t=this.state,s=t.orientation,i=t.isScale,o=t.type,n=t.isLabel,a=t.from,r=t.to,l=t.min,c=t.max,u=t.postfix,d=t.step,f=t.color,p=t.isScalePostfix,h=t.scalePostfix,m=t.minMax,b=t.fromTo,v=t.isTrackPostfix,y=t.trackPostfix,g=t.isColor,j=t.gradient,S=t.isColorOut,x=t.changeColor,_=t.isGradient,k=t.gradientDeg,T=t.onlyDivisions,P=t.isPostfix,C=t.isChangeColor,w=t.separate,M=t.isSeparate,O=t.isPrefix,L=this.demoTools.querySelector(".js-btn-scale"),E=this.demoTools.querySelector(".js-btn-view"),D=this.demoTools.querySelector(".js-btn-postfix"),q=this.demoTools.querySelector(".js-btn-color"),N=this.demoTools.querySelector(".js-menu-scale"),z=this.demoTools.querySelector(".js-menu-view"),V=this.demoTools.querySelector(".js-menu-postfix"),R=this.demoTools.querySelector(".js-color-setting"),H=this.demoTools.querySelector(".js-orientation"),B=this.demoTools.querySelector(".js-isScale"),A=this.demoTools.querySelector(".js-isColorOut"),$=this.demoTools.querySelector(".js-isLabel"),G=this.demoTools.querySelector(".js-isDouble"),F=this.demoTools.querySelector(".js-from"),I=this.demoTools.querySelector(".js-to"),U=this.demoTools.querySelector(".js-min"),X=this.demoTools.querySelector(".js-max"),Y=this.demoTools.querySelector(".js-marker"),J=this.demoTools.querySelector(".js-step"),Q=this.demoTools.querySelector(".js-separate"),K=this.demoTools.querySelector(".js-color"),W=this.demoTools.querySelector(".js-isPostfix"),Z=this.demoTools.querySelector(".js-isPrefix-all"),ee=this.demoTools.querySelector(".js-scale-postfix"),te=this.demoTools.querySelector(".js-isChangeColor"),se=this.demoTools.querySelector(".js-minMax"),ie=this.demoTools.querySelector(".js-isScaleDel"),oe=this.demoTools.querySelector(".js-fromTo"),ne=this.demoTools.querySelector(".js-division"),ae=this.demoTools.querySelector(".js-isTrackPostfix"),re=this.demoTools.querySelector(".js-isPostfixTool"),le=this.demoTools.querySelector(".js-track-postfix"),ce=this.demoTools.querySelector(".js-isColor"),ue=this.demoTools.querySelector(".js-changeColor"),de=this.demoTools.querySelector(".js-gradient"),fe=this.demoTools.querySelector(".js-gradient-out"),pe=this.demoTools.querySelector(".js-gradient-deg");E.onclick=function(){z.classList.toggle("js-close-menu")},L.onclick=function(){N.classList.toggle("js-close-menu")},q.onclick=function(){R.classList.toggle("js-close-menu")},D.onclick=function(){V.classList.toggle("js-close-menu")},H.onchange=function(){"horizontal"===s&&e.setState({orientation:"vertical"}),"vertical"===s&&e.setState({orientation:"horizontal"})},W.onchange=function(){!0===p&&e.setState({isScalePostfix:!1}),!1===p&&e.setState({isScalePostfix:!0})},re.onchange=function(){!0===P&&e.setState({isPostfix:!1}),!1===P&&e.setState({isPostfix:!0})},Z.onchange=function(){!0===O&&e.setState({isPrefix:!1}),!1===O&&e.setState({isPrefix:!0})},de.onchange=function(){!0===_&&e.setState({isGradient:!1}),!1===_&&e.setState({isGradient:!0})},te.onchange=function(){!0===C&&e.setState({isChangeColor:!1}),!1===C&&e.setState({isChangeColor:!0})},ie.onchange=function(){!0===M&&e.setState({isSeparate:!1}),!1===M&&e.setState({isSeparate:!0})},A.onchange=function(){!0===S&&e.setState({isColorOut:!1}),!1===S&&e.setState({isColorOut:!0})},B.onchange=function(){!1===i?e.setState({isScale:!0}):e.setState({isScale:!1})},$.onchange=function(){!0===n&&e.setState({isLabel:!1}),!1===n&&e.setState({isLabel:!0})},G.onchange=function(){"single"===o?e.setState({type:"double"}):e.setState({type:"single"})},se.onchange=function(){!1===m?e.setState({minMax:!0}):e.setState({minMax:!1})},oe.onchange=function(){!1===b?e.setState({fromTo:!0}):e.setState({fromTo:!1})},ne.onchange=function(){!1===T?e.setState({onlyDivisions:!0}):e.setState({onlyDivisions:!1})},ae.onchange=function(){!1===v?e.setState({isTrackPostfix:!0}):e.setState({isTrackPostfix:!1})},ce.onchange=function(){!0===g?e.setState({isColor:!1}):e.setState({isColor:!0})},ue.onchange=function(){!0===x?e.setState({changeColor:!1}):e.setState({changeColor:!0})},Y.value=u,Y.onchange=function(){var t=Y.value;e.setState({postfix:t})},F.value=String(a),F.onchange=function(){var t=Number(F.value);e.setState({from:t})},I.value=String(r),I.onchange=function(){var t=Number(I.value);e.setState({to:t})},U.value=String(l),U.onchange=function(){var t=Number(U.value);e.setState({min:t})},X.value=String(c),X.onchange=function(){var t=Number(X.value);e.setState({max:t})},J.value=String(d),J.onchange=function(){var t=Number(J.value);e.setState({step:t})},K.value=String(f),K.onchange=function(){var t=K.value;e.setState({color:t})},fe.value=String(j),fe.onchange=function(){var t=fe.value;e.setState({gradient:t})},pe.value=String(k),pe.onchange=function(){var t=Number(pe.value);e.setState({gradientDeg:t})},ee.value=h,ee.onchange=function(){var t=ee.value;e.setState({scalePostfix:t})},le.value=y,le.onchange=function(){var t=le.value;e.setState({trackPostfix:t})},Q.value=void 0===w||" "===w?" ":w,Q.onchange=function(){var t=Q.value;"."!==t&&","!==t&&(t=" "),e.setState({separate:t})}},e.prototype.setState=function(e){this.state=i(i({},this.state),e),this.slider.setOptions(this.state),this.slider.upDataView()},e}();t.Demo=n},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.demoTemplate=void 0;t.demoTemplate='\n\n\n  <h4  class="js-title">Панель управления</h4>\n  <div class="js-items">\n   <label class="js-labels js-label_checkbox">V/H Вид\n   <input type="checkbox" class="js-checkbox js-inputs js-orientation" name="orientation" />\n   </label>\n   </div>\n     <div class="js-items">\n   <label class="js-labels js-label_checkbox">Range/Single\n   <input type="checkbox" class="js-checkbox js-inputs js-isDouble" name="double"/>\n   </label>\n   </div>\n   \n   <button class="js-btn js-btn-view">Настройки отображения</button>\n   <div class="js-menu js-menu-view">\n\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть Tooltip\n   <input type="checkbox" class="js-checkbox js-inputs js-isLabel" name="label"/>\n   </label>\n   </div>\n   \n \n   \n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать min/max\n   <input type="checkbox" class="js-checkbox js-inputs js-minMax" name="minMax"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать from/to\n   <input type="checkbox" class="js-checkbox js-inputs js-fromTo" name="fromTo"/>\n   </label>\n   </div>\n    <div class="js-items">\n   <label class="js-labels js-label_checkbox">Добавить/убрать разделитель\n   <input type="checkbox" class="js-checkbox js-inputs js-isScaleDel" name="scale"/>\n   </label>\n     </div>\n     <div class="js-items">\n   <label class="js-labels">Делитель\n   <input type="text" class="js-inputs js-separate" name="separate"/>\n   </label>\n   </div>\n    <div class="js-items">\n   <label class="js-labels js-label_checkbox">Выводить цвета/значения\n   <input type="checkbox" class="js-checkbox js-inputs js-isColorOut" name="color"/>\n   </label>\n   </div>\n  \n   \n   \n   <button type="button" class="js-btn js-btn-scale">Управление шкалой</button>\n   <div class="js-menu js-menu-scale">\n       <div class="js-items">\n   <label class="js-labels js-label_checkbox">Оставить только деления\n   <input type="checkbox" class="js-checkbox js-inputs js-division" name="division"/>\n   </label>\n   </div>\n      <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть Шкалу\n   <input type="checkbox" class="js-checkbox js-inputs js-isScale" name="scale"/>\n   </label>\n     </div>\n   </div>\n     \n   </div>\n   \n   \n   </div>\n    <div class="js-items">\n   <label class="js-labels">Max\n   <input type="number" class="js-inputs js-max" name="max"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">To\n   <input type="number" class="js-inputs js-to" name="to"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">From\n   <input type="number" class="js-inputs js-from" name="from" />\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Min\n   <input type="number" class="js-inputs js-min" name="min"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Шаг\n   <input type="number" class="js-inputs js-step" name="step"/>\n   </label>\n   </div>\n   </div>\n   \n   \n   <button class="js-btn js-btn-color" type="button">Настройки цвета</button>\n   <div class="js-menu js-color-setting">\n     <div class="js-items">\n   <label class="js-labels js-label_checkbox">Откл/Вкл изменение цвета\n   <input type="checkbox" class="js-checkbox js-inputs js-isColor" name="isColor"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Использовать только css/переменной цвет\n   <input type="checkbox" class="js-checkbox js-inputs js-isChangeColor" name="isColor"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Сменить оттенок\n   <input type="checkbox" class="js-checkbox js-inputs js-changeColor" name="isColor"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Градиент вкл/откл\n   <input type="checkbox" class="js-checkbox js-inputs js-gradient" name="isColor"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Цвет\n<input type="text" class="js-inputs js-color" name="color"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Градиент\n<input type="text" class="js-inputs js-gradient-out" name="gradient"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Угол градиента\n<input type="number" class="js-inputs js-gradient-deg" name="gradient"/>\n   </label>\n   </div>\n   </div>\n   \n   \n   <button type="button" class="js-btn js-btn-postfix">Postfix/Prefix</button>\n   <div class="js-menu js-menu-postfix">\n   <div class="js-items">\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Добавить/убрать Префикс tooltip\n   <input type="checkbox" class="js-checkbox js-inputs js-isPrefix-all" name="isPrefix"/>\n   </label>\n   </div>\n   <label class="js-labels js-label_checkbox js-label-postfix">Показать/Скрыть Pre/Postfix tooltip\n   <input type="checkbox" class="js-checkbox js-inputs js-isPostfixTool" name="isPrefix"/>\n   </label>\n   </div>\n      <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть Pre/Postfix шкалы\n   <input type="checkbox" class="js-checkbox js-inputs js-isPostfix" name="isPrefix"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels js-label_checkbox">Показать/Скрыть Pre/Postfix track\n   <input type="checkbox" class="js-checkbox js-inputs js-isTrackPostfix" name="isPrefix"/>\n   </label>\n   </div>\n   <div class="js-items">\n   <label class="js-labels">Pre/Postfix tooltip\n   <input type="text" class="js-inputs js-marker" name="marker"/>\n   </label>\n   </div>\n      <div class="js-items">\n   <label class="js-labels">Pre/Postfix шкалы\n<input type="text" class="js-inputs js-scale-postfix" name="js-prefix"/>\n   </label>\n   </div>\n    <div class="js-items">\n   <label class="js-labels">Pre/Postfix track\n<input type="text" class="js-inputs js-track-postfix" name="js-prefix"/>\n   </label>\n   </div>\n   </div>\n  \n  '},function(e,t,s){var i=s(2),o=s(18);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var n={insert:"head",singleton:!1};i(o,n);e.exports=o.locals||{}},function(e,t,s){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,