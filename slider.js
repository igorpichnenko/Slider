!function(e){var t={};function r(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(i,o,function(t){return e[t]}.bind(null,o));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=6)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.classNames=void 0;t.classNames={slider:"slider",sliderVertical:"slider slider_orientation-vertical",trackOutStart:"slider__out slider__out-start js-slider__out js-slider__out-start",trackOutEnd:"slider__out slider__out-end js-slider__out js-slider__out-end",findTrackOut:".js-slider__out",track:"slider__track js-slider__track",findTrack:".js-slider__track",scale:"slider__scale js-slider__scale ",findScale:".js-slider__scale",scaleFsZero:"slider__scale-value_not-visible",bar:"slider__bar js-slider__bar",findBar:".js-slider__bar",rollerFirst:"slider__roller js-slider__roller slider__roller_first js-slider__roller_first",rollerSecond:"slider__roller_second js-slider__roller js-slider__roller_second slider__roller",findRollers:".js-slider__roller",firstTooltip:"slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip",secondTooltip:"slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip",findFirstTooltip:".js-slider__tooltip_first",findSecondTooltip:".js-slider__tooltip_second",findTooltip:".js-slider__tooltip",tooltipWhite:"slider__tooltip_white",notVisible:"slider__element_not-visible",scaleMarker:"slider__scale-value  js-slider__scale-value",findScaleValue:".js-slider__scale-value",isScaleValue:"slider__scale-value",divisionValue:"slider__division-value js-slider__division-value slider__element-",isScaleDivison:"slider__division-value",division:"slider__division js-slider__division"}},function(e,t,r){"use strict";var i,o;Object.defineProperty(t,"__esModule",{value:!0}),t.Events=t.Direction=void 0,function(e){e[e.FORWARD=0]="FORWARD",e[e.BACKWARD=1]="BACKWARD",e[e.TARGET_FORWARD=2]="TARGET_FORWARD",e[e.TARGET_BACKWARD=3]="TARGET_BACKWARD"}(i||(i={})),t.Direction=i,function(e){e[e.NEW_DATA=0]="NEW_DATA",e[e.NEW_POSITION=1]="NEW_POSITION"}(o||(o={})),t.Events=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var i=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var r=this.events[e];r&&r.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var r=t.isSeparate,i=t.separate,o="";if(!1===r)o=e.toString();else{var s="."===i,a=" "===i;","===i&&(i="en-US"),s&&(i="de-DE"),a&&(i=void 0),o=e.toLocaleString(i)}return o}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var i={min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:r(14).allColors,isVertical:!1,isDouble:!1};t.standardOptions=i},function(e,t,r){"use strict";var i,o=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},s=function(){var e={};return function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[t]=r}return e[t]}}(),a=[];function n(e){for(var t=-1,r=0;r<a.length;r++)if(a[r].identifier===e){t=r;break}return t}function l(e,t){for(var r={},i=[],o=0;o<e.length;o++){var s=e[o],l=t.base?s[0]+t.base:s[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var u=n(d),f={css:s[1],media:s[2],sourceMap:s[3]};-1!==u?(a[u].references++,a[u].updater(f)):a.push({identifier:d,updater:m(f,t),references:1}),i.push(d)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var o=r.nc;o&&(i.nonce=o)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var a=s(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var d,u=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function f(e,t,r,i){var o=r?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=u(t,o);else{var s=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(s,a[t]):e.appendChild(s)}}function p(e,t,r){var i=r.css,o=r.media,s=r.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h=null,v=0;function m(e,t){var r,i,o;if(t.singleton){var s=v++;r=h||(h=c(t)),i=f.bind(null,r,s,!1),o=f.bind(null,r,s,!0)}else r=c(t),i=p.bind(null,r,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var r=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<r.length;i++){var o=n(r[i]);a[o].references--}for(var s=l(e,t),c=0;c<r.length;c++){var d=n(r[c]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}r=s}}}},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},o=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var i=Array(e),o=0;for(t=0;t<r;t++)for(var s=arguments[t],a=0,n=s.length;a<n;a++,o++)i[o]=s[a];return i};Object.defineProperty(t,"__esModule",{value:!0});var s=r(7),a=r(1),n=r(4);r(15),jQuery.fn.colorSlider=function(e){for(var t,r=[],l=1;l<arguments.length;l++)r[l-1]=arguments[l];var c={init:function(e,t){var r=i(i({},n.standardOptions),t);return e.data("presenter",new s.Presenter(r,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe(a.Events.NEW_DATA,t),void 0===t||e.data("presenter").emitter.subscribe(a.Events.NEW_DATA,t),this}},d="object"==typeof e||!e;return"string"==typeof e?(t=c[e]).call.apply(t,o([this,this],r)):d?c.init(this,e):void 0}},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var o=r(8),s=r(9),a=r(1),n=r(2),l=r(4),c=function(){function e(e,t){this.element=t,this.emitter=new n.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=i(i({},l.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new o.Model(e)},e.prototype.createView=function(e,t){return new s.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe(a.Events.NEW_DATA,this.getNewData),this.view.emitter.subscribe(a.Events.NEW_POSITION,this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit(a.Events.NEW_DATA,e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,r=i(i({},t),e);this.model.setData(r)},e}();t.Presenter=c},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var o=r(1),s=r(2),a=function(){function e(e){this.emitter=new s.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),r=this.validateMinMaxStep(e);this.state=i(i(i({},e),t),r),this.emitter.emit(o.Events.NEW_DATA,this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,r=e.max,i=e.step;i<=0&&(e.step=.1);var o=t>=r&&r>0||r<0&&r<t;return r<=t&&r<0&&(e.min=t-i),o&&(e.min=t,e.max=t+i),e},e.prototype.validateFromTo=function(e){var t=e.from,r=e.to,i=e.max,o=e.min,s=e.step,a=e.isDouble;a&&(e.to=i);var n=i<0&&0===o,l=!a&&t>=r,c=t>0&&(o<0&&i<0);return t>i&&(e.from=i-s),t<o&&(e.from=o),r>i&&(e.to=i),n&&(e.from=o,e.to=o),l&&(e.from=r-s),c&&(e.from=o),r<=o&&(e.to=o+s,e.from=o),i<o&&(e.to=o+s),e},e}();t.Model=a},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var o=r(2),s=r(10),a=r(11),n=r(12),l=r(13),c=r(1),d=r(0),u=function(){function e(e,t){this.emitter=new o.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),r=this.getOneStep(e),o=this.slider;return i(i({},e),{size:t,oneStep:r,slider:o})},e.prototype.createSlider=function(e,t){var r=e.isVertical,i=document.createElement("div");return i.className=d.classNames.slider,r&&(i.className=d.classNames.sliderVertical),t.append(i),i},e.prototype.createTrack=function(e){return new a.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new s.Rollers(e)},e.prototype.createScale=function(e){return new n.Scale(e)},e.prototype.upData=function(e){var t=i(i({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.setOut(t),this.state=i({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,r=e.max,i=e.step,o=Math.ceil((r-t)/i);return this.getSliderSize(e)/o},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var r=this.drag.bind(this,t),i=function(){document.removeEventListener("mousemove",r),t.removeEventListener("touchmove",r),document.removeEventListener("mouseup",i),t.removeEventListener("touchend",i)};document.addEventListener("mousemove",r),t.addEventListener("touchmove",r),document.addEventListener("mouseup",i),t.addEventListener("touchend",i)}},e.prototype.drag=function(e,t){var r=this.state.isVertical;t.preventDefault();var i=0;if(!!/tooltip || roller/.test(e.className)){var o="touchmove"===t.type&&!r,s="mousemove"===t.type&&!r,a="touchmove"===t.type&&r,n="mousemove"===t.type&&r;o&&(i=this.convertPxToValue(t.touches[0].clientX)),s&&(i=this.convertPxToValue(t.clientX)),a&&(i=this.convertPxToValue(t.touches[0].clientY)),n&&(i=this.convertPxToValue(t.clientY)),this.updatePosition(i,e)}},e.prototype.getTargetType=function(e){var t=c.Direction.TARGET_FORWARD,r=c.Direction.TARGET_BACKWARD,i=this.slider.querySelectorAll(d.classNames.findRollers),o=[i[0],i[1]],s=o[1];return o[0].contains(e)?t:s.contains(e)?r:"undefined"},e.prototype.handleScaleClick=function(e){var t,r=this.state.scalePostfix,i=this.state.separate;" "===i&&(i="&nbsp;"),t=e.detail.value.split(r).join("").split(i).join("");var o=String(t).split(",").join(".");this.updatePosition(Number(o))},e.prototype.handleTrackClick=function(e){var t=this.state.isVertical,r=e.target,i=0;if(!/scale/.test(r.className)){i=t?e.clientY:e.clientX;var o=this.convertPxToValue(i);this.updatePosition(o)}},e.prototype.updatePosition=function(e,t){var r=this.state,i=r.from,o=r.to,s=r.step,a=r.isDouble,n=c.Direction.FORWARD,l=c.Direction.BACKWARD,d=c.Direction.TARGET_FORWARD,u=c.Direction.TARGET_BACKWARD,f=c.Events.NEW_POSITION,p=Math.abs(i-e),h=Math.abs(o-e);if(a&&p)return this.emitter.emit(f,{from:e}),void this.convertValueToColor(e);var v=p<h?n:l,m=!t&&v===l;!t&&v===n&&(this.emitter.emit(f,{from:e}),this.convertValueToColor(e)),m&&(this.emitter.emit(f,{to:e}),this.convertValueToColor(e));var b=t&&this.getTargetType(t),g=b===d&&!a,y=b===u&&!a,_=y&&e<i+s;g&&e>o-s?this.emitter.emit(f,{from:o-s}):(g&&(this.emitter.emit(f,{from:e}),this.convertValueToColor(e)),_?this.emitter.emit(f,{to:i+s}):y&&(this.emitter.emit(f,{to:e}),this.convertValueToColor(e)))},e.prototype.convertPxToValue=function(e){var t=this.state,r=t.min,i=t.max,o=t.step,s=t.oneStep,a=t.size,n=t.isVertical,l=this.getSliderPosition(),c=0;return(c=n?l+a-e:e-l)>a?i:c<0?r:Math.round(c/s)*o+r},e.prototype.convertValueToColor=function(e){var t=this.state,r=t.color,i=t.gradient,o=this.state,s=o.max,a=o.isColor,n=o.changeColor,l=e/s,d=a&&n,u=0,f=0;a&&!n&&(u=Math.round(255*l*255*255),f=Math.round(255*l*254*254)),d&&(u=Math.round(256*l*256*255),f=Math.round(254*l*254*254));var p=Math.abs(f);r="#"+Math.abs(u).toString(16),i="#"+p.toString(16);var h=c.Events.NEW_POSITION;this.emitter.emit(h,{color:r}),this.emitter.emit(h,{gradient:i})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e.prototype.getSliderSize=function(e){return e.isVertical?this.slider.getBoundingClientRect().height:this.slider.getBoundingClientRect().width},e}();t.View=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var i=r(3),o=r(0),s=function(){function e(e){this.rollers=this.create(e),this.tooltips=this.createTooltip(),this.moveRollersAtValue(e),this.toggleRollers(e)}return e.prototype.create=function(e){var t=e.slider,r=document.createElement("div");r.className=o.classNames.rollerFirst;var i=document.createElement("div");return i.className=o.classNames.rollerSecond,t.append(r),t.append(i),[r,i]},e.prototype.createTooltip=function(){var e=document.createElement("div");e.className=o.classNames.firstTooltip;var t=document.createElement("div");t.className=o.classNames.secondTooltip;var r=this.rollers,i=r[0],s=r[1];return i.append(e),s.append(t),[e,t]},e.prototype.updataOutTooltip=function(e){var t=e.to,r=e.from,o=e.isPostfix,s=e.isLabel,a=e.isPrefix,n=e.postfix,l=this.tooltips,c=l[0],d=l[1];o||(n="");var u=s&&a;s&&!a&&(c.innerHTML=""+i.correctSeparate(r,e)+n,d.innerHTML=""+i.correctSeparate(t,e)+n),u&&(c.innerHTML=""+n+i.correctSeparate(r,e),d.innerHTML=""+n+i.correctSeparate(t,e)),this.setColor(e)},e.prototype.setColor=function(e){var t=e.color,r=e.gradient,i=e.isColorOut,s=e.allColors,a=e.isChangeColor,n=e.isLabel,l=s[t],c=s[r];c||(c=r),l||(l=t);var d=this.tooltips,u=d[0],f=d[1];a&&i&&(u.innerHTML=String(l),f.innerHTML=String(c),u.style.backgroundColor=""+t,f.style.backgroundColor=""+r,u.classList.add(o.classNames.tooltipWhite),f.classList.add(o.classNames.tooltipWhite)),n||(u.classList.add(o.classNames.notVisible),f.classList.add(o.classNames.notVisible))},e.prototype.updataColor=function(e){var t=e.color,r=e.isGradient,i=e.gradient,o=e.isChangeColor,s=e.gradientDeg,a=this.rollers,n=a[0],l=a[1],c=o&&!r;o&&r&&(n.style.background="linear-gradient("+s+"deg, "+t+", "+i+")",l.style.background="linear-gradient("+s+"deg, "+t+", "+i+")"),c&&(n.style.background=t,l.style.background=t)},e.prototype.moveRollersAtValue=function(e){var t=e.to,r=e.from,i=e.isVertical,o=this.rollers,s=o[0],a=o[1],n=this.convertValueToPx(t,e),l=this.convertValueToPx(r,e),c=this.convertPxToProcent(n,e),d=this.convertPxToProcent(l,e);i?(s.style.bottom=d+"%",a.style.bottom=c+"%"):(s.style.left=d+"%",a.style.left=c+"%"),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.upData=function(e){this.moveRollersAtValue(e),this.toggleRollers(e),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.convertValueToPx=function(e,t){var r=t.min,i=t.max,o=t.step,s=t.size,a=t.oneStep;return e===i?s:Math.round((e-r)/o)*a},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e){var t=e.isDouble,r=this.rollers,i=r[0],s=r[1];t&&i?s.classList.add(o.classNames.notVisible):s.classList.remove(o.classNames.notVisible)},e}();t.Rollers=s},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var i=r(3),o=r(0),s=function(){function e(e){this.track=this.create(e),this.outElements=this.createOutElements(),this.setOut(e)}return e.prototype.create=function(e){var t=e.slider,r=document.createElement("div");return r.className=o.classNames.track,t.append(r),r},e.prototype.createOutElements=function(){var e=document.createElement("div"),t=document.createElement("div");return e.className=o.classNames.trackOutStart,t.className=o.classNames.trackOutEnd,this.track.append(e),this.track.append(t),[e,t]},e.prototype.setOut=function(e){var t=e.min,r=e.max,o=e.from,s=e.to,a=e.minMax,n=e.fromTo,l=e.isTrackPostfix,c=e.isPrefix,d=e.trackPostfix;l||(d="");var u=this.outElements,f=u[0],p=u[1];a&&(f.innerHTML=""+i.correctSeparate(t,e)+d,p.innerHTML=""+i.correctSeparate(r,e)+d),n&&(f.innerHTML=""+i.correctSeparate(o,e)+d,p.innerHTML=""+i.correctSeparate(s,e)+d);var h=n&&c;a&&c&&(f.innerHTML=""+d+i.correctSeparate(t,e),p.innerHTML=""+d+i.correctSeparate(r,e)),h&&(f.innerHTML=""+d+i.correctSeparate(o,e),p.innerHTML=""+d+i.correctSeparate(s,e))},e}();t.Track=s},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var o=r(3),s=r(0),a=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,r=document.createElement("div");r.className=s.classNames.scale,t.append(r),this.addEventListeners(r),this.addScaleMarker(e,r),this.checkScale(e,r)},e.prototype.upData=function(e){var t=e.slider.querySelector(s.classNames.findScale);this.options=i(i({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,r=e.slider,i=e.color;r.querySelectorAll(s.classNames.findScaleValue).forEach((function(e){t&&e.classList.add(s.classNames.scaleFsZero)})),document.documentElement.style.setProperty("--scale-color"," "+i)},e.prototype.checkScale=function(e,t){var r=e.isScale;r||t.classList.add(s.classNames.notVisible),r&&t.classList.remove(s.classNames.notVisible)},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var r=e.min,i=e.max,o=e.step,s=e.size,a=e.oneStep,n=this.getIncrement(e),l=n/o*a,c=document.createDocumentFragment(),d=0,u=0,f=r;f<i&&!(d>s-50);f+=n,u+=1){var p={fragment:c,value:f,position:d,options:e,val:u};this.createScaleMarker(p),d+=l}var h={fragment:c,value:i,position:s,options:e,val:5};this.createScaleMarker(h),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,r=e.oneStep,i=e.step,o=Math.ceil(t/r);return Math.ceil(o/5)*i},e.prototype.createScaleMarker=function(e){var t=e.fragment,r=e.value,i=e.position,a=e.options,n=e.val,l=a.isScalePostfix,c=a.isPrefix,d=a.onlyDivisions,u=a.isVertical,f=a.scalePostfix,p=document.createElement("span");p.className=s.classNames.scaleMarker;var h=document.createElement("span"),v=document.createElement("span");h.className=""+s.classNames.divisionValue+n,v.className=s.classNames.division,p.append(h),p.append(v),t.append(p);var m=h;d||(m=p),l||(f=""),m.innerHTML=""+o.correctSeparate(r,a)+f,c&&(m.innerHTML=""+f+o.correctSeparate(r,a)),this.updataScaleMarker(a);var b=this.convertPxToPercent(i,a);u?p.style.bottom=b+"%":p.style.left=b+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,r=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var i=!t.classList.contains(s.classNames.isScaleDivison)&&r,o=!t.classList.contains(s.classNames.isScaleValue)&&!r;if(!i&&!o){var a=t.innerHTML,n=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:a}});t.dispatchEvent(n)}}},e}();t.Scale=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var i=r(0),o=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,r=document.createElement("div");r.className=i.classNames.bar,t.append(r),this.updataColor(e,r),this.updataBar(e,r)},e.prototype.upData=function(e){var t=e.slider.querySelector(i.classNames.findBar);this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var r=e.color,i=e.isGradient,o=e.gradient,s=e.gradientDeg,a=e.isChangeColor,n=a&&!i;a&&i&&(t.style.background="linear-gradient("+s+"deg, "+r+", "+o+")"),n&&(t.style.background=r)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(i.classNames.findRollers),r=[t[0],t[1]],o=r[0],s=r[1];return[this.calculatePosition(o,e),this.calculatePosition(s,e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var r=t.isVertical,i=Number.parseInt(getComputedStyle(e).width,10);return r?e.getBoundingClientRect().top+i/2:e.getBoundingClientRect().left+i/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var r=e.isVertical,i=e.isDouble,o=r?"top":"left",s=r?"height":"width",a=this.getRollerPositions(e),n=this.getNewSliderPos(e);if(i&&!r){var l=this.convertPxToProcent(Math.abs(a[1]-n),e);t.style[o]="0%",t.style[s]=l+"%"}else{l=100-(c=this.convertPxToProcent(Math.abs(a[1]-n),e));t.style[o]=c+"%",t.style[s]=l+"%"}if(!i){var c=this.convertPxToProcent(Math.abs(a[0]-n),e);l=this.convertPxToProcent(Math.abs(a[1]-a[0]),e);t.style[o]=c+"%",t.style[s]=l+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e}();t.Bar=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,r){var i=r(5),o=r(16);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var s={insert:"head",singleton:!1};i(o,s);e.exports=o.locals||{}},function(e,t,r){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9saWJzL2NsYXNzTmFtZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9pbnRlcmZhY2VzL2ludGVyZmFjZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9FdmVudEVtaXR0ZXIvRXZlbnRFbWl0dGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvbGlicy9jb3JyZWN0U2VwYXJhdGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9pbnRlcmZhY2VzL3N0YW5kYXJkT3B0aW9ucy50cyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9zbGlkZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9QcmVzZW50ZXIvUHJlc2VudGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvTW9kZWwvTW9kZWwudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9WaWV3L1ZpZXcudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9WaWV3L1JvbGxlcnMvUm9sbGVycy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL1ZpZXcvVHJhY2svVHJhY2sudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NsaWRlci9WaWV3L1NjYWxlL1NjYWxlLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvVmlldy9CYXIvQmFyLnRzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZXIvaW50ZXJmYWNlcy9jb2xvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2xpZGVyL3NsaWRlci5zY3NzPzc5MWIiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjbGFzc05hbWVzIiwic2xpZGVyIiwic2xpZGVyVmVydGljYWwiLCJ0cmFja091dFN0YXJ0IiwidHJhY2tPdXRFbmQiLCJmaW5kVHJhY2tPdXQiLCJ0cmFjayIsImZpbmRUcmFjayIsInNjYWxlIiwiZmluZFNjYWxlIiwic2NhbGVGc1plcm8iLCJiYXIiLCJmaW5kQmFyIiwicm9sbGVyRmlyc3QiLCJyb2xsZXJTZWNvbmQiLCJmaW5kUm9sbGVycyIsImZpcnN0VG9vbHRpcCIsInNlY29uZFRvb2x0aXAiLCJmaW5kRmlyc3RUb29sdGlwIiwiZmluZFNlY29uZFRvb2x0aXAiLCJmaW5kVG9vbHRpcCIsInRvb2x0aXBXaGl0ZSIsIm5vdFZpc2libGUiLCJzY2FsZU1hcmtlciIsImZpbmRTY2FsZVZhbHVlIiwiaXNTY2FsZVZhbHVlIiwiZGl2aXNpb25WYWx1ZSIsImlzU2NhbGVEaXZpc29uIiwiZGl2aXNpb24iLCJEaXJlY3Rpb24iLCJFdmVudHMiLCJFdmVudEVtaXR0ZXIiLCJ0aGlzIiwiZXZlbnRzIiwic3Vic2NyaWJlIiwiZXZlbnROYW1lIiwiY2FsbGJhY2siLCJwdXNoIiwiZW1pdCIsIm5ld0RhdGEiLCJldmVudCIsImZvckVhY2giLCJjb3JyZWN0U2VwYXJhdGUiLCJvcHRpb25zIiwiaXNTZXBhcmF0ZSIsInNlcGFyYXRlIiwidmFsIiwidG9TdHJpbmciLCJzZXBhcmF0ZURlIiwic2VwYXJhdGVEZWZhdWx0IiwidW5kZWZpbmVkIiwidG9Mb2NhbGVTdHJpbmciLCJzdGFuZGFyZE9wdGlvbnMiLCJtaW4iLCJtYXgiLCJzdGVwIiwiZnJvbSIsInRvIiwicG9zdGZpeCIsImlzUHJlZml4IiwiaXNQb3N0Zml4IiwiaXNMYWJlbCIsImlzU2NhbGUiLCJjb2xvciIsImlzU2NhbGVQb3N0Zml4Iiwic2NhbGVQb3N0Zml4IiwibWluTWF4IiwiZnJvbVRvIiwiaXNUcmFja1Bvc3RmaXgiLCJ0cmFja1Bvc3RmaXgiLCJpc0NvbG9yIiwiY2hhbmdlQ29sb3IiLCJpc0NoYW5nZUNvbG9yIiwiaXNHcmFkaWVudCIsImdyYWRpZW50IiwiZ3JhZGllbnREZWciLCJpc0NvbG9yT3V0Iiwib25seURpdmlzaW9ucyIsImFsbENvbG9ycyIsImlzVmVydGljYWwiLCJpc0RvdWJsZSIsIm1lbW8iLCJpc09sZElFIiwiQm9vbGVhbiIsIndpbmRvdyIsImRvY3VtZW50IiwiYWxsIiwiYXRvYiIsImdldFRhcmdldCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsImxlbmd0aCIsIm1vZHVsZXNUb0RvbSIsImxpc3QiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpdGVtIiwiaWQiLCJiYXNlIiwiY291bnQiLCJjb25jYXQiLCJpbmRleCIsIm9iaiIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRTdHlsZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJub25jZSIsImtleXMiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsImpvaW4iLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVtb3ZlIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwicmVtb3ZlQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJhcHBseVRvVGFnIiwicmVtb3ZlQXR0cmlidXRlIiwiYnRvYSIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImZpcnN0Q2hpbGQiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwidXBkYXRlIiwic3R5bGVJbmRleCIsInBhcmVudE5vZGUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJuZXdPYmoiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJzcGxpY2UiLCJfX2Fzc2lnbiIsImFzc2lnbiIsImFyZ3VtZW50cyIsImFwcGx5IiwiX19zcHJlYWRBcnJheXMiLCJpbCIsIkFycmF5IiwiayIsImEiLCJqIiwiamwiLCJQcmVzZW50ZXJfMSIsImludGVyZmFjZXNfMSIsInN0YW5kYXJkT3B0aW9uc18xIiwialF1ZXJ5IiwiZm4iLCJjb2xvclNsaWRlciIsIm1ldGhvZCIsIl9hIiwiYXJnIiwibWV0aG9kcyIsImluaXQiLCIkc2xpZGVyIiwibmV3UGFyYW0iLCJuZXdPcHRpb25zIiwiZGF0YSIsIlByZXNlbnRlciIsImNoYW5nZSIsInZhbHVlcyIsInNldE9wdGlvbnMiLCJ1cERhdGFWaWV3IiwiZ2V0VmFsdWUiLCJmdW5jIiwiZW1pdHRlciIsIk5FV19EQVRBIiwiaXNNZXRob2QiLCJNb2RlbF8xIiwiVmlld18xIiwiRXZlbnRFbWl0dGVyXzEiLCJlbGVtZW50IiwibW9kZWwiLCJjcmVhdGVNb2RlbCIsInZpZXciLCJjcmVhdGVWaWV3Iiwic3RhdGUiLCJiaW5kU3Vic2NyaWJlIiwidXBEYXRhU2xpZGVyIiwic2V0RGF0YSIsImdldE9wdGlvbnMiLCJNb2RlbCIsIlZpZXciLCJnZXROZXdEYXRhIiwic2VuZE5ld1Bvc2l0aW9uIiwiYWRkU3Vic2NyaWJ0aW9ucyIsIk5FV19QT1NJVElPTiIsInVwRGF0YSIsIm5ld1Bvc2l0aW9uIiwibW9kZWxTdGF0ZSIsIk9wdGlvbnMiLCJ2YWxpZGF0ZUZyb21UbyIsInZhbGlkYXRlTWluTWF4U3RlcCIsImlzTWluTWF4IiwibWF4TWluWmVybyIsImlzU2luZ2xlRnJvbSIsImlzQ29ycmVjdEZyb20iLCJSb2xsZXJzXzEiLCJUcmFja18xIiwiU2NhbGVfMSIsIkJhcl8xIiwiY2xhc3NOYW1lc18xIiwiY3JlYXRlU2xpZGVyIiwicm9sbGVycyIsImNyZWF0ZVJvbGxlcnMiLCJjcmVhdGVCYXIiLCJjcmVhdGVUcmFjayIsImNyZWF0ZVNjYWxlIiwiYmluZEV2ZW50TGlzdGVuZXJzIiwic2l6ZSIsImdldFNsaWRlclNpemUiLCJvbmVTdGVwIiwiZ2V0T25lU3RlcCIsImNsYXNzTmFtZSIsImFwcGVuZCIsIlRyYWNrIiwiQmFyIiwiUm9sbGVycyIsIlNjYWxlIiwibmV3U3RhdGUiLCJ1cGRhdGFTdGF0ZSIsInNldE91dCIsIk1hdGgiLCJjZWlsIiwiaGFuZGxlVHJhY2tDbGljayIsImhhbmRsZVNjYWxlQ2xpY2siLCJhZGRFdmVudExpc3RlbmVycyIsImhhbmRsZVNsaWRlckRyYWciLCJkcmFnU3RhcnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0VGFyZ2V0VHlwZSIsImRyYWdfMSIsImRyYWciLCJoYW5kbGVVcF8xIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwibW91c2VWYWx1ZSIsInRlc3QiLCJzZW5zb3JIb3Jpem9udGFsRXZlbnQiLCJ0eXBlIiwibW91c2VIb3Jpem9udGFsRXZlbnQiLCJzZW5zb3JWZXJ0aWNhbEV2ZW50IiwibW91c2VWZXJ0aWNhbEV2ZW50IiwiY29udmVydFB4VG9WYWx1ZSIsInRvdWNoZXMiLCJjbGllbnRYIiwiY2xpZW50WSIsInVwZGF0ZVBvc2l0aW9uIiwiVEFSR0VUX0ZPUldBUkQiLCJUQVJHRVRfQkFDS1dBUkQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29udGFpbnMiLCJwb3NpdGlvbiIsImRldGFpbCIsInNwbGl0IiwiU3RyaW5nIiwiTnVtYmVyIiwiY29vcmRpbmF0ZSIsIkZPUldBUkQiLCJCQUNLV0FSRCIsImZyb21EaXN0YW5jZSIsImFicyIsInRvRGlzdGFuY2UiLCJjb252ZXJ0VmFsdWVUb0NvbG9yIiwiaXNGcm9tIiwidGFyZ2V0VG8iLCJ0YXJnZXRzIiwiaXNGcm9tVGFyZ2V0IiwiaXNUb1RhcmdldCIsImNvcnJlY3RUbyIsInNsaWRlclBvcyIsImdldFNsaWRlclBvc2l0aW9uIiwicHgiLCJyb3VuZCIsIl9iIiwiaXNDaGFuZ2VOZXdDb2xvciIsInBhbGl0cmEiLCJnclBhbGl0cmEiLCJjb3JyZWN0R3JhZGllbnQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJsZWZ0IiwiaGVpZ2h0Iiwid2lkdGgiLCJjb3JyZWN0U2VwYXJhdGVfMSIsInRvb2x0aXBzIiwiY3JlYXRlVG9vbHRpcCIsIm1vdmVSb2xsZXJzQXRWYWx1ZSIsInRvZ2dsZVJvbGxlcnMiLCJmaXJzdFJvbGxlciIsInNlY29uZFJvbGxlciIsInVwZGF0YU91dFRvb2x0aXAiLCJpc1NldFByZWZpeCIsImlubmVySFRNTCIsInNldENvbG9yIiwibmV3Q29sb3IiLCJuZXdHcmFkaWVudCIsImJhY2tncm91bmRDb2xvciIsImNsYXNzTGlzdCIsImFkZCIsInVwZGF0YUNvbG9yIiwiYmFja2dyb3VuZCIsInB4VG8iLCJjb252ZXJ0VmFsdWVUb1B4IiwicHhGcm9tIiwicG9zaXRpb25UbyIsImNvbnZlcnRQeFRvUHJvY2VudCIsInBvc2l0aW9uRnJvbSIsImJvdHRvbSIsIm91dEVsZW1lbnRzIiwiY3JlYXRlT3V0RWxlbWVudHMiLCJzdGFydFZhbHVlIiwiZW5kVmFsdWUiLCJpc0Zyb210b1ByZWZpeCIsImFkZFNjYWxlTWFya2VyIiwiY2hlY2tTY2FsZSIsInVwZGF0YVNjYWxlTWFya2VyIiwiZG9jdW1lbnRFbGVtZW50Iiwic2V0UHJvcGVydHkiLCJpbmMiLCJnZXRJbmNyZW1lbnQiLCJweEluYyIsImZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsInB4Q3VycmVudCIsImN1cnJlbnQiLCJwYXJhbWV0ZXJzIiwiY3JlYXRlU2NhbGVNYXJrZXIiLCJvZmZzZXQiLCJjb252ZXJ0UHhUb1BlcmNlbnQiLCJzdG9wUHJvcGFnYXRpb24iLCJIVE1MRWxlbWVudCIsInNjYWxlRXZlbnQiLCJDdXN0b21FdmVudCIsImJ1YmJsZXMiLCJkaXNwYXRjaEV2ZW50IiwidXBkYXRhQmFyIiwiaXNTZXRDb2xvciIsImdldFJvbGxlclBvc2l0aW9ucyIsImNhbGN1bGF0ZVBvc2l0aW9uIiwic29ydCIsImIiLCJwYXJzZUludCIsImdldENvbXB1dGVkU3R5bGUiLCJzaWRlIiwiZGlyZWN0aW9uIiwicm9sbGVyUG9zIiwiZ2V0TmV3U2xpZGVyUG9zIiwib3JhbmdlIiwicHVycGxlIiwiYXBpIiwiY29udGVudCIsImRlZmF1bHQiLCJsb2NhbHMiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixF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WCxVQUFXLFVBQ1gsVUFBVyxXQUNYLFVBQVcsV0FDWCxVQUFXLGdCQUNYLFVBQVcsV0FDWCxVQUFXLFlBQ1gsVUFBVyxZQUNYLFVBQVcsY0FDWCxVQUFXLGlCQUNYLFVBQVcsYUFDWCxVQUFXLGFBQ1gsVUFBVyxVQUNYLFVBQVcsYUFDWCxVQUFXLGVBQ1gsVUFBVyxnQkFDWCxVQUFXLGFBQ1gsVUFBVyxVQUNYLFVBQVcsZ0JBQ1gsVUFBVyxnQkFDWCxVQUFXLGFBQ1gsVUFBVyxXQUNYLFVBQVcsY0FDWCxVQUFXLFVBQ1gsVUFBVyxhQUNYLFVBQVcsWUFDWCxVQUFXLGNBQ1gsVUFBVyxjQUNYLFVBQVcsVUFDWCxVQUFXLFlBQ1gsVUFBVyxhQUNYLFVBQVcsWUFDWCxVQUFXLE9BQ1gsVUFBVyxPQUNYLFVBQVcsVUFDWCxVQUFXLGNBQ1gsVUFBVyxXQUNYLFVBQVcsVUFDWCxVQUFXLFlBQ1gsVUFBVyxTQUNYLFVBQVcsUUFDWCxVQUFXLFFBQ1gsVUFBVyxnQkFDWCxVQUFXLFdBQ1gsVUFBVyxZQUNYLFVBQVcsZUFDWCxVQUFXLFlBQ1gsVUFBVyxhQUNYLFVBQVcsWUFDWCxVQUFXLHVCQUNYLFVBQVcsWUFDWCxVQUFXLGFBQ1gsVUFBVyxZQUNYLFVBQVcsY0FDWCxVQUFXLGdCQUNYLFVBQVcsZUFDWCxVQUFXLGlCQUNYLFVBQVcsaUJBQ1gsVUFBVyxjQUNYLFVBQVcsT0FDWCxVQUFXLFlBQ1gsVUFBVyxRQUNYLFVBQVcsU0FDWCxVQUFXLG1CQUNYLFVBQVcsYUFDWCxVQUFXLGVBQ1gsVUFBVyxlQUNYLFVBQVcsaUJBQ1gsVUFBVyxrQkFDWCxVQUFXLG9CQUNYLFVBQVcsa0JBQ1gsVUFBVyxrQkFDWCxVQUFXLGVBQ1gsVUFBVyxZQUNYLFVBQVcsWUFDWCxVQUFXLFdBQ1gsVUFBVyxjQUNYLFVBQVcsT0FDWCxVQUFXLFVBQ1gsVUFBVyxRQUNYLFVBQVcsWUFDWCxVQUFXLFNBQ1gsVUFBVyxZQUNYLFVBQVcsU0FDWCxVQUFXLGdCQUNYLFVBQVcsWUFDWCxVQUFXLGdCQUNYLFVBQVcsZ0JBQ1gsVUFBVyxhQUNYLFVBQVcsWUFDWCxVQUFXLE9BQ1gsVUFBVyxPQUNYLFVBQVcsT0FDWCxVQUFXLGFBQ1gsVUFBVyxTQUNYLFVBQVcsZ0JBQ1gsVUFBVyxVQUNYLFVBQVcsWUFDWCxVQUFXLFlBQ1gsVUFBVyxjQUNYLFVBQVcsU0FDWCxVQUFXLGFBQ1gsVUFBVyxXQUNYLFVBQVcsV0FDWCxVQUFXLFNBQ1gsVUFBVyxTQUNYLFVBQVcsVUFDWCxVQUFXLFlBQ1gsVUFBVyxZQUNYLFVBQVcsT0FDWCxVQUFXLGNBQ1gsVUFBVyxZQUNYLFVBQVcsTUFDWCxVQUFXLE9BQ1gsVUFBVyxVQUNYLFVBQVcsU0FDWCxVQUFXLFlBQ1gsVUFBVyxTQUNYLFVBQVcsUUFDWCxVQUFXLFFBQ1gsVUFBVyxhQUNYLFVBQVcsU0FDWCxVQUFXLGtCQUNYLFVBQVcsWUFDWCxVQUFXLHFCQUNYLFVBQVcsYUFDWCxVQUFXLFlBQ1gsVUFBVyxVQUNYLFVBQVcsZ0JBQ1gsVUFBVyxrQkFDWCxVQUFXLHNCQUNYLFVBQVcsWUFDWCxVQUFXLGlCQUNYLFVBQVcsZUFDWCxVQUFXLHNCQUNYLFVBQVcsVUFDWCxVQUFXLGVBQ1gsVUFBVyxvQkFDWCxVQUFXLFlBQ1gsVUFBVyxnQkFDWCxVQUFXLGdCQUNYLFVBQVcsa0JBQ1gsVUFBVyxvQkFDWCxVQUFXLFNBQ1gsVUFBVyxtQkFDWCxVQUFXLG1CQUNYLFVBQVcsU0FDWCxVQUFXLG1CQUNYLFVBQVcsWUFDWCxVQUFXLGNBQ1gsVUFBVyxpQkFDWCxVQUFXLGFBQ1gsVUFBVyxnQkFDWCxLQUFNLE9BQ042UyxPQUFRLFlBQ1JDLE9BQVEsYUFDUixVQUFXLGNBQ1gsVUFBVyxZQUNYLFVBQVcsVUFDWCxVQUFXLGdCQUNYLFVBQVcsVUFDWCxVQUFXLHdCQUNYLFVBQVcsbUIsZ0JDeExmLElBQUlDLEVBQU0sRUFBUSxHQUNGQyxFQUFVLEVBQVEsSUFJQyxpQkFGdkJBLEVBQVVBLEVBQVExWSxXQUFhMFksRUFBUUMsUUFBVUQsS0FHL0NBLEVBQVUsQ0FBQyxDQUFDL1osRUFBT0MsRUFBSThaLEVBQVMsTUFHOUMsSUFBSW5WLEVBQVUsQ0FFZCxPQUFpQixPQUNqQixXQUFvQixHQUVQa1YsRUFBSUMsRUFBU25WLEdBSTFCNUUsRUFBT0QsUUFBVWdhLEVBQVFFLFFBQVUsSSIsImZpbGUiOiJzbGlkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNik7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2xhc3NOYW1lcyA9IHZvaWQgMDtcbnZhciBjbGFzc05hbWVzID0ge1xuICAgIHNsaWRlcjogJ3NsaWRlcicsXG4gICAgc2xpZGVyVmVydGljYWw6ICdzbGlkZXIgc2xpZGVyX29yaWVudGF0aW9uLXZlcnRpY2FsJyxcbiAgICB0cmFja091dFN0YXJ0OiAnc2xpZGVyX19vdXQgc2xpZGVyX19vdXQtc3RhcnQganMtc2xpZGVyX19vdXQganMtc2xpZGVyX19vdXQtc3RhcnQnLFxuICAgIHRyYWNrT3V0RW5kOiAnc2xpZGVyX19vdXQgc2xpZGVyX19vdXQtZW5kIGpzLXNsaWRlcl9fb3V0IGpzLXNsaWRlcl9fb3V0LWVuZCcsXG4gICAgZmluZFRyYWNrT3V0OiAnLmpzLXNsaWRlcl9fb3V0JyxcbiAgICB0cmFjazogJ3NsaWRlcl9fdHJhY2sganMtc2xpZGVyX190cmFjaycsXG4gICAgZmluZFRyYWNrOiAnLmpzLXNsaWRlcl9fdHJhY2snLFxuICAgIHNjYWxlOiAnc2xpZGVyX19zY2FsZSBqcy1zbGlkZXJfX3NjYWxlICcsXG4gICAgZmluZFNjYWxlOiAnLmpzLXNsaWRlcl9fc2NhbGUnLFxuICAgIHNjYWxlRnNaZXJvOiAnc2xpZGVyX19zY2FsZS12YWx1ZV9ub3QtdmlzaWJsZScsXG4gICAgYmFyOiAnc2xpZGVyX19iYXIganMtc2xpZGVyX19iYXInLFxuICAgIGZpbmRCYXI6ICcuanMtc2xpZGVyX19iYXInLFxuICAgIHJvbGxlckZpcnN0OiAnc2xpZGVyX19yb2xsZXIganMtc2xpZGVyX19yb2xsZXIgc2xpZGVyX19yb2xsZXJfZmlyc3QganMtc2xpZGVyX19yb2xsZXJfZmlyc3QnLFxuICAgIHJvbGxlclNlY29uZDogJ3NsaWRlcl9fcm9sbGVyX3NlY29uZCBqcy1zbGlkZXJfX3JvbGxlciBqcy1zbGlkZXJfX3JvbGxlcl9zZWNvbmQgc2xpZGVyX19yb2xsZXInLFxuICAgIGZpbmRSb2xsZXJzOiAnLmpzLXNsaWRlcl9fcm9sbGVyJyxcbiAgICBmaXJzdFRvb2x0aXA6ICdzbGlkZXJfX3Rvb2x0aXBfZmlyc3QganMtc2xpZGVyX190b29sdGlwX2ZpcnN0IGpzLXNsaWRlcl9fdG9vbHRpcCBzbGlkZXJfX3Rvb2x0aXAnLFxuICAgIHNlY29uZFRvb2x0aXA6ICdzbGlkZXJfX3Rvb2x0aXBfc2Vjb25kIGpzLXNsaWRlcl9fdG9vbHRpcCBqcy1zbGlkZXJfX3Rvb2x0aXBfc2Vjb25kIHNsaWRlcl9fdG9vbHRpcCcsXG4gICAgZmluZEZpcnN0VG9vbHRpcDogJy5qcy1zbGlkZXJfX3Rvb2x0aXBfZmlyc3QnLFxuICAgIGZpbmRTZWNvbmRUb29sdGlwOiAnLmpzLXNsaWRlcl9fdG9vbHRpcF9zZWNvbmQnLFxuICAgIGZpbmRUb29sdGlwOiAnLmpzLXNsaWRlcl9fdG9vbHRpcCcsXG4gICAgdG9vbHRpcFdoaXRlOiAnc2xpZGVyX190b29sdGlwX3doaXRlJyxcbiAgICBub3RWaXNpYmxlOiAnc2xpZGVyX19lbGVtZW50X25vdC12aXNpYmxlJyxcbiAgICBzY2FsZU1hcmtlcjogJ3NsaWRlcl9fc2NhbGUtdmFsdWUgIGpzLXNsaWRlcl9fc2NhbGUtdmFsdWUnLFxuICAgIGZpbmRTY2FsZVZhbHVlOiAnLmpzLXNsaWRlcl9fc2NhbGUtdmFsdWUnLFxuICAgIGlzU2NhbGVWYWx1ZTogJ3NsaWRlcl9fc2NhbGUtdmFsdWUnLFxuICAgIGRpdmlzaW9uVmFsdWU6ICdzbGlkZXJfX2RpdmlzaW9uLXZhbHVlIGpzLXNsaWRlcl9fZGl2aXNpb24tdmFsdWUgc2xpZGVyX19lbGVtZW50LScsXG4gICAgaXNTY2FsZURpdmlzb246ICdzbGlkZXJfX2RpdmlzaW9uLXZhbHVlJyxcbiAgICBkaXZpc2lvbjogJ3NsaWRlcl9fZGl2aXNpb24ganMtc2xpZGVyX19kaXZpc2lvbicsXG59O1xuZXhwb3J0cy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FdmVudHMgPSBleHBvcnRzLkRpcmVjdGlvbiA9IHZvaWQgMDtcbnZhciBEaXJlY3Rpb247XG4oZnVuY3Rpb24gKERpcmVjdGlvbikge1xuICAgIERpcmVjdGlvbltEaXJlY3Rpb25bXCJGT1JXQVJEXCJdID0gMF0gPSBcIkZPUldBUkRcIjtcbiAgICBEaXJlY3Rpb25bRGlyZWN0aW9uW1wiQkFDS1dBUkRcIl0gPSAxXSA9IFwiQkFDS1dBUkRcIjtcbiAgICBEaXJlY3Rpb25bRGlyZWN0aW9uW1wiVEFSR0VUX0ZPUldBUkRcIl0gPSAyXSA9IFwiVEFSR0VUX0ZPUldBUkRcIjtcbiAgICBEaXJlY3Rpb25bRGlyZWN0aW9uW1wiVEFSR0VUX0JBQ0tXQVJEXCJdID0gM10gPSBcIlRBUkdFVF9CQUNLV0FSRFwiO1xufSkoRGlyZWN0aW9uIHx8IChEaXJlY3Rpb24gPSB7fSkpO1xuZXhwb3J0cy5EaXJlY3Rpb24gPSBEaXJlY3Rpb247XG52YXIgRXZlbnRzO1xuKGZ1bmN0aW9uIChFdmVudHMpIHtcbiAgICBFdmVudHNbRXZlbnRzW1wiTkVXX0RBVEFcIl0gPSAwXSA9IFwiTkVXX0RBVEFcIjtcbiAgICBFdmVudHNbRXZlbnRzW1wiTkVXX1BPU0lUSU9OXCJdID0gMV0gPSBcIk5FV19QT1NJVElPTlwiO1xufSkoRXZlbnRzIHx8IChFdmVudHMgPSB7fSkpO1xuZXhwb3J0cy5FdmVudHMgPSBFdmVudHM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXZlbnRFbWl0dGVyID0gdm9pZCAwO1xudmFyIEV2ZW50RW1pdHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzID0ge307XG4gICAgfVxuICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUuc3Vic2NyaWJlID0gZnVuY3Rpb24gKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgIXRoaXMuZXZlbnRzW2V2ZW50TmFtZV0gJiYgKHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0gPSBbXSk7XG4gICAgICAgIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0ucHVzaChjYWxsYmFjayk7XG4gICAgfTtcbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBuZXdEYXRhKSB7XG4gICAgICAgIHZhciBldmVudCA9IHRoaXMuZXZlbnRzW2V2ZW50TmFtZV07XG4gICAgICAgIGV2ZW50ICYmIGV2ZW50LmZvckVhY2goZnVuY3Rpb24gKGNhbGxiYWNrKSB7IHJldHVybiBjYWxsYmFjay5jYWxsKG51bGwsIG5ld0RhdGEpOyB9KTtcbiAgICB9O1xuICAgIHJldHVybiBFdmVudEVtaXR0ZXI7XG59KCkpO1xuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29ycmVjdFNlcGFyYXRlID0gdm9pZCAwO1xuZnVuY3Rpb24gY29ycmVjdFNlcGFyYXRlKHZhbHVlLCBvcHRpb25zKSB7XG4gICAgdmFyIGlzU2VwYXJhdGUgPSBvcHRpb25zLmlzU2VwYXJhdGU7XG4gICAgdmFyIHNlcGFyYXRlID0gb3B0aW9ucy5zZXBhcmF0ZTtcbiAgICB2YXIgdmFsID0gJyc7XG4gICAgaWYgKGlzU2VwYXJhdGUgPT09IGZhbHNlKSB7XG4gICAgICAgIHZhbCA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB2YXIgc2VwYXJhdGVFbiA9IHNlcGFyYXRlID09PSAnLCc7XG4gICAgICAgIHZhciBzZXBhcmF0ZURlID0gc2VwYXJhdGUgPT09ICcuJztcbiAgICAgICAgdmFyIHNlcGFyYXRlRGVmYXVsdCA9IHNlcGFyYXRlID09PSAnICc7XG4gICAgICAgIGlmIChzZXBhcmF0ZUVuKSB7XG4gICAgICAgICAgICBzZXBhcmF0ZSA9ICdlbi1VUyc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlcGFyYXRlRGUpIHtcbiAgICAgICAgICAgIHNlcGFyYXRlID0gJ2RlLURFJztcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VwYXJhdGVEZWZhdWx0KSB7XG4gICAgICAgICAgICBzZXBhcmF0ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICB2YWwgPSB2YWx1ZS50b0xvY2FsZVN0cmluZyhzZXBhcmF0ZSk7XG4gICAgfVxuICAgIHJldHVybiB2YWw7XG59XG5leHBvcnRzLmNvcnJlY3RTZXBhcmF0ZSA9IGNvcnJlY3RTZXBhcmF0ZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdGFuZGFyZE9wdGlvbnMgPSB2b2lkIDA7XG52YXIgY29sb3JfMSA9IHJlcXVpcmUoXCIuL2NvbG9yXCIpO1xudmFyIHN0YW5kYXJkT3B0aW9ucyA9IHtcbiAgICBtaW46IDAsXG4gICAgbWF4OiAxMCxcbiAgICBzdGVwOiAxLFxuICAgIGZyb206IDMsXG4gICAgdG86IDcsXG4gICAgcG9zdGZpeDogJ+KCvScsXG4gICAgaXNQcmVmaXg6IGZhbHNlLFxuICAgIGlzUG9zdGZpeDogdHJ1ZSxcbiAgICBpc0xhYmVsOiB0cnVlLFxuICAgIGlzU2NhbGU6IHRydWUsXG4gICAgaXNTZXBhcmF0ZTogdHJ1ZSxcbiAgICBjb2xvcjogJ29yYW5nZScsXG4gICAgaXNTY2FsZVBvc3RmaXg6IHRydWUsXG4gICAgc2NhbGVQb3N0Zml4OiAn4oK9JyxcbiAgICBtaW5NYXg6IGZhbHNlLFxuICAgIGZyb21UbzogZmFsc2UsXG4gICAgaXNUcmFja1Bvc3RmaXg6IHRydWUsXG4gICAgdHJhY2tQb3N0Zml4OiAn4oK9JyxcbiAgICBpc0NvbG9yOiB0cnVlLFxuICAgIGNoYW5nZUNvbG9yOiB0cnVlLFxuICAgIGlzQ2hhbmdlQ29sb3I6IHRydWUsXG4gICAgaXNHcmFkaWVudDogdHJ1ZSxcbiAgICBncmFkaWVudDogJ3B1cnBsZScsXG4gICAgZ3JhZGllbnREZWc6IDQ1LFxuICAgIGlzQ29sb3JPdXQ6IGZhbHNlLFxuICAgIG9ubHlEaXZpc2lvbnM6IGZhbHNlLFxuICAgIHNlcGFyYXRlOiAnICcsXG4gICAgYWxsQ29sb3JzOiBjb2xvcl8xLmFsbENvbG9ycyxcbiAgICBpc1ZlcnRpY2FsOiBmYWxzZSxcbiAgICBpc0RvdWJsZTogZmFsc2UsXG59O1xuZXhwb3J0cy5zdGFuZGFyZE9wdGlvbnMgPSBzdGFuZGFyZE9wdGlvbnM7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX3NwcmVhZEFycmF5cyA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheXMpIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKHZhciBzID0gMCwgaSA9IDAsIGlsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGlsOyBpKyspIHMgKz0gYXJndW1lbnRzW2ldLmxlbmd0aDtcbiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspXG4gICAgICAgIGZvciAodmFyIGEgPSBhcmd1bWVudHNbaV0sIGogPSAwLCBqbCA9IGEubGVuZ3RoOyBqIDwgamw7IGorKywgaysrKVxuICAgICAgICAgICAgcltrXSA9IGFbal07XG4gICAgcmV0dXJuIHI7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFByZXNlbnRlcl8xID0gcmVxdWlyZShcIi4vUHJlc2VudGVyL1ByZXNlbnRlclwiKTtcbnZhciBpbnRlcmZhY2VzXzEgPSByZXF1aXJlKFwiLi9pbnRlcmZhY2VzL2ludGVyZmFjZXNcIik7XG52YXIgc3RhbmRhcmRPcHRpb25zXzEgPSByZXF1aXJlKFwiLi9pbnRlcmZhY2VzL3N0YW5kYXJkT3B0aW9uc1wiKTtcbnJlcXVpcmUoXCIuL3NsaWRlci5zY3NzXCIpO1xuKGZ1bmN0aW9uIGluaXRQbHVnaW4oJCkge1xuICAgICQuZm4uY29sb3JTbGlkZXIgPSBmdW5jdGlvbiBpbml0KG1ldGhvZCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciBhcmcgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbWV0aG9kcyA9IHtcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgkc2xpZGVyLCBuZXdQYXJhbSkge1xuICAgICAgICAgICAgICAgIHZhciBuZXdPcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YW5kYXJkT3B0aW9uc18xLnN0YW5kYXJkT3B0aW9ucyksIG5ld1BhcmFtKTtcbiAgICAgICAgICAgICAgICAkc2xpZGVyLmRhdGEoJ3ByZXNlbnRlcicsIG5ldyBQcmVzZW50ZXJfMS5QcmVzZW50ZXIobmV3T3B0aW9ucywgJHNsaWRlcikpO1xuICAgICAgICAgICAgICAgIHJldHVybiAkc2xpZGVyO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24gKCRzbGlkZXIsIHZhbHVlcykge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS5zZXRPcHRpb25zKHZhbHVlcyk7XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS51cERhdGFWaWV3KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0VmFsdWU6IGZ1bmN0aW9uICgkc2xpZGVyLCBmdW5jKSB7XG4gICAgICAgICAgICAgICAgJHNsaWRlci5kYXRhKCdwcmVzZW50ZXInKS5lbWl0dGVyLnN1YnNjcmliZShpbnRlcmZhY2VzXzEuRXZlbnRzLk5FV19EQVRBLCBmdW5jKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGZ1bmMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAkc2xpZGVyLmRhdGEoJ3ByZXNlbnRlcicpLmVtaXR0ZXIuc3Vic2NyaWJlKGludGVyZmFjZXNfMS5FdmVudHMuTkVXX0RBVEEsIGZ1bmMpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGlzTWV0aG9kID0gdHlwZW9mIG1ldGhvZCA9PT0gJ29iamVjdCcgfHwgIW1ldGhvZDtcbiAgICAgICAgaWYgKHR5cGVvZiBtZXRob2QgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gKF9hID0gbWV0aG9kc1ttZXRob2RdKS5jYWxsLmFwcGx5KF9hLCBfX3NwcmVhZEFycmF5cyhbdGhpcywgdGhpc10sIGFyZykpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc01ldGhvZCkge1xuICAgICAgICAgICAgcmV0dXJuIG1ldGhvZHMuaW5pdCh0aGlzLCBtZXRob2QpO1xuICAgICAgICB9XG4gICAgfTtcbn0oalF1ZXJ5KSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByZXNlbnRlciA9IHZvaWQgMDtcbnZhciBNb2RlbF8xID0gcmVxdWlyZShcIi4uL01vZGVsL01vZGVsXCIpO1xudmFyIFZpZXdfMSA9IHJlcXVpcmUoXCIuLi9WaWV3L1ZpZXdcIik7XG52YXIgaW50ZXJmYWNlc18xID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiKTtcbnZhciBFdmVudEVtaXR0ZXJfMSA9IHJlcXVpcmUoXCIuLi9FdmVudEVtaXR0ZXIvRXZlbnRFbWl0dGVyXCIpO1xudmFyIHN0YW5kYXJkT3B0aW9uc18xID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZXMvc3RhbmRhcmRPcHRpb25zXCIpO1xudmFyIFByZXNlbnRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcmVzZW50ZXIob3B0aW9ucywgZWxlbWVudCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLmVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyXzEuRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMubW9kZWwgPSB0aGlzLmNyZWF0ZU1vZGVsKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLnZpZXcgPSB0aGlzLmNyZWF0ZVZpZXcodGhpcy5tb2RlbC5zdGF0ZSwgZWxlbWVudCk7XG4gICAgICAgIHRoaXMuYmluZFN1YnNjcmliZSgpO1xuICAgIH1cbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLnVwRGF0YVZpZXcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMudmlldy51cERhdGFTbGlkZXIoKTtcbiAgICB9O1xuICAgIFByZXNlbnRlci5wcm90b3R5cGUuc2V0T3B0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBuZXdPcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YW5kYXJkT3B0aW9uc18xLnN0YW5kYXJkT3B0aW9ucyksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLm1vZGVsLnNldERhdGEobmV3T3B0aW9ucyk7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLmdldE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1vZGVsLnN0YXRlO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5jcmVhdGVNb2RlbCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgTW9kZWxfMS5Nb2RlbChvcHRpb25zKTtcbiAgICB9O1xuICAgIFByZXNlbnRlci5wcm90b3R5cGUuY3JlYXRlVmlldyA9IGZ1bmN0aW9uIChvcHRpb25zLCBlbGVtZW50KSB7XG4gICAgICAgIHJldHVybiBuZXcgVmlld18xLlZpZXcob3B0aW9ucywgZWxlbWVudCk7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLmJpbmRTdWJzY3JpYmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZ2V0TmV3RGF0YSA9IHRoaXMuZ2V0TmV3RGF0YS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnNlbmROZXdQb3NpdGlvbiA9IHRoaXMuc2VuZE5ld1Bvc2l0aW9uLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuYWRkU3Vic2NyaWJ0aW9ucygpO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5hZGRTdWJzY3JpYnRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm1vZGVsLmVtaXR0ZXIuc3Vic2NyaWJlKGludGVyZmFjZXNfMS5FdmVudHMuTkVXX0RBVEEsIHRoaXMuZ2V0TmV3RGF0YSk7XG4gICAgICAgIHRoaXMudmlldy5lbWl0dGVyLnN1YnNjcmliZShpbnRlcmZhY2VzXzEuRXZlbnRzLk5FV19QT1NJVElPTiwgdGhpcy5zZW5kTmV3UG9zaXRpb24pO1xuICAgIH07XG4gICAgUHJlc2VudGVyLnByb3RvdHlwZS5nZXROZXdEYXRhID0gZnVuY3Rpb24gKG5ld0RhdGEpIHtcbiAgICAgICAgdGhpcy52aWV3LnVwRGF0YShuZXdEYXRhKTtcbiAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoaW50ZXJmYWNlc18xLkV2ZW50cy5ORVdfREFUQSwgbmV3RGF0YSk7XG4gICAgfTtcbiAgICBQcmVzZW50ZXIucHJvdG90eXBlLnNlbmROZXdQb3NpdGlvbiA9IGZ1bmN0aW9uIChuZXdQb3NpdGlvbikge1xuICAgICAgICB2YXIgbW9kZWxTdGF0ZSA9IHRoaXMubW9kZWwuc3RhdGU7XG4gICAgICAgIHZhciBuZXdEYXRhID0gX19hc3NpZ24oX19hc3NpZ24oe30sIG1vZGVsU3RhdGUpLCBuZXdQb3NpdGlvbik7XG4gICAgICAgIHRoaXMubW9kZWwuc2V0RGF0YShuZXdEYXRhKTtcbiAgICB9O1xuICAgIHJldHVybiBQcmVzZW50ZXI7XG59KCkpO1xuZXhwb3J0cy5QcmVzZW50ZXIgPSBQcmVzZW50ZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1vZGVsID0gdm9pZCAwO1xudmFyIGludGVyZmFjZXNfMSA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzL2ludGVyZmFjZXNcIik7XG52YXIgRXZlbnRFbWl0dGVyXzEgPSByZXF1aXJlKFwiLi4vRXZlbnRFbWl0dGVyL0V2ZW50RW1pdHRlclwiKTtcbnZhciBNb2RlbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNb2RlbChPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXJfMS5FdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuaW5pdChPcHRpb25zKTtcbiAgICB9XG4gICAgTW9kZWwucHJvdG90eXBlLnNldERhdGEgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICB2YXIgdmFsaWRhdGVGcm9tVG8gPSB0aGlzLnZhbGlkYXRlRnJvbVRvKE9wdGlvbnMpO1xuICAgICAgICB2YXIgdmFsaWRhdGVNaW5NYXhTdGVwID0gdGhpcy52YWxpZGF0ZU1pbk1heFN0ZXAoT3B0aW9ucyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBfX2Fzc2lnbihfX2Fzc2lnbihfX2Fzc2lnbih7fSwgT3B0aW9ucyksIHZhbGlkYXRlRnJvbVRvKSwgdmFsaWRhdGVNaW5NYXhTdGVwKTtcbiAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoaW50ZXJmYWNlc18xLkV2ZW50cy5ORVdfREFUQSwgdGhpcy5zdGF0ZSk7XG4gICAgfTtcbiAgICBNb2RlbC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uIChPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YShPcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGU7XG4gICAgfTtcbiAgICBNb2RlbC5wcm90b3R5cGUudmFsaWRhdGVNaW5NYXhTdGVwID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG1pbiA9IE9wdGlvbnMubWluLCBtYXggPSBPcHRpb25zLm1heCwgc3RlcCA9IE9wdGlvbnMuc3RlcDtcbiAgICAgICAgaWYgKHN0ZXAgPD0gMClcbiAgICAgICAgICAgIE9wdGlvbnMuc3RlcCA9IDAuMTtcbiAgICAgICAgdmFyIGlzTWF4TWluID0gbWF4IDw9IG1pbiAmJiBtYXggPCAwO1xuICAgICAgICB2YXIgaXNNaW5NYXggPSAobWluID49IG1heCAmJiBtYXggPiAwKSB8fCAobWF4IDwgMCAmJiBtYXggPCBtaW4pO1xuICAgICAgICBpZiAoaXNNYXhNaW4pIHtcbiAgICAgICAgICAgIE9wdGlvbnMubWluID0gbWluIC0gc3RlcDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNNaW5NYXgpIHtcbiAgICAgICAgICAgIE9wdGlvbnMubWluID0gbWluO1xuICAgICAgICAgICAgT3B0aW9ucy5tYXggPSBtaW4gKyBzdGVwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPcHRpb25zO1xuICAgIH07XG4gICAgTW9kZWwucHJvdG90eXBlLnZhbGlkYXRlRnJvbVRvID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGZyb20gPSBPcHRpb25zLmZyb20sIHRvID0gT3B0aW9ucy50bywgbWF4ID0gT3B0aW9ucy5tYXgsIG1pbiA9IE9wdGlvbnMubWluLCBzdGVwID0gT3B0aW9ucy5zdGVwLCBpc0RvdWJsZSA9IE9wdGlvbnMuaXNEb3VibGU7XG4gICAgICAgIGlmIChpc0RvdWJsZSkge1xuICAgICAgICAgICAgT3B0aW9ucy50byA9IG1heDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbWF4TWluWmVybyA9IG1heCA8IDAgJiYgbWluID09PSAwO1xuICAgICAgICB2YXIgaXNNaW5NYXhaZXJvID0gbWluIDwgMCAmJiBtYXggPCAwO1xuICAgICAgICB2YXIgaXNTaW5nbGVGcm9tID0gIWlzRG91YmxlICYmIGZyb20gPj0gdG87XG4gICAgICAgIHZhciBpc0NvcnJlY3RGcm9tID0gZnJvbSA+IDAgJiYgaXNNaW5NYXhaZXJvO1xuICAgICAgICBpZiAoZnJvbSA+IG1heClcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1heCAtIHN0ZXA7XG4gICAgICAgIGlmIChmcm9tIDwgbWluKVxuICAgICAgICAgICAgT3B0aW9ucy5mcm9tID0gbWluO1xuICAgICAgICBpZiAodG8gPiBtYXgpXG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWF4O1xuICAgICAgICBpZiAobWF4TWluWmVybykge1xuICAgICAgICAgICAgT3B0aW9ucy5mcm9tID0gbWluO1xuICAgICAgICAgICAgT3B0aW9ucy50byA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNTaW5nbGVGcm9tKSB7XG4gICAgICAgICAgICBPcHRpb25zLmZyb20gPSB0byAtIHN0ZXA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQ29ycmVjdEZyb20pIHtcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG8gPD0gbWluKSB7XG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWluICsgc3RlcDtcbiAgICAgICAgICAgIE9wdGlvbnMuZnJvbSA9IG1pbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWF4IDwgbWluKSB7XG4gICAgICAgICAgICBPcHRpb25zLnRvID0gbWluICsgc3RlcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gT3B0aW9ucztcbiAgICB9O1xuICAgIHJldHVybiBNb2RlbDtcbn0oKSk7XG5leHBvcnRzLk1vZGVsID0gTW9kZWw7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZpZXcgPSB2b2lkIDA7XG52YXIgRXZlbnRFbWl0dGVyXzEgPSByZXF1aXJlKFwiLi4vRXZlbnRFbWl0dGVyL0V2ZW50RW1pdHRlclwiKTtcbnZhciBSb2xsZXJzXzEgPSByZXF1aXJlKFwiLi9Sb2xsZXJzL1JvbGxlcnNcIik7XG52YXIgVHJhY2tfMSA9IHJlcXVpcmUoXCIuL1RyYWNrL1RyYWNrXCIpO1xudmFyIFNjYWxlXzEgPSByZXF1aXJlKFwiLi9TY2FsZS9TY2FsZVwiKTtcbnZhciBCYXJfMSA9IHJlcXVpcmUoXCIuL0Jhci9CYXJcIik7XG52YXIgaW50ZXJmYWNlc18xID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiKTtcbnZhciBjbGFzc05hbWVzXzEgPSByZXF1aXJlKFwiLi4vbGlicy9jbGFzc05hbWVzXCIpO1xudmFyIFZpZXcgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVmlldyhPcHRpb25zLCBlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuZW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXJfMS5FdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy5zbGlkZXIgPSB0aGlzLmNyZWF0ZVNsaWRlcihPcHRpb25zLCBlbGVtZW50KTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuaW5pdChPcHRpb25zKTtcbiAgICAgICAgdGhpcy5yb2xsZXJzID0gdGhpcy5jcmVhdGVSb2xsZXJzKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLmJhciA9IHRoaXMuY3JlYXRlQmFyKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLnRyYWNrID0gdGhpcy5jcmVhdGVUcmFjayh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5zY2FsZSA9IHRoaXMuY3JlYXRlU2NhbGUodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMudXBEYXRhKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLmJpbmRFdmVudExpc3RlbmVycygpO1xuICAgIH1cbiAgICAvLyAqINCg0LDRgdGI0LjRgNGP0Y4gT3B0aW9ucyDQtNC+IElWaWV3U3RhdGVcbiAgICBWaWV3LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHNpemUgPSB0aGlzLmdldFNsaWRlclNpemUoT3B0aW9ucyk7XG4gICAgICAgIHZhciBvbmVTdGVwID0gdGhpcy5nZXRPbmVTdGVwKE9wdGlvbnMpO1xuICAgICAgICB2YXIgc2xpZGVyID0gdGhpcy5zbGlkZXI7XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgT3B0aW9ucyksIHsgc2l6ZTogc2l6ZSxcbiAgICAgICAgICAgIG9uZVN0ZXA6IG9uZVN0ZXAsXG4gICAgICAgICAgICBzbGlkZXI6IHNsaWRlciB9KTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmNyZWF0ZVNsaWRlciA9IGZ1bmN0aW9uIChPcHRpb25zLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gT3B0aW9ucy5pc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgc2xpZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHNsaWRlci5jbGFzc05hbWUgPSBjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5zbGlkZXI7XG4gICAgICAgIGlmIChpc1ZlcnRpY2FsKVxuICAgICAgICAgICAgc2xpZGVyLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnNsaWRlclZlcnRpY2FsO1xuICAgICAgICBlbGVtZW50LmFwcGVuZChzbGlkZXIpO1xuICAgICAgICByZXR1cm4gc2xpZGVyO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuY3JlYXRlVHJhY2sgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFRyYWNrXzEuVHJhY2soT3B0aW9ucyk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5jcmVhdGVCYXIgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IEJhcl8xLkJhcihPcHRpb25zKTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmNyZWF0ZVJvbGxlcnMgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFJvbGxlcnNfMS5Sb2xsZXJzKE9wdGlvbnMpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuY3JlYXRlU2NhbGUgPSBmdW5jdGlvbiAoT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFNjYWxlXzEuU2NhbGUoT3B0aW9ucyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAqINCe0LHQvdC+0LLQu9GP0Y4g0YHRgtC+0YHRgtC+0Y/QvdC40LUgVmlld1xuICAgICog0J7QsdC90L7QstC70Y/RjiDRgdC+0YHRgtC+0Y/QvdC40LUg0LLRgdC10YUg0L/QvtC00LLQuNC00L7QslxuICAgICogKi9cbiAgICBWaWV3LnByb3RvdHlwZS51cERhdGEgPSBmdW5jdGlvbiAobmV3U3RhdGUpIHtcbiAgICAgICAgdmFyIHVwZGF0YVN0YXRlID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHRoaXMuc3RhdGUpLCBuZXdTdGF0ZSk7XG4gICAgICAgIHRoaXMucm9sbGVycy51cERhdGEodXBkYXRhU3RhdGUpO1xuICAgICAgICB0aGlzLmJhci51cERhdGEodXBkYXRhU3RhdGUpO1xuICAgICAgICB0aGlzLnNjYWxlLnVwRGF0YSh1cGRhdGFTdGF0ZSk7XG4gICAgICAgIHRoaXMudHJhY2suc2V0T3V0KHVwZGF0YVN0YXRlKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IF9fYXNzaWduKHt9LCB1cGRhdGFTdGF0ZSk7XG4gICAgfTtcbiAgICAvLyDQnNC10YLQvtC0INC/0LXRgNC10YHQsdC+0YDQutC4INGB0LvQsNC50LTQtdGA0LAsINC40Lwg0YPQv9GA0LDQstC70Y/QtdGCINCf0YDQtdC30LXQvdGC0LXRgFxuICAgIFZpZXcucHJvdG90eXBlLnVwRGF0YVNsaWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5zbGlkZXIucmVtb3ZlKCk7XG4gICAgICAgIHRoaXMuc2xpZGVyID0gdGhpcy5jcmVhdGVTbGlkZXIodGhpcy5zdGF0ZSwgdGhpcy5lbGVtZW50KTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuaW5pdCh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy5yb2xsZXJzID0gdGhpcy5jcmVhdGVSb2xsZXJzKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLnNjYWxlID0gdGhpcy5jcmVhdGVTY2FsZSh0aGlzLnN0YXRlKTtcbiAgICAgICAgdGhpcy50cmFjayA9IHRoaXMuY3JlYXRlVHJhY2sodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMuYmFyID0gdGhpcy5jcmVhdGVCYXIodGhpcy5zdGF0ZSk7XG4gICAgICAgIHRoaXMudXBEYXRhKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLmJpbmRFdmVudExpc3RlbmVycygpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZ2V0T25lU3RlcCA9IGZ1bmN0aW9uIChPcHRpb25zKSB7XG4gICAgICAgIHZhciBtaW4gPSBPcHRpb25zLm1pbiwgbWF4ID0gT3B0aW9ucy5tYXgsIHN0ZXAgPSBPcHRpb25zLnN0ZXA7XG4gICAgICAgIHZhciByZXN1bHQgPSBNYXRoLmNlaWwoKG1heCAtIG1pbikgLyBzdGVwKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0U2xpZGVyU2l6ZShPcHRpb25zKSAvIHJlc3VsdDtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmJpbmRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVUcmFja0NsaWNrID0gdGhpcy5oYW5kbGVUcmFja0NsaWNrLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuaGFuZGxlU2NhbGVDbGljayA9IHRoaXMuaGFuZGxlU2NhbGVDbGljay5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGhhbmRsZVNsaWRlckRyYWcgPSB0aGlzLmRyYWdTdGFydC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnNsaWRlci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgaGFuZGxlU2xpZGVyRHJhZyk7XG4gICAgICAgIHRoaXMuc2xpZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGhhbmRsZVNsaWRlckRyYWcpO1xuICAgICAgICB0aGlzLnNsaWRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlVHJhY2tDbGljayk7XG4gICAgICAgIHRoaXMuc2xpZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ3NjYWxlY2xpY2snLCB0aGlzLmhhbmRsZVNjYWxlQ2xpY2spO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZHJhZ1N0YXJ0ID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIGlmICh0aGlzLmdldFRhcmdldFR5cGUodGFyZ2V0KSkge1xuICAgICAgICAgICAgdmFyIGRyYWdfMSA9IHRoaXMuZHJhZy5iaW5kKHRoaXMsIHRhcmdldCk7XG4gICAgICAgICAgICB2YXIgaGFuZGxlVXBfMSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnXzEpO1xuICAgICAgICAgICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBkcmFnXzEpO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVVcF8xKTtcbiAgICAgICAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBoYW5kbGVVcF8xKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnXzEpO1xuICAgICAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIGRyYWdfMSk7XG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlVXBfMSk7XG4gICAgICAgICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBoYW5kbGVVcF8xKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZHJhZyA9IGZ1bmN0aW9uICh0YXJnZXQsIGV2ZW50KSB7XG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gdGhpcy5zdGF0ZS5pc1ZlcnRpY2FsO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgbW91c2VWYWx1ZSA9IDA7XG4gICAgICAgIHZhciByZWdleHAgPSAvdG9vbHRpcCB8fCByb2xsZXIvO1xuICAgICAgICB2YXIgaXNIYW5kbGUgPSAhcmVnZXhwLnRlc3QodGFyZ2V0LmNsYXNzTmFtZSk7XG4gICAgICAgIGlmIChpc0hhbmRsZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIHNlbnNvckhvcml6b250YWxFdmVudCA9IGV2ZW50LnR5cGUgPT09ICd0b3VjaG1vdmUnICYmICFpc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgbW91c2VIb3Jpem9udGFsRXZlbnQgPSBldmVudC50eXBlID09PSAnbW91c2Vtb3ZlJyAmJiAhaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHNlbnNvclZlcnRpY2FsRXZlbnQgPSBldmVudC50eXBlID09PSAndG91Y2htb3ZlJyAmJiBpc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgbW91c2VWZXJ0aWNhbEV2ZW50ID0gZXZlbnQudHlwZSA9PT0gJ21vdXNlbW92ZScgJiYgaXNWZXJ0aWNhbDtcbiAgICAgICAgaWYgKHNlbnNvckhvcml6b250YWxFdmVudCkge1xuICAgICAgICAgICAgbW91c2VWYWx1ZSA9IHRoaXMuY29udmVydFB4VG9WYWx1ZShldmVudC50b3VjaGVzWzBdLmNsaWVudFgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb3VzZUhvcml6b250YWxFdmVudCkge1xuICAgICAgICAgICAgbW91c2VWYWx1ZSA9IHRoaXMuY29udmVydFB4VG9WYWx1ZShldmVudC5jbGllbnRYKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2Vuc29yVmVydGljYWxFdmVudCkge1xuICAgICAgICAgICAgbW91c2VWYWx1ZSA9IHRoaXMuY29udmVydFB4VG9WYWx1ZShldmVudC50b3VjaGVzWzBdLmNsaWVudFkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb3VzZVZlcnRpY2FsRXZlbnQpIHtcbiAgICAgICAgICAgIG1vdXNlVmFsdWUgPSB0aGlzLmNvbnZlcnRQeFRvVmFsdWUoZXZlbnQuY2xpZW50WSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51cGRhdGVQb3NpdGlvbihtb3VzZVZhbHVlLCB0YXJnZXQpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuZ2V0VGFyZ2V0VHlwZSA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICAgICAgdmFyIFRBUkdFVF9GT1JXQVJEID0gaW50ZXJmYWNlc18xLkRpcmVjdGlvbi5UQVJHRVRfRk9SV0FSRCwgVEFSR0VUX0JBQ0tXQVJEID0gaW50ZXJmYWNlc18xLkRpcmVjdGlvbi5UQVJHRVRfQkFDS1dBUkQ7XG4gICAgICAgIHZhciByb2xsZXJzID0gdGhpcy5zbGlkZXIucXVlcnlTZWxlY3RvckFsbChjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5maW5kUm9sbGVycyk7XG4gICAgICAgIHZhciBfYSA9IFtyb2xsZXJzWzBdLCByb2xsZXJzWzFdXSwgcm9sbGVyRmlyc3QgPSBfYVswXSwgcm9sbGVyU2Vjb25kID0gX2FbMV07XG4gICAgICAgIGlmIChyb2xsZXJGaXJzdC5jb250YWlucyh0YXJnZXQpKVxuICAgICAgICAgICAgcmV0dXJuIFRBUkdFVF9GT1JXQVJEO1xuICAgICAgICBpZiAocm9sbGVyU2Vjb25kLmNvbnRhaW5zKHRhcmdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBUQVJHRVRfQkFDS1dBUkQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICd1bmRlZmluZWQnO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuaGFuZGxlU2NhbGVDbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgc2NhbGVQb3N0Zml4ID0gdGhpcy5zdGF0ZS5zY2FsZVBvc3RmaXg7XG4gICAgICAgIHZhciBzZXBhcmF0ZSA9IHRoaXMuc3RhdGUuc2VwYXJhdGU7XG4gICAgICAgIHZhciB2YWx1ZSA9IGV2ZW50LmRldGFpbC52YWx1ZTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gMDtcbiAgICAgICAgaWYgKHNlcGFyYXRlID09PSAnICcpIHtcbiAgICAgICAgICAgIHNlcGFyYXRlID0gJyZuYnNwOyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRlbCA9IHZhbHVlLnNwbGl0KHNjYWxlUG9zdGZpeCkuam9pbignJyk7XG4gICAgICAgIHBvc2l0aW9uID0gZGVsLnNwbGl0KHNlcGFyYXRlKS5qb2luKCcnKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFN0cmluZyhwb3NpdGlvbikuc3BsaXQoJywnKS5qb2luKCcuJyk7XG4gICAgICAgIHRoaXMudXBkYXRlUG9zaXRpb24oTnVtYmVyKHJlc3VsdCkpO1xuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuaGFuZGxlVHJhY2tDbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgaXNWZXJ0aWNhbCA9IHRoaXMuc3RhdGUuaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgdmFyIGNvb3JkaW5hdGUgPSAwO1xuICAgICAgICB2YXIgcmVnZXhwID0gL3NjYWxlLztcbiAgICAgICAgaWYgKHJlZ2V4cC50ZXN0KHRhcmdldC5jbGFzc05hbWUpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIGNvb3JkaW5hdGUgPSBldmVudC5jbGllbnRYO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29vcmRpbmF0ZSA9IGV2ZW50LmNsaWVudFk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5jb252ZXJ0UHhUb1ZhbHVlKGNvb3JkaW5hdGUpO1xuICAgICAgICB0aGlzLnVwZGF0ZVBvc2l0aW9uKHZhbHVlKTtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLnVwZGF0ZVBvc2l0aW9uID0gZnVuY3Rpb24gKHZhbHVlLCB0YXJnZXQpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5zdGF0ZSwgZnJvbSA9IF9hLmZyb20sIHRvID0gX2EudG8sIHN0ZXAgPSBfYS5zdGVwLCBpc0RvdWJsZSA9IF9hLmlzRG91YmxlO1xuICAgICAgICB2YXIgRk9SV0FSRCA9IGludGVyZmFjZXNfMS5EaXJlY3Rpb24uRk9SV0FSRCwgQkFDS1dBUkQgPSBpbnRlcmZhY2VzXzEuRGlyZWN0aW9uLkJBQ0tXQVJELCBUQVJHRVRfRk9SV0FSRCA9IGludGVyZmFjZXNfMS5EaXJlY3Rpb24uVEFSR0VUX0ZPUldBUkQsIFRBUkdFVF9CQUNLV0FSRCA9IGludGVyZmFjZXNfMS5EaXJlY3Rpb24uVEFSR0VUX0JBQ0tXQVJEO1xuICAgICAgICB2YXIgTkVXX1BPU0lUSU9OID0gaW50ZXJmYWNlc18xLkV2ZW50cy5ORVdfUE9TSVRJT047XG4gICAgICAgIHZhciBmcm9tRGlzdGFuY2UgPSBNYXRoLmFicyhmcm9tIC0gdmFsdWUpO1xuICAgICAgICB2YXIgdG9EaXN0YW5jZSA9IE1hdGguYWJzKHRvIC0gdmFsdWUpO1xuICAgICAgICB2YXIgaXNTaW5nbGVGcm9tID0gaXNEb3VibGUgJiYgZnJvbURpc3RhbmNlO1xuICAgICAgICBpZiAoaXNTaW5nbGVGcm9tKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChORVdfUE9TSVRJT04sIHtcbiAgICAgICAgICAgICAgICBmcm9tOiB2YWx1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0VmFsdWVUb0NvbG9yKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaXNGcm9tID0gKGZyb21EaXN0YW5jZSA8IHRvRGlzdGFuY2UpID8gRk9SV0FSRCA6IEJBQ0tXQVJEO1xuICAgICAgICB2YXIgdGFyZ2V0RnJvbSA9ICF0YXJnZXQgJiYgaXNGcm9tID09PSBGT1JXQVJEO1xuICAgICAgICB2YXIgdGFyZ2V0VG8gPSAhdGFyZ2V0ICYmIGlzRnJvbSA9PT0gQkFDS1dBUkQ7XG4gICAgICAgIGlmICh0YXJnZXRGcm9tKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChORVdfUE9TSVRJT04sIHtcbiAgICAgICAgICAgICAgICBmcm9tOiB2YWx1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0VmFsdWVUb0NvbG9yKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGFyZ2V0VG8pIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5lbWl0KE5FV19QT1NJVElPTiwge1xuICAgICAgICAgICAgICAgIHRvOiB2YWx1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0VmFsdWVUb0NvbG9yKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdGFyZ2V0cyA9IHRhcmdldCAmJiB0aGlzLmdldFRhcmdldFR5cGUodGFyZ2V0KTtcbiAgICAgICAgdmFyIGlzRnJvbVRhcmdldCA9IHRhcmdldHMgPT09IFRBUkdFVF9GT1JXQVJEICYmICFpc0RvdWJsZTtcbiAgICAgICAgdmFyIGlzVG9UYXJnZXQgPSB0YXJnZXRzID09PSBUQVJHRVRfQkFDS1dBUkQgJiYgIWlzRG91YmxlO1xuICAgICAgICB2YXIgY29ycmVjdEZyb20gPSBpc0Zyb21UYXJnZXQgJiYgdmFsdWUgPiB0byAtIHN0ZXA7XG4gICAgICAgIHZhciBjb3JyZWN0VG8gPSBpc1RvVGFyZ2V0ICYmIHZhbHVlIDwgZnJvbSArIHN0ZXA7XG4gICAgICAgIGlmIChjb3JyZWN0RnJvbSkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoTkVXX1BPU0lUSU9OLCB7XG4gICAgICAgICAgICAgICAgZnJvbTogdG8gLSBzdGVwLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRnJvbVRhcmdldCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoTkVXX1BPU0lUSU9OLCB7XG4gICAgICAgICAgICAgICAgZnJvbTogdmFsdWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuY29udmVydFZhbHVlVG9Db2xvcih2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvcnJlY3RUbykge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoTkVXX1BPU0lUSU9OLCB7XG4gICAgICAgICAgICAgICAgdG86IGZyb20gKyBzdGVwLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzVG9UYXJnZXQpIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5lbWl0KE5FV19QT1NJVElPTiwge1xuICAgICAgICAgICAgICAgIHRvOiB2YWx1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0VmFsdWVUb0NvbG9yKHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVmlldy5wcm90b3R5cGUuY29udmVydFB4VG9WYWx1ZSA9IGZ1bmN0aW9uIChjb29yZGluYXRlKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMuc3RhdGUsIG1pbiA9IF9hLm1pbiwgbWF4ID0gX2EubWF4LCBzdGVwID0gX2Euc3RlcCwgb25lU3RlcCA9IF9hLm9uZVN0ZXAsIHNpemUgPSBfYS5zaXplLCBpc1ZlcnRpY2FsID0gX2EuaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHNsaWRlclBvcyA9IHRoaXMuZ2V0U2xpZGVyUG9zaXRpb24oKTtcbiAgICAgICAgdmFyIHNsaWRlckVuZFBvcyA9IHNsaWRlclBvcyArIHNpemU7XG4gICAgICAgIHZhciBweCA9IDA7XG4gICAgICAgIGlmICghaXNWZXJ0aWNhbCkge1xuICAgICAgICAgICAgcHggPSBjb29yZGluYXRlIC0gc2xpZGVyUG9zO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHggPSBzbGlkZXJFbmRQb3MgLSBjb29yZGluYXRlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChweCA+IHNpemUpXG4gICAgICAgICAgICByZXR1cm4gbWF4O1xuICAgICAgICBpZiAocHggPCAwKVxuICAgICAgICAgICAgcmV0dXJuIG1pbjtcbiAgICAgICAgdmFyIHZhbHVlID0gTWF0aC5yb3VuZChweCAvIG9uZVN0ZXApICogc3RlcCArIG1pbjtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgLyoqXG4gICAgKiDQktGL0YfQtdGB0LvRj9C10Lwg0L3QvtCy0YvQuSDRhtCy0LXRgiDQsiDQt9Cw0LLQuNGB0LjQvNC+0YHRgtC4INC+0YIg0L/QvtC70L7QttC10L3QuNGPINCx0LXQs9GD0L3QutC+0LJcbiAgICAqINCf0LXRgNC10LLQvtC00LjQvCB2YWx1ZSDQsiAxNi3RgNC40YfQvdGL0Lkg0YTQvtGA0LzQsNGCXG4gICAgKiAqL1xuICAgIFZpZXcucHJvdG90eXBlLmNvbnZlcnRWYWx1ZVRvQ29sb3IgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5zdGF0ZSwgY29sb3IgPSBfYS5jb2xvciwgZ3JhZGllbnQgPSBfYS5ncmFkaWVudDtcbiAgICAgICAgdmFyIF9iID0gdGhpcy5zdGF0ZSwgbWF4ID0gX2IubWF4LCBpc0NvbG9yID0gX2IuaXNDb2xvciwgY2hhbmdlQ29sb3IgPSBfYi5jaGFuZ2VDb2xvcjtcbiAgICAgICAgdmFyIHZhbCA9IHZhbHVlIC8gbWF4O1xuICAgICAgICB2YXIgaXNDaGFuZ2VDb2xvciA9IGlzQ29sb3IgJiYgIWNoYW5nZUNvbG9yO1xuICAgICAgICB2YXIgaXNDaGFuZ2VOZXdDb2xvciA9IGlzQ29sb3IgJiYgY2hhbmdlQ29sb3I7XG4gICAgICAgIHZhciBwYWxpdHJhID0gMDtcbiAgICAgICAgdmFyIGdyUGFsaXRyYSA9IDA7XG4gICAgICAgIGlmIChpc0NoYW5nZUNvbG9yKSB7XG4gICAgICAgICAgICBwYWxpdHJhID0gTWF0aC5yb3VuZCh2YWwgKiAyNTUgKiAyNTUgKiAyNTUpO1xuICAgICAgICAgICAgZ3JQYWxpdHJhID0gTWF0aC5yb3VuZCh2YWwgKiAyNTUgKiAyNTQgKiAyNTQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0NoYW5nZU5ld0NvbG9yKSB7XG4gICAgICAgICAgICBwYWxpdHJhID0gTWF0aC5yb3VuZCh2YWwgKiAyNTYgKiAyNTYgKiAyNTUpO1xuICAgICAgICAgICAgZ3JQYWxpdHJhID0gTWF0aC5yb3VuZCh2YWwgKiAyNTQgKiAyNTQgKiAyNTQpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjb3JyZWN0R3JhZGllbnQgPSBNYXRoLmFicyhnclBhbGl0cmEpO1xuICAgICAgICB2YXIgY29ycmVjdCA9IE1hdGguYWJzKHBhbGl0cmEpO1xuICAgICAgICB2YXIgc2V0Q29sb3IgPSBjb3JyZWN0LnRvU3RyaW5nKDE2KTtcbiAgICAgICAgdmFyIHNldEdyYWRpZW50ID0gY29ycmVjdEdyYWRpZW50LnRvU3RyaW5nKDE2KTtcbiAgICAgICAgY29sb3IgPSBcIiNcIiArIHNldENvbG9yO1xuICAgICAgICBncmFkaWVudCA9IFwiI1wiICsgc2V0R3JhZGllbnQ7XG4gICAgICAgIHZhciBORVdfUE9TSVRJT04gPSBpbnRlcmZhY2VzXzEuRXZlbnRzLk5FV19QT1NJVElPTjtcbiAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoTkVXX1BPU0lUSU9OLCB7XG4gICAgICAgICAgICBjb2xvcjogY29sb3IsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChORVdfUE9TSVRJT04sIHtcbiAgICAgICAgICAgIGdyYWRpZW50OiBncmFkaWVudCxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBWaWV3LnByb3RvdHlwZS5nZXRTbGlkZXJQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5zdGF0ZSwgc2xpZGVyID0gX2Euc2xpZGVyLCBpc1ZlcnRpY2FsID0gX2EuaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gMDtcbiAgICAgICAgaWYgKCFpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwb3NpdGlvbjtcbiAgICB9O1xuICAgIFZpZXcucHJvdG90eXBlLmdldFNsaWRlclNpemUgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIGlzVmVydGljYWwgPSBfYS5pc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgc2l6ZSA9IDA7XG4gICAgICAgIGlmICghaXNWZXJ0aWNhbCkge1xuICAgICAgICAgICAgc2l6ZSA9IHRoaXMuc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2l6ZSA9IHRoaXMuc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICB9O1xuICAgIHJldHVybiBWaWV3O1xufSgpKTtcbmV4cG9ydHMuVmlldyA9IFZpZXc7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUm9sbGVycyA9IHZvaWQgMDtcbnZhciBjb3JyZWN0U2VwYXJhdGVfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL2NvcnJlY3RTZXBhcmF0ZVwiKTtcbnZhciBjbGFzc05hbWVzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGlicy9jbGFzc05hbWVzXCIpO1xudmFyIFJvbGxlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUm9sbGVycyhvcHRpb25zKSB7XG4gICAgICAgIHRoaXMucm9sbGVycyA9IHRoaXMuY3JlYXRlKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLnRvb2x0aXBzID0gdGhpcy5jcmVhdGVUb29sdGlwKCk7XG4gICAgICAgIHRoaXMubW92ZVJvbGxlcnNBdFZhbHVlKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLnRvZ2dsZVJvbGxlcnMob3B0aW9ucyk7XG4gICAgfVxuICAgIFJvbGxlcnMucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgc2xpZGVyID0gX2Euc2xpZGVyO1xuICAgICAgICB2YXIgcm9sbGVyRmlyc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcm9sbGVyRmlyc3QuY2xhc3NOYW1lID0gY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMucm9sbGVyRmlyc3Q7XG4gICAgICAgIHZhciByb2xsZXJTZWNvbmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcm9sbGVyU2Vjb25kLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnJvbGxlclNlY29uZDtcbiAgICAgICAgc2xpZGVyLmFwcGVuZChyb2xsZXJGaXJzdCk7XG4gICAgICAgIHNsaWRlci5hcHBlbmQocm9sbGVyU2Vjb25kKTtcbiAgICAgICAgcmV0dXJuIFtyb2xsZXJGaXJzdCwgcm9sbGVyU2Vjb25kXTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNyZWF0ZVRvb2x0aXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBmaXJzdFRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgZmlyc3RUb29sdGlwLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLmZpcnN0VG9vbHRpcDtcbiAgICAgICAgdmFyIHNlY29uZFRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgc2Vjb25kVG9vbHRpcC5jbGFzc05hbWUgPSBjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5zZWNvbmRUb29sdGlwO1xuICAgICAgICB2YXIgcm9sbGVycyA9IHRoaXMucm9sbGVycztcbiAgICAgICAgdmFyIGZpcnN0Um9sbGVyID0gcm9sbGVyc1swXSwgc2Vjb25kUm9sbGVyID0gcm9sbGVyc1sxXTtcbiAgICAgICAgZmlyc3RSb2xsZXIuYXBwZW5kKGZpcnN0VG9vbHRpcCk7XG4gICAgICAgIHNlY29uZFJvbGxlci5hcHBlbmQoc2Vjb25kVG9vbHRpcCk7XG4gICAgICAgIHJldHVybiBbZmlyc3RUb29sdGlwLCBzZWNvbmRUb29sdGlwXTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLnVwZGF0YU91dFRvb2x0aXAgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgdG8gPSBvcHRpb25zLnRvLCBmcm9tID0gb3B0aW9ucy5mcm9tLCBpc1Bvc3RmaXggPSBvcHRpb25zLmlzUG9zdGZpeCwgaXNMYWJlbCA9IG9wdGlvbnMuaXNMYWJlbCwgaXNQcmVmaXggPSBvcHRpb25zLmlzUHJlZml4O1xuICAgICAgICB2YXIgcG9zdGZpeCA9IG9wdGlvbnMucG9zdGZpeDtcbiAgICAgICAgdmFyIHRvb2x0aXBzID0gdGhpcy50b29sdGlwcztcbiAgICAgICAgdmFyIGZpcnN0VG9vbHRpcCA9IHRvb2x0aXBzWzBdLCBzZWNvbmRUb29sdGlwID0gdG9vbHRpcHNbMV07XG4gICAgICAgIGlmICghaXNQb3N0Zml4KSB7XG4gICAgICAgICAgICBwb3N0Zml4ID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzU2V0UHJlZml4ID0gaXNMYWJlbCAmJiBpc1ByZWZpeDtcbiAgICAgICAgdmFyIGlzU2V0UG9zdGZpeCA9IGlzTGFiZWwgJiYgIWlzUHJlZml4O1xuICAgICAgICAvLyDQvdCw0YHRgtGA0L7QudC60Lgg0L/QvtGB0YLRhNC40LrRgVxuICAgICAgICBpZiAoaXNTZXRQb3N0Zml4KSB7XG4gICAgICAgICAgICBmaXJzdFRvb2x0aXAuaW5uZXJIVE1MID0gXCJcIiArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShmcm9tLCBvcHRpb25zKSArIHBvc3RmaXg7XG4gICAgICAgICAgICBzZWNvbmRUb29sdGlwLmlubmVySFRNTCA9IFwiXCIgKyBjb3JyZWN0U2VwYXJhdGVfMS5jb3JyZWN0U2VwYXJhdGUodG8sIG9wdGlvbnMpICsgcG9zdGZpeDtcbiAgICAgICAgfVxuICAgICAgICAvLyDQvdCw0YHRgtGA0L7QudC60Lgg0L/RgNC10YTQuNC60YFcbiAgICAgICAgaWYgKGlzU2V0UHJlZml4KSB7XG4gICAgICAgICAgICBmaXJzdFRvb2x0aXAuaW5uZXJIVE1MID0gXCJcIiArIHBvc3RmaXggKyBjb3JyZWN0U2VwYXJhdGVfMS5jb3JyZWN0U2VwYXJhdGUoZnJvbSwgb3B0aW9ucyk7XG4gICAgICAgICAgICBzZWNvbmRUb29sdGlwLmlubmVySFRNTCA9IFwiXCIgKyBwb3N0Zml4ICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKHRvLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldENvbG9yKG9wdGlvbnMpO1xuICAgIH07XG4gICAgUm9sbGVycy5wcm90b3R5cGUuc2V0Q29sb3IgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIGNvbG9yID0gX2EuY29sb3IsIGdyYWRpZW50ID0gX2EuZ3JhZGllbnQsIGlzQ29sb3JPdXQgPSBfYS5pc0NvbG9yT3V0LCBhbGxDb2xvcnMgPSBfYS5hbGxDb2xvcnMsIGlzQ2hhbmdlQ29sb3IgPSBfYS5pc0NoYW5nZUNvbG9yLCBpc0xhYmVsID0gX2EuaXNMYWJlbDtcbiAgICAgICAgLyoqXG4gICAgICAgICog0JfQsNC00YPQvNC60LAg0YHQtNC10LvQsNGC0Ywg0L7QsdGA0LDRgtC90YvQuSDQutC+0L3QstC10LrRgtC+0YAg0LjQtyAxNi3RgNC40YfQvdC+0LPQviDQsiDQvtCx0YvRh9C90YvQuSDQstC40LQsINC90LDQv9GA0LjQvNC10YAgI2ZmZiDQslxuICAgICAgICB3aGl0ZSwg0Lgg0LIg0LTQsNC70YzQvdC10LnRiNC10Lwg0YHQvtCx0LjRgNCw0LvRgdGPINC00L7Qv9C+0LvQvdGP0YLRjCDQv9C10YDQtdCy0L7QtFxuICAgICAgICAqICovXG4gICAgICAgIHZhciBuZXdDb2xvciA9IGFsbENvbG9yc1tjb2xvcl07XG4gICAgICAgIHZhciBuZXdHcmFkaWVudCA9IGFsbENvbG9yc1tncmFkaWVudF07XG4gICAgICAgIGlmICghbmV3R3JhZGllbnQpIHtcbiAgICAgICAgICAgIG5ld0dyYWRpZW50ID0gZ3JhZGllbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFuZXdDb2xvcikge1xuICAgICAgICAgICAgbmV3Q29sb3IgPSBjb2xvcjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdG9vbHRpcHMgPSB0aGlzLnRvb2x0aXBzO1xuICAgICAgICB2YXIgZmlyc3RUb29sdGlwID0gdG9vbHRpcHNbMF0sIHNlY29uZFRvb2x0aXAgPSB0b29sdGlwc1sxXTtcbiAgICAgICAgdmFyIHNldE5ld0NvbG9yID0gaXNDaGFuZ2VDb2xvciAmJiBpc0NvbG9yT3V0O1xuICAgICAgICBpZiAoc2V0TmV3Q29sb3IpIHtcbiAgICAgICAgICAgIGZpcnN0VG9vbHRpcC5pbm5lckhUTUwgPSBTdHJpbmcobmV3Q29sb3IpO1xuICAgICAgICAgICAgc2Vjb25kVG9vbHRpcC5pbm5lckhUTUwgPSBTdHJpbmcobmV3R3JhZGllbnQpO1xuICAgICAgICAgICAgZmlyc3RUb29sdGlwLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiXCIgKyBjb2xvcjtcbiAgICAgICAgICAgIHNlY29uZFRvb2x0aXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJcIiArIGdyYWRpZW50O1xuICAgICAgICAgICAgZmlyc3RUb29sdGlwLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMudG9vbHRpcFdoaXRlKTtcbiAgICAgICAgICAgIHNlY29uZFRvb2x0aXAuY2xhc3NMaXN0LmFkZChjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy50b29sdGlwV2hpdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNMYWJlbCkge1xuICAgICAgICAgICAgZmlyc3RUb29sdGlwLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgICAgICBzZWNvbmRUb29sdGlwLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLnVwZGF0YUNvbG9yID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBjb2xvciA9IF9hLmNvbG9yLCBpc0dyYWRpZW50ID0gX2EuaXNHcmFkaWVudCwgZ3JhZGllbnQgPSBfYS5ncmFkaWVudCwgaXNDaGFuZ2VDb2xvciA9IF9hLmlzQ2hhbmdlQ29sb3IsIGdyYWRpZW50RGVnID0gX2EuZ3JhZGllbnREZWc7XG4gICAgICAgIHZhciByb2xsZXJzID0gdGhpcy5yb2xsZXJzO1xuICAgICAgICB2YXIgZmlyc3RSb2xsZXIgPSByb2xsZXJzWzBdLCBzZWNvbmRSb2xsZXIgPSByb2xsZXJzWzFdO1xuICAgICAgICB2YXIgaXNDaGFuZ2VHcmFkaWVudCA9IGlzQ2hhbmdlQ29sb3IgJiYgaXNHcmFkaWVudDtcbiAgICAgICAgdmFyIGlzQ29sb3IgPSBpc0NoYW5nZUNvbG9yICYmICFpc0dyYWRpZW50O1xuICAgICAgICBpZiAoaXNDaGFuZ2VHcmFkaWVudCkge1xuICAgICAgICAgICAgZmlyc3RSb2xsZXIuc3R5bGUuYmFja2dyb3VuZCA9IFwibGluZWFyLWdyYWRpZW50KFwiICsgZ3JhZGllbnREZWcgKyBcImRlZywgXCIgKyBjb2xvciArIFwiLCBcIiArIGdyYWRpZW50ICsgXCIpXCI7XG4gICAgICAgICAgICBzZWNvbmRSb2xsZXIuc3R5bGUuYmFja2dyb3VuZCA9IFwibGluZWFyLWdyYWRpZW50KFwiICsgZ3JhZGllbnREZWcgKyBcImRlZywgXCIgKyBjb2xvciArIFwiLCBcIiArIGdyYWRpZW50ICsgXCIpXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQ29sb3IpIHtcbiAgICAgICAgICAgIGZpcnN0Um9sbGVyLnN0eWxlLmJhY2tncm91bmQgPSBjb2xvcjtcbiAgICAgICAgICAgIHNlY29uZFJvbGxlci5zdHlsZS5iYWNrZ3JvdW5kID0gY29sb3I7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLm1vdmVSb2xsZXJzQXRWYWx1ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciB0byA9IG9wdGlvbnMudG8sIGZyb20gPSBvcHRpb25zLmZyb20sIGlzVmVydGljYWwgPSBvcHRpb25zLmlzVmVydGljYWw7XG4gICAgICAgIHZhciByb2xsZXJzID0gdGhpcy5yb2xsZXJzO1xuICAgICAgICB2YXIgZmlyc3RSb2xsZXIgPSByb2xsZXJzWzBdLCBzZWNvbmRSb2xsZXIgPSByb2xsZXJzWzFdO1xuICAgICAgICB2YXIgcHhUbyA9IHRoaXMuY29udmVydFZhbHVlVG9QeCh0bywgb3B0aW9ucyk7XG4gICAgICAgIHZhciBweEZyb20gPSB0aGlzLmNvbnZlcnRWYWx1ZVRvUHgoZnJvbSwgb3B0aW9ucyk7XG4gICAgICAgIHZhciBwb3NpdGlvblRvID0gdGhpcy5jb252ZXJ0UHhUb1Byb2NlbnQocHhUbywgb3B0aW9ucyk7XG4gICAgICAgIHZhciBwb3NpdGlvbkZyb20gPSB0aGlzLmNvbnZlcnRQeFRvUHJvY2VudChweEZyb20sIG9wdGlvbnMpO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIGZpcnN0Um9sbGVyLnN0eWxlLmxlZnQgPSBwb3NpdGlvbkZyb20gKyBcIiVcIjtcbiAgICAgICAgICAgIHNlY29uZFJvbGxlci5zdHlsZS5sZWZ0ID0gcG9zaXRpb25UbyArIFwiJVwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZmlyc3RSb2xsZXIuc3R5bGUuYm90dG9tID0gcG9zaXRpb25Gcm9tICsgXCIlXCI7XG4gICAgICAgICAgICBzZWNvbmRSb2xsZXIuc3R5bGUuYm90dG9tID0gcG9zaXRpb25UbyArIFwiJVwiO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucyk7XG4gICAgICAgIHRoaXMudXBkYXRhT3V0VG9vbHRpcChvcHRpb25zKTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLnVwRGF0YSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHRoaXMubW92ZVJvbGxlcnNBdFZhbHVlKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLnRvZ2dsZVJvbGxlcnMob3B0aW9ucyk7XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucyk7XG4gICAgICAgIHRoaXMudXBkYXRhT3V0VG9vbHRpcChvcHRpb25zKTtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNvbnZlcnRWYWx1ZVRvUHggPSBmdW5jdGlvbiAodmFsdWUsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG1pbiA9IG9wdGlvbnMubWluLCBtYXggPSBvcHRpb25zLm1heCwgc3RlcCA9IG9wdGlvbnMuc3RlcCwgc2l6ZSA9IG9wdGlvbnMuc2l6ZSwgb25lU3RlcCA9IG9wdGlvbnMub25lU3RlcDtcbiAgICAgICAgaWYgKHZhbHVlID09PSBtYXgpXG4gICAgICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoKHZhbHVlIC0gbWluKSAvIHN0ZXApICogb25lU3RlcDtcbiAgICB9O1xuICAgIFJvbGxlcnMucHJvdG90eXBlLmNvbnZlcnRQeFRvUHJvY2VudCA9IGZ1bmN0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgc2l6ZSA9IG9wdGlvbnMuc2l6ZTtcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAqIDEwMCkgLyBzaXplO1xuICAgIH07XG4gICAgUm9sbGVycy5wcm90b3R5cGUudG9nZ2xlUm9sbGVycyA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgaXNEb3VibGUgPSBfYS5pc0RvdWJsZTtcbiAgICAgICAgdmFyIHJvbGxlcnMgPSB0aGlzLnJvbGxlcnM7XG4gICAgICAgIHZhciBmaXJzdFJvbGxlciA9IHJvbGxlcnNbMF0sIHNlY29uZFJvbGxlciA9IHJvbGxlcnNbMV07XG4gICAgICAgIHZhciBpc1Zpc2libGUgPSBpc0RvdWJsZSAmJiBmaXJzdFJvbGxlcjtcbiAgICAgICAgaWYgKGlzVmlzaWJsZSkge1xuICAgICAgICAgICAgc2Vjb25kUm9sbGVyLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZWNvbmRSb2xsZXIuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5ub3RWaXNpYmxlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFJvbGxlcnM7XG59KCkpO1xuZXhwb3J0cy5Sb2xsZXJzID0gUm9sbGVycztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFjayA9IHZvaWQgMDtcbnZhciBjb3JyZWN0U2VwYXJhdGVfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL2NvcnJlY3RTZXBhcmF0ZVwiKTtcbnZhciBjbGFzc05hbWVzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGlicy9jbGFzc05hbWVzXCIpO1xudmFyIFRyYWNrID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRyYWNrKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy50cmFjayA9IHRoaXMuY3JlYXRlKG9wdGlvbnMpO1xuICAgICAgICB0aGlzLm91dEVsZW1lbnRzID0gdGhpcy5jcmVhdGVPdXRFbGVtZW50cygpO1xuICAgICAgICB0aGlzLnNldE91dChvcHRpb25zKTtcbiAgICB9XG4gICAgVHJhY2sucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgc2xpZGVyID0gX2Euc2xpZGVyO1xuICAgICAgICB2YXIgdHJhY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdHJhY2suY2xhc3NOYW1lID0gY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMudHJhY2s7XG4gICAgICAgIHNsaWRlci5hcHBlbmQodHJhY2spO1xuICAgICAgICByZXR1cm4gdHJhY2s7XG4gICAgfTtcbiAgICBUcmFjay5wcm90b3R5cGUuY3JlYXRlT3V0RWxlbWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzdGFydFZhbHVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHZhciBlbmRWYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBzdGFydFZhbHVlLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnRyYWNrT3V0U3RhcnQ7XG4gICAgICAgIGVuZFZhbHVlLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnRyYWNrT3V0RW5kO1xuICAgICAgICB0aGlzLnRyYWNrLmFwcGVuZChzdGFydFZhbHVlKTtcbiAgICAgICAgdGhpcy50cmFjay5hcHBlbmQoZW5kVmFsdWUpO1xuICAgICAgICByZXR1cm4gW3N0YXJ0VmFsdWUsIGVuZFZhbHVlXTtcbiAgICB9O1xuICAgIFRyYWNrLnByb3RvdHlwZS5zZXRPdXQgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICB2YXIgbWluID0gb3B0aW9ucy5taW4sIG1heCA9IG9wdGlvbnMubWF4LCBmcm9tID0gb3B0aW9ucy5mcm9tLCB0byA9IG9wdGlvbnMudG8sIG1pbk1heCA9IG9wdGlvbnMubWluTWF4LCBmcm9tVG8gPSBvcHRpb25zLmZyb21UbywgaXNUcmFja1Bvc3RmaXggPSBvcHRpb25zLmlzVHJhY2tQb3N0Zml4LCBpc1ByZWZpeCA9IG9wdGlvbnMuaXNQcmVmaXg7XG4gICAgICAgIHZhciB0cmFja1Bvc3RmaXggPSBvcHRpb25zLnRyYWNrUG9zdGZpeDtcbiAgICAgICAgaWYgKCFpc1RyYWNrUG9zdGZpeCkge1xuICAgICAgICAgICAgdHJhY2tQb3N0Zml4ID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgLy8g0L3QsNGB0YLRgNC+0LnQutC4INC00LvRjyDQv9C+0YHRgtGE0LjQutGB0LBcbiAgICAgICAgdmFyIG91dEVsZW1lbnRzID0gdGhpcy5vdXRFbGVtZW50cztcbiAgICAgICAgdmFyIHRyYWNrT3V0U3RhcnQgPSBvdXRFbGVtZW50c1swXSwgdHJhY2tPdXRFbmQgPSBvdXRFbGVtZW50c1sxXTtcbiAgICAgICAgaWYgKG1pbk1heCkge1xuICAgICAgICAgICAgdHJhY2tPdXRTdGFydC5pbm5lckhUTUwgPSBcIlwiICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKG1pbiwgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgICAgICB0cmFja091dEVuZC5pbm5lckhUTUwgPSBcIlwiICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKG1heCwgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZyb21Ubykge1xuICAgICAgICAgICAgdHJhY2tPdXRTdGFydC5pbm5lckhUTUwgPSBcIlwiICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKGZyb20sIG9wdGlvbnMpICsgdHJhY2tQb3N0Zml4O1xuICAgICAgICAgICAgdHJhY2tPdXRFbmQuaW5uZXJIVE1MID0gXCJcIiArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh0bywgb3B0aW9ucykgKyB0cmFja1Bvc3RmaXg7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzRnJvbXRvUHJlZml4ID0gZnJvbVRvICYmIGlzUHJlZml4O1xuICAgICAgICB2YXIgaXNNaW5NYXhQcmVmaXggPSBtaW5NYXggJiYgaXNQcmVmaXg7XG4gICAgICAgIC8vINC90LDRgdGC0YDQvtC50LrQuCDQtNC70Y8g0L/RgNC10YTQuNC60YHQsFxuICAgICAgICBpZiAoaXNNaW5NYXhQcmVmaXgpIHtcbiAgICAgICAgICAgIHRyYWNrT3V0U3RhcnQuaW5uZXJIVE1MID0gXCJcIiArIHRyYWNrUG9zdGZpeCArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShtaW4sIG9wdGlvbnMpO1xuICAgICAgICAgICAgdHJhY2tPdXRFbmQuaW5uZXJIVE1MID0gXCJcIiArIHRyYWNrUG9zdGZpeCArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZShtYXgsIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0Zyb210b1ByZWZpeCkge1xuICAgICAgICAgICAgdHJhY2tPdXRTdGFydC5pbm5lckhUTUwgPSBcIlwiICsgdHJhY2tQb3N0Zml4ICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKGZyb20sIG9wdGlvbnMpO1xuICAgICAgICAgICAgdHJhY2tPdXRFbmQuaW5uZXJIVE1MID0gXCJcIiArIHRyYWNrUG9zdGZpeCArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh0bywgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBUcmFjaztcbn0oKSk7XG5leHBvcnRzLlRyYWNrID0gVHJhY2s7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjYWxlID0gdm9pZCAwO1xudmFyIGNvcnJlY3RTZXBhcmF0ZV8xID0gcmVxdWlyZShcIi4uLy4uL2xpYnMvY29ycmVjdFNlcGFyYXRlXCIpO1xudmFyIGNsYXNzTmFtZXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL2NsYXNzTmFtZXNcIik7XG52YXIgU2NhbGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2NhbGUob3B0aW9ucykge1xuICAgICAgICB0aGlzLmNyZWF0ZShvcHRpb25zKTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB9XG4gICAgU2NhbGUucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIHNjYWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHNjYWxlLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnNjYWxlO1xuICAgICAgICBzbGlkZXIuYXBwZW5kKHNjYWxlKTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVycyhzY2FsZSk7XG4gICAgICAgIHRoaXMuYWRkU2NhbGVNYXJrZXIob3B0aW9ucywgc2NhbGUpO1xuICAgICAgICB0aGlzLmNoZWNrU2NhbGUob3B0aW9ucywgc2NhbGUpO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLnVwRGF0YSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIHNjYWxlID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuZmluZFNjYWxlKTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHRoaXMub3B0aW9ucyksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmNoZWNrU2NhbGUob3B0aW9ucywgc2NhbGUpO1xuICAgICAgICB0aGlzLnVwZGF0YVNjYWxlTWFya2VyKG9wdGlvbnMpO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLnVwZGF0YVNjYWxlTWFya2VyID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBvbmx5RGl2aXNpb25zID0gX2Eub25seURpdmlzaW9ucywgc2xpZGVyID0gX2Euc2xpZGVyLCBjb2xvciA9IF9hLmNvbG9yO1xuICAgICAgICB2YXIgc2NhbGVNYXJrZXJzID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3JBbGwoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuZmluZFNjYWxlVmFsdWUpO1xuICAgICAgICBzY2FsZU1hcmtlcnMuZm9yRWFjaChmdW5jdGlvbiAoc2NhbGVNYXJrZXIpIHtcbiAgICAgICAgICAgIGlmIChvbmx5RGl2aXNpb25zKSB7XG4gICAgICAgICAgICAgICAgc2NhbGVNYXJrZXIuY2xhc3NMaXN0LmFkZChjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5zY2FsZUZzWmVybyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tc2NhbGUtY29sb3InLCBcIiBcIiArIGNvbG9yKTtcbiAgICB9O1xuICAgIFNjYWxlLnByb3RvdHlwZS5jaGVja1NjYWxlID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNjYWxlKSB7XG4gICAgICAgIHZhciBpc1NjYWxlID0gb3B0aW9ucy5pc1NjYWxlO1xuICAgICAgICBpZiAoIWlzU2NhbGUpIHtcbiAgICAgICAgICAgIHNjYWxlLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2NhbGUpIHtcbiAgICAgICAgICAgIHNjYWxlLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMubm90VmlzaWJsZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjYWxlLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uIChzY2FsZSkge1xuICAgICAgICB0aGlzLmhhbmRsZVNjYWxlQ2xpY2sgPSB0aGlzLmhhbmRsZVNjYWxlQ2xpY2suYmluZCh0aGlzKTtcbiAgICAgICAgc2NhbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZVNjYWxlQ2xpY2spO1xuICAgIH07XG4gICAgU2NhbGUucHJvdG90eXBlLmFkZFNjYWxlTWFya2VyID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNjYWxlKSB7XG4gICAgICAgIHZhciBtaW4gPSBvcHRpb25zLm1pbiwgbWF4ID0gb3B0aW9ucy5tYXgsIHN0ZXAgPSBvcHRpb25zLnN0ZXAsIHNpemUgPSBvcHRpb25zLnNpemUsIG9uZVN0ZXAgPSBvcHRpb25zLm9uZVN0ZXA7XG4gICAgICAgIHZhciBpbmMgPSB0aGlzLmdldEluY3JlbWVudChvcHRpb25zKTtcbiAgICAgICAgdmFyIHB4SW5jID0gKGluYyAvIHN0ZXApICogb25lU3RlcDtcbiAgICAgICAgdmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICB2YXIgcHhDdXJyZW50ID0gMDtcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICBmb3IgKHZhciBjdXJyZW50ID0gbWluOyBjdXJyZW50IDwgbWF4OyBjdXJyZW50ICs9IGluYywgaSArPSAxKSB7XG4gICAgICAgICAgICBpZiAocHhDdXJyZW50ID4gc2l6ZSAtIDUwKVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgdmFyIHBhcmFtZXRlcnMgPSB7XG4gICAgICAgICAgICAgICAgZnJhZ21lbnQ6IGZyYWdtZW50LFxuICAgICAgICAgICAgICAgIHZhbHVlOiBjdXJyZW50LCBwb3NpdGlvbjogcHhDdXJyZW50LFxuICAgICAgICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgdmFsOiBpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlU2NhbGVNYXJrZXIocGFyYW1ldGVycyk7XG4gICAgICAgICAgICBweEN1cnJlbnQgKz0gcHhJbmM7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5ld1BhcmFtID0ge1xuICAgICAgICAgICAgZnJhZ21lbnQ6IGZyYWdtZW50LFxuICAgICAgICAgICAgdmFsdWU6IG1heCwgcG9zaXRpb246IHNpemUsXG4gICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zLFxuICAgICAgICAgICAgdmFsOiA1LFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNyZWF0ZVNjYWxlTWFya2VyKG5ld1BhcmFtKTtcbiAgICAgICAgc2NhbGUuYXBwZW5kKGZyYWdtZW50KTtcbiAgICB9O1xuICAgIFNjYWxlLnByb3RvdHlwZS5nZXRJbmNyZW1lbnQgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIHNpemUgPSBfYS5zaXplLCBvbmVTdGVwID0gX2Eub25lU3RlcCwgc3RlcCA9IF9hLnN0ZXA7XG4gICAgICAgIHZhciB2YWx1ZSA9IE1hdGguY2VpbChzaXplIC8gb25lU3RlcCk7XG4gICAgICAgIHZhciBpbmMgPSBNYXRoLmNlaWwodmFsdWUgLyA1KSAqIHN0ZXA7XG4gICAgICAgIHJldHVybiBpbmM7XG4gICAgfTtcbiAgICBTY2FsZS5wcm90b3R5cGUuY3JlYXRlU2NhbGVNYXJrZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIGZyYWdtZW50ID0gX2EuZnJhZ21lbnQsIHZhbHVlID0gX2EudmFsdWUsIHBvc2l0aW9uID0gX2EucG9zaXRpb24sIG9wdGlvbnMgPSBfYS5vcHRpb25zLCB2YWwgPSBfYS52YWw7XG4gICAgICAgIHZhciBpc1NjYWxlUG9zdGZpeCA9IG9wdGlvbnMuaXNTY2FsZVBvc3RmaXgsIGlzUHJlZml4ID0gb3B0aW9ucy5pc1ByZWZpeCwgb25seURpdmlzaW9ucyA9IG9wdGlvbnMub25seURpdmlzaW9ucywgaXNWZXJ0aWNhbCA9IG9wdGlvbnMuaXNWZXJ0aWNhbDtcbiAgICAgICAgdmFyIHNjYWxlUG9zdGZpeCA9IG9wdGlvbnMuc2NhbGVQb3N0Zml4O1xuICAgICAgICB2YXIgc2NhbGVNYXJrZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIHNjYWxlTWFya2VyLmNsYXNzTmFtZSA9IGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLnNjYWxlTWFya2VyO1xuICAgICAgICB2YXIgZGl2aXNpb25WYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgdmFyIGRpdmlzaW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICBkaXZpc2lvblZhbHVlLmNsYXNzTmFtZSA9IFwiXCIgKyBjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5kaXZpc2lvblZhbHVlICsgdmFsO1xuICAgICAgICBkaXZpc2lvbi5jbGFzc05hbWUgPSBjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5kaXZpc2lvbjtcbiAgICAgICAgc2NhbGVNYXJrZXIuYXBwZW5kKGRpdmlzaW9uVmFsdWUpO1xuICAgICAgICBzY2FsZU1hcmtlci5hcHBlbmQoZGl2aXNpb24pO1xuICAgICAgICBmcmFnbWVudC5hcHBlbmQoc2NhbGVNYXJrZXIpO1xuICAgICAgICB2YXIgZWxlbWVudCA9IGRpdmlzaW9uVmFsdWU7XG4gICAgICAgIGlmICghb25seURpdmlzaW9ucykge1xuICAgICAgICAgICAgZWxlbWVudCA9IHNjYWxlTWFya2VyO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNTY2FsZVBvc3RmaXgpIHtcbiAgICAgICAgICAgIHNjYWxlUG9zdGZpeCA9ICcnO1xuICAgICAgICB9XG4gICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gXCJcIiArIGNvcnJlY3RTZXBhcmF0ZV8xLmNvcnJlY3RTZXBhcmF0ZSh2YWx1ZSwgb3B0aW9ucykgKyBzY2FsZVBvc3RmaXg7XG4gICAgICAgIGlmIChpc1ByZWZpeCkge1xuICAgICAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBcIlwiICsgc2NhbGVQb3N0Zml4ICsgY29ycmVjdFNlcGFyYXRlXzEuY29ycmVjdFNlcGFyYXRlKHZhbHVlLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVwZGF0YVNjYWxlTWFya2VyKG9wdGlvbnMpO1xuICAgICAgICB2YXIgb2Zmc2V0ID0gdGhpcy5jb252ZXJ0UHhUb1BlcmNlbnQocG9zaXRpb24sIG9wdGlvbnMpO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIHNjYWxlTWFya2VyLnN0eWxlLmxlZnQgPSBvZmZzZXQgKyBcIiVcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNjYWxlTWFya2VyLnN0eWxlLmJvdHRvbSA9IG9mZnNldCArIFwiJVwiO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY2FsZS5wcm90b3R5cGUuY29udmVydFB4VG9QZXJjZW50ID0gZnVuY3Rpb24gKHZhbHVlLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBzaXplID0gb3B0aW9ucy5zaXplO1xuICAgICAgICByZXR1cm4gKHZhbHVlICogMTAwKSAvIHNpemU7XG4gICAgfTtcbiAgICAvLyDQmtCw0YHRgtC+0LzQvdGL0Lkg0K3QstC10L3RgiDQtNC70Y8g0L/QtdGA0LXQtNCw0YfQuCDQt9C90LDRh9C10L3QuNGPINCyINCS0LjQtFxuICAgIFNjYWxlLnByb3RvdHlwZS5oYW5kbGVTY2FsZUNsaWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIHZhciBvbmx5RGl2aXNpb25zID0gdGhpcy5vcHRpb25zLm9ubHlEaXZpc2lvbnM7XG4gICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBpZiAoISh0YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBpc1NjYWxlRGl2aXNvbiA9ICF0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZXNfMS5jbGFzc05hbWVzLmlzU2NhbGVEaXZpc29uKSAmJiBvbmx5RGl2aXNpb25zO1xuICAgICAgICB2YXIgaXNTY2FsZVZhbHVlID0gIXRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuaXNTY2FsZVZhbHVlKSAmJiAhb25seURpdmlzaW9ucztcbiAgICAgICAgaWYgKGlzU2NhbGVEaXZpc29uKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoaXNTY2FsZVZhbHVlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgdmFsdWUgPSB0YXJnZXQuaW5uZXJIVE1MO1xuICAgICAgICB2YXIgc2NhbGVFdmVudCA9IG5ldyBDdXN0b21FdmVudCgnc2NhbGVjbGljaycsIHtcbiAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICAgICAgICBldmVudDogZXZlbnQsIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICB0YXJnZXQuZGlzcGF0Y2hFdmVudChzY2FsZUV2ZW50KTtcbiAgICB9O1xuICAgIHJldHVybiBTY2FsZTtcbn0oKSk7XG5leHBvcnRzLlNjYWxlID0gU2NhbGU7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmFyID0gdm9pZCAwO1xudmFyIGNsYXNzTmFtZXNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWJzL2NsYXNzTmFtZXNcIik7XG52YXIgQmFyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJhcihvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuY3JlYXRlKG9wdGlvbnMpO1xuICAgIH1cbiAgICBCYXIucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIGJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBiYXIuY2xhc3NOYW1lID0gY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuYmFyO1xuICAgICAgICBzbGlkZXIuYXBwZW5kKGJhcik7XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucywgYmFyKTtcbiAgICAgICAgdGhpcy51cGRhdGFCYXIob3B0aW9ucywgYmFyKTtcbiAgICB9O1xuICAgIEJhci5wcm90b3R5cGUudXBEYXRhID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHNsaWRlciA9IG9wdGlvbnMuc2xpZGVyO1xuICAgICAgICB2YXIgYmFyID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoY2xhc3NOYW1lc18xLmNsYXNzTmFtZXMuZmluZEJhcik7XG4gICAgICAgIHRoaXMudXBkYXRhQ29sb3Iob3B0aW9ucywgYmFyKTtcbiAgICAgICAgdGhpcy51cGRhdGFCYXIob3B0aW9ucywgYmFyKTtcbiAgICB9O1xuICAgIEJhci5wcm90b3R5cGUudXBkYXRhQ29sb3IgPSBmdW5jdGlvbiAob3B0aW9ucywgYmFyKSB7XG4gICAgICAgIHZhciBjb2xvciA9IG9wdGlvbnMuY29sb3IsIGlzR3JhZGllbnQgPSBvcHRpb25zLmlzR3JhZGllbnQsIGdyYWRpZW50ID0gb3B0aW9ucy5ncmFkaWVudCwgZ3JhZGllbnREZWcgPSBvcHRpb25zLmdyYWRpZW50RGVnLCBpc0NoYW5nZUNvbG9yID0gb3B0aW9ucy5pc0NoYW5nZUNvbG9yO1xuICAgICAgICB2YXIgaXNTZXRHcmFkaWVudCA9IGlzQ2hhbmdlQ29sb3IgJiYgaXNHcmFkaWVudDtcbiAgICAgICAgdmFyIGlzU2V0Q29sb3IgPSBpc0NoYW5nZUNvbG9yICYmICFpc0dyYWRpZW50O1xuICAgICAgICBpZiAoaXNTZXRHcmFkaWVudCkge1xuICAgICAgICAgICAgYmFyLnN0eWxlLmJhY2tncm91bmQgPSBcImxpbmVhci1ncmFkaWVudChcIiArIGdyYWRpZW50RGVnICsgXCJkZWcsIFwiICsgY29sb3IgKyBcIiwgXCIgKyBncmFkaWVudCArIFwiKVwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1NldENvbG9yKSB7XG4gICAgICAgICAgICBiYXIuc3R5bGUuYmFja2dyb3VuZCA9IGNvbG9yO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBCYXIucHJvdG90eXBlLmdldFJvbGxlclBvc2l0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBvcHRpb25zLnNsaWRlcjtcbiAgICAgICAgdmFyIHJvbGxlcnMgPSBzbGlkZXIucXVlcnlTZWxlY3RvckFsbChjbGFzc05hbWVzXzEuY2xhc3NOYW1lcy5maW5kUm9sbGVycyk7XG4gICAgICAgIHZhciBfYSA9IFtyb2xsZXJzWzBdLCByb2xsZXJzWzFdXSwgZmlyc3RSb2xsZXIgPSBfYVswXSwgc2Vjb25kUm9sbGVyID0gX2FbMV07XG4gICAgICAgIHZhciByb2xsZXJzUG9zaXRpb25zID0gW3RoaXMuY2FsY3VsYXRlUG9zaXRpb24oZmlyc3RSb2xsZXIsIG9wdGlvbnMpLFxuICAgICAgICAgICAgdGhpcy5jYWxjdWxhdGVQb3NpdGlvbihzZWNvbmRSb2xsZXIsIG9wdGlvbnMpXTtcbiAgICAgICAgcmV0dXJuIHJvbGxlcnNQb3NpdGlvbnMuc29ydChmdW5jdGlvbiAoYSwgYikgeyByZXR1cm4gYSAtIGI7IH0pO1xuICAgIH07XG4gICAgQmFyLnByb3RvdHlwZS5jYWxjdWxhdGVQb3NpdGlvbiA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gb3B0aW9ucy5pc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSAwO1xuICAgICAgICB2YXIgd2lkdGggPSBOdW1iZXIucGFyc2VJbnQoZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS53aWR0aCwgMTApO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0ICsgd2lkdGggLyAyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcG9zaXRpb24gPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIHdpZHRoIC8gMjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcG9zaXRpb247XG4gICAgfTtcbiAgICBCYXIucHJvdG90eXBlLmNvbnZlcnRQeFRvUHJvY2VudCA9IGZ1bmN0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgc2l6ZSA9IG9wdGlvbnMuc2l6ZTtcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAqIDEwMCkgLyBzaXplO1xuICAgIH07XG4gICAgQmFyLnByb3RvdHlwZS51cGRhdGFCYXIgPSBmdW5jdGlvbiAob3B0aW9ucywgYmFyKSB7XG4gICAgICAgIHZhciBpc1ZlcnRpY2FsID0gb3B0aW9ucy5pc1ZlcnRpY2FsLCBpc0RvdWJsZSA9IG9wdGlvbnMuaXNEb3VibGU7XG4gICAgICAgIHZhciBzaWRlID0gIWlzVmVydGljYWwgPyAnbGVmdCcgOiAndG9wJztcbiAgICAgICAgdmFyIGRpcmVjdGlvbiA9ICFpc1ZlcnRpY2FsID8gJ3dpZHRoJyA6ICdoZWlnaHQnO1xuICAgICAgICB2YXIgcm9sbGVyUG9zID0gdGhpcy5nZXRSb2xsZXJQb3NpdGlvbnMob3B0aW9ucyk7XG4gICAgICAgIHZhciBzbGlkZXJQb3MgPSB0aGlzLmdldE5ld1NsaWRlclBvcyhvcHRpb25zKTtcbiAgICAgICAgdmFyIGlzU2luZ2xlSG9yaXpvbnRhbCA9IGlzRG91YmxlICYmICFpc1ZlcnRpY2FsO1xuICAgICAgICBpZiAoaXNTaW5nbGVIb3Jpem9udGFsKSB7XG4gICAgICAgICAgICB2YXIgdG8gPSB0aGlzLmNvbnZlcnRQeFRvUHJvY2VudChNYXRoLmFicyhyb2xsZXJQb3NbMV0gLSBzbGlkZXJQb3MpLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGJhci5zdHlsZVtzaWRlXSA9ICcwJSc7XG4gICAgICAgICAgICBiYXIuc3R5bGVbZGlyZWN0aW9uXSA9IHRvICsgXCIlXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgZnJvbSA9IHRoaXMuY29udmVydFB4VG9Qcm9jZW50KE1hdGguYWJzKHJvbGxlclBvc1sxXSAtIHNsaWRlclBvcyksIG9wdGlvbnMpO1xuICAgICAgICAgICAgdmFyIHRvID0gMTAwIC0gZnJvbTtcbiAgICAgICAgICAgIGJhci5zdHlsZVtzaWRlXSA9IGZyb20gKyBcIiVcIjtcbiAgICAgICAgICAgIGJhci5zdHlsZVtkaXJlY3Rpb25dID0gdG8gKyBcIiVcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzRG91YmxlKSB7XG4gICAgICAgICAgICB2YXIgZnJvbSA9IHRoaXMuY29udmVydFB4VG9Qcm9jZW50KE1hdGguYWJzKHJvbGxlclBvc1swXSAtIHNsaWRlclBvcyksIG9wdGlvbnMpO1xuICAgICAgICAgICAgdmFyIHRvID0gdGhpcy5jb252ZXJ0UHhUb1Byb2NlbnQoTWF0aC5hYnMocm9sbGVyUG9zWzFdIC0gcm9sbGVyUG9zWzBdKSwgb3B0aW9ucyk7XG4gICAgICAgICAgICBiYXIuc3R5bGVbc2lkZV0gPSBmcm9tICsgXCIlXCI7XG4gICAgICAgICAgICBiYXIuc3R5bGVbZGlyZWN0aW9uXSA9IHRvICsgXCIlXCI7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEJhci5wcm90b3R5cGUuZ2V0TmV3U2xpZGVyUG9zID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBzbGlkZXIgPSBfYS5zbGlkZXIsIGlzVmVydGljYWwgPSBfYS5pc1ZlcnRpY2FsO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSAwO1xuICAgICAgICBpZiAoIWlzVmVydGljYWwpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xuICAgIH07XG4gICAgcmV0dXJuIEJhcjtcbn0oKSk7XG5leHBvcnRzLkJhciA9IEJhcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hbGxDb2xvcnMgPSB2b2lkIDA7XG52YXIgYWxsQ29sb3JzID0ge1xuICAgICcjZjBmOGZmJzogJ2FsaWNlYmx1ZScsXG4gICAgJyNmYWViZDcnOiAnYW50aXF1ZXdoaXRlJyxcbiAgICAnIzAwZmZmZic6ICdhcXVhJyxcbiAgICAnIzdmZmZkNCc6ICdhcXVhbWFyaW5lJyxcbiAgICAnI2YwZmZmZic6ICdhenVyZScsXG4gICAgJyNmNWY1ZGMnOiAnYmVpZ2UnLFxuICAgICcjZmZlNGM0JzogJ2Jpc3F1ZScsXG4gICAgJyMwMDAwMDAnOiAnYmxhY2snLFxuICAgICcjZmZlYmNkJzogJ2JsYW5jaGVkYWxtb25kJyxcbiAgICAnIzAwMDBmZic6ICdibHVlJyxcbiAgICAnIzhhMmJlMic6ICdibHVldmlvbGV0JyxcbiAgICAnI2E1MmEyYSc6ICdicm93bicsXG4gICAgJyNkZWI4ODcnOiAnYnVybHl3b29kJyxcbiAgICAnIzVmOWVhMCc6ICdjYWRldGJsdWUnLFxuICAgICcjN2ZmZjAwJzogJ2NoYXJ0cmV1c2UnLFxuICAgICcjZDI2OTFlJzogJ2Nob2NvbGF0ZScsXG4gICAgJyNmZjdmNTAnOiAnY29yYWwnLFxuICAgICcjNjQ5NWVkJzogJ2Nvcm5mbG93ZXJibHVlJyxcbiAgICAnI2ZmZjhkYyc6ICdjb3Juc2lsaycsXG4gICAgJyNkYzE0M2MnOiAnY3JpbXNvbicsXG4gICAgJyMwMDAwOGInOiAnZGFya2JsdWUnLFxuICAgICcjMDA4YjhiJzogJ2RhcmtjeWFuJyxcbiAgICAnI2I4ODYwYic6ICdkYXJrZ29sZGVucm9kJyxcbiAgICAnI2E5YTlhOSc6ICdkYXJrZ3JheScsXG4gICAgJyMwMDY0MDAnOiAnZGFya2dyZWVuJyxcbiAgICAnI2JkYjc2Yic6ICdkYXJra2hha2knLFxuICAgICcjOGIwMDhiJzogJ2RhcmttYWdlbnRhJyxcbiAgICAnIzU1NmIyZic6ICdkYXJrb2xpdmVncmVlbicsXG4gICAgJyNmZjhjMDAnOiAnZGFya29yYW5nZScsXG4gICAgJyM5OTMyY2MnOiAnZGFya29yY2hpZCcsXG4gICAgJyM4YjAwMDAnOiAnZGFya3JlZCcsXG4gICAgJyNlOTk2N2EnOiAnZGFya3NhbG1vbicsXG4gICAgJyM4ZmJjOGYnOiAnZGFya3NlYWdyZWVuJyxcbiAgICAnIzQ4M2Q4Yic6ICdkYXJrc2xhdGVibHVlJyxcbiAgICAnIzVkZGZiZSc6ICdhcXVhbWFyaW5lJyxcbiAgICAnIzE5ODAwMCc6ICfQl9C10LvQtdC90YvQuScsXG4gICAgJyMyZjRmNGYnOiAnZGFya3NsYXRlZ3JheScsXG4gICAgJyMwMGNlZDEnOiAnZGFya3R1cnF1b2lzZScsXG4gICAgJyM5NDAwZDMnOiAnZGFya3Zpb2xldCcsXG4gICAgJyNmZjE0OTMnOiAnZGVlcHBpbmsnLFxuICAgICcjMDBiZmZmJzogJ2RlZXBza3libHVlJyxcbiAgICAnIzY5Njk2OSc6ICdkaW1ncmF5JyxcbiAgICAnIzFlOTBmZic6ICdkb2RnZXJibHVlJyxcbiAgICAnI2IyMjIyMic6ICdmaXJlYnJpY2snLFxuICAgICcjZmZmYWYwJzogJ2Zsb3JhbHdoaXRlJyxcbiAgICAnIzIyOGIyMic6ICdmb3Jlc3RncmVlbicsXG4gICAgJyNmZjAwZmYnOiAnZnVjaHNpYScsXG4gICAgJyNkY2RjZGMnOiAnZ2FpbnNib3JvJyxcbiAgICAnI2Y4ZjhmZic6ICdnaG9zdHdoaXRlJyxcbiAgICAnI2RhYTUyMCc6ICdnb2xkZW5yb2QnLFxuICAgICcjZmZkNzAwJzogJ2dvbGQnLFxuICAgICcjODA4MDgwJzogJ2dyYXknLFxuICAgICcjMDA4MDAwJzogJ9CX0LXQu9C10L3Ri9C5JyxcbiAgICAnI2FkZmYyZic6ICdncmVlbnllbGxvdycsXG4gICAgJyNmMGZmZjAnOiAnaG9uZXlkZXcnLFxuICAgICcjZmY2OWI0JzogJ2hvdHBpbmsnLFxuICAgICcjY2Q1YzVjJzogJ2luZGlhbnJlZCcsXG4gICAgJyM0YjAwODInOiAnaW5kaWdvJyxcbiAgICAnI2ZmZmZmMCc6ICdpdm9yeScsXG4gICAgJyNmMGU2OGMnOiAna2hha2knLFxuICAgICcjZmZmMGY1JzogJ2xhdmVuZGVyYmx1c2gnLFxuICAgICcjZTZlNmZhJzogJ2xhdmVuZGVyJyxcbiAgICAnIzdjZmMwMCc6ICdsYXduZ3JlZW4nLFxuICAgICcjZmZmYWNkJzogJ2xlbW9uY2hpZmZvbicsXG4gICAgJyNhZGQ4ZTYnOiAnbGlnaHRibHVlJyxcbiAgICAnI2YwODA4MCc6ICdsaWdodGNvcmFsJyxcbiAgICAnI2UwZmZmZic6ICdsaWdodGN5YW4nLFxuICAgICcjZmFmYWQyJzogJ2xpZ2h0Z29sZGVucm9keWVsbG93JyxcbiAgICAnI2QzZDNkMyc6ICdsaWdodGdyYXknLFxuICAgICcjOTBlZTkwJzogJ2xpZ2h0Z3JlZW4nLFxuICAgICcjZmZiNmMxJzogJ2xpZ2h0cGluaycsXG4gICAgJyNmZmEwN2EnOiAnbGlnaHRzYWxtb24nLFxuICAgICcjMjBiMmFhJzogJ2xpZ2h0c2VhZ3JlZW4nLFxuICAgICcjODdjZWZhJzogJ2xpZ2h0c2t5Ymx1ZScsXG4gICAgJyM3Nzg4OTknOiAnbGlnaHRzbGF0ZWdyYXknLFxuICAgICcjYjBjNGRlJzogJ2xpZ2h0c3RlZWxibHVlJyxcbiAgICAnI2ZmZmZlMCc6ICdsaWdodHllbGxvdycsXG4gICAgJyMwMGZmMDAnOiAnbGltZScsXG4gICAgJyMzMmNkMzInOiAnbGltZWdyZWVuJyxcbiAgICAnI2ZhZjBlNic6ICdsaW5lbicsXG4gICAgJyM4MDAwMDAnOiAnbWFyb29uJyxcbiAgICAnIzY2Y2RhYSc6ICdtZWRpdW1hcXVhbWFyaW5lJyxcbiAgICAnIzAwMDBjZCc6ICdtZWRpdW1ibHVlJyxcbiAgICAnI2JhNTVkMyc6ICdtZWRpdW1vcmNoaWQnLFxuICAgICcjOTM3MGRiJzogJ21lZGl1bXB1cnBsZScsXG4gICAgJyMzY2IzNzEnOiAnbWVkaXVtc2VhZ3JlZW4nLFxuICAgICcjN2I2OGVlJzogJ21lZGl1bXNsYXRlYmx1ZScsXG4gICAgJyMwMGZhOWEnOiAnbWVkaXVtc3ByaW5nZ3JlZW4nLFxuICAgICcjNDhkMWNjJzogJ21lZGl1bXR1cnF1b2lzZScsXG4gICAgJyNjNzE1ODUnOiAnbWVkaXVtdmlvbGV0cmVkJyxcbiAgICAnIzE5MTk3MCc6ICdtaWRuaWdodGJsdWUnLFxuICAgICcjZjVmZmZhJzogJ21pbnRjcmVhbScsXG4gICAgJyNmZmU0ZTEnOiAnbWlzdHlyb3NlJyxcbiAgICAnI2ZmZTRiNSc6ICdtb2NjYXNpbicsXG4gICAgJyNmZmRlYWQnOiAnbmF2YWpvd2hpdGUnLFxuICAgICcjMDAwMDgwJzogJ25hdnknLFxuICAgICcjZmRmNWU2JzogJ29sZGxhY2UnLFxuICAgICcjODA4MDAwJzogJ29saXZlJyxcbiAgICAnIzZiOGUyMyc6ICdvbGl2ZWRyYWInLFxuICAgICcjZmZhNTAwJzogJ29yYW5nZScsXG4gICAgJyNmZjQ1MDAnOiAnb3JhbmdlcmVkJyxcbiAgICAnI2RhNzBkNic6ICdvcmNoaWQnLFxuICAgICcjZWVlOGFhJzogJ3BhbGVnb2xkZW5yb2QnLFxuICAgICcjOThmYjk4JzogJ3BhbGVncmVlbicsXG4gICAgJyNhZmVlZWUnOiAncGFsZXR1cnF1b2lzZScsXG4gICAgJyNkYjcwOTMnOiAncGFsZXZpb2xldHJlZCcsXG4gICAgJyNmZmVmZDUnOiAncGFwYXlhd2hpcCcsXG4gICAgJyNmZmRhYjknOiAncGVhY2hwdWZmJyxcbiAgICAnI2NkODUzZic6ICdwZXJ1JyxcbiAgICAnI2ZmYzBjYic6ICdwaW5rJyxcbiAgICAnI2RkYTBkZCc6ICdwbHVtJyxcbiAgICAnI2IwZTBlNic6ICdwb3dkZXJibHVlJyxcbiAgICAnIzgwMDA4MCc6ICdwdXJwbGUnLFxuICAgICcjNjYzMzk5JzogJ3JlYmVjY2FwdXJwbGUnLFxuICAgICcjZmYwMDAwJzogJ9Ca0YDQsNGB0L3Ri9C5JyxcbiAgICAnI2JjOGY4Zic6ICdyb3N5YnJvd24nLFxuICAgICcjNDE2OWUxJzogJ3JveWFsYmx1ZScsXG4gICAgJyM4YjQ1MTMnOiAnc2FkZGxlYnJvd24nLFxuICAgICcjZmE4MDcyJzogJ3NhbG1vbicsXG4gICAgJyNmNGE0NjAnOiAnc2FuZHlicm93bicsXG4gICAgJyMyZThiNTcnOiAnc2VhZ3JlZW4nLFxuICAgICcjZmZmNWVlJzogJ3NlYXNoZWxsJyxcbiAgICAnI2EwNTIyZCc6ICdzaWVubmEnLFxuICAgICcjYzBjMGMwJzogJ3NpbHZlcicsXG4gICAgJyM4N2NlZWInOiAnc2t5Ymx1ZScsXG4gICAgJyM2YTVhY2QnOiAnc2xhdGVibHVlJyxcbiAgICAnIzcwODA5MCc6ICdzbGF0ZWdyYXknLFxuICAgICcjZmZmYWZhJzogJ3Nub3cnLFxuICAgICcjMDBmZjdmJzogJ3NwcmluZ2dyZWVuJyxcbiAgICAnIzQ2ODJiNCc6ICdzdGVlbGJsdWUnLFxuICAgICcjZDJiNDhjJzogJ3RhbicsXG4gICAgJyMwMDgwODAnOiAndGVhbCcsXG4gICAgJyNkOGJmZDgnOiAndGhpc3RsZScsXG4gICAgJyNmZjYzNDcnOiAndG9tYXRvJyxcbiAgICAnIzQwZTBkMCc6ICd0dXJxdW9pc2UnLFxuICAgICcjZWU4MmVlJzogJ3Zpb2xldCcsXG4gICAgJyNmNWRlYjMnOiAnd2hlYXQnLFxuICAgICcjZmZmZmZmJzogJ9CR0LXQu9GL0LknLFxuICAgICcjZjVmNWY1JzogJ3doaXRlc21va2UnLFxuICAgICcjZmZmZjAwJzogJ9CW0LXQu9GC0YvQuScsXG4gICAgJyM5YWNkMzInOiAn0K/QsdC70L7Rh9C90L4t0LfQtdC70LXQvdGL0LknLFxuICAgICcjZTU4MDAwJzogJ9Cc0L7RgNC60L7QstC90YvQuScsXG4gICAgJyNjYzAwMDAnOiAn0JHQvtGB0YLQvtC90YHQutC40Lkt0LrRgNCw0YHQvdGL0LknLFxuICAgICcjMzMwMDAwJzogJ9Ca0L7RgNC40YfQvdC10LLRi9C5JyxcbiAgICAnIzdmODAwMCc6ICfQntC70LjQstC60L7QstGL0LknLFxuICAgICcjOTkwMDAwJzogJ9Ch0LDQvdCz0YDQuNGPJyxcbiAgICAnI2IyODAwMCc6ICfQotC10LzQvdC+LdC30L7Qu9C+0YLQvtC5JyxcbiAgICAnIzRjODAwMCc6ICfQndC10LbQvdC+LdC+0LvQuNCy0LrQvtCy0YvQuScsXG4gICAgJyM2NjAwMDAnOiAn0JrQvtGA0LjRh9C90LXQstC+LdC80LDQu9C40L3QvtCy0YvQuScsXG4gICAgJyM2YzYwMDAnOiAn0J7Qu9C40LLQutC+0LLRi9C5JyxcbiAgICAnIzZhNTVjMyc6ICfQn9GD0YDQv9GD0YDQvdC+LdGB0LjQvdC40LknLFxuICAgICcjNjdjOGY2JzogJ9Cv0YDQutC+LdCz0L7Qu9GD0LHQvtC5JyxcbiAgICAnIzQ5MmY1Yyc6ICfQk9C70YPQsdC+0LrQuNC5LdGE0LjQvtC70LXRgtC+0LLRi9C5JyxcbiAgICAnIzVjZDFlYyc6ICfQk9C+0LvRg9Cx0L7QuScsXG4gICAgJyMxM2ZmNDInOiAn0K/RgNC60L4t0LfQtdC70LXQvdGL0LknLFxuICAgICcjMWRhNDI2JzogJ9Cf0LDRgdGC0LXQu9GM0L3Qvi3Qt9C10LvQtdC90YvQuScsXG4gICAgJyMyZmRiYzAnOiAn0JHQuNGA0Y7Qt9C+0LLRi9C5JyxcbiAgICAnIzM4Njc0OCc6ICfQotC10LzQvdC+LdC30LXQu9C10L3Ri9C5JyxcbiAgICAnIzU5YTljMSc6ICfQotC10LzQvdC+LdCz0L7Qu9GD0LHQvtC5JyxcbiAgICAnIzE0NjY2Nic6ICfQotC10LzQvdC+LdCx0LjRgNGO0LfQvtCy0YvQuScsXG4gICAgJyNjODA5OTMnOiAn0KTQuNC+0LvQtdGC0L7QstC+LdC60YDQsNGB0L3Ri9C5JyxcbiAgICAnI2ZhMGJmOCc6ICfQpNGD0LrRgdC40Y8nLFxuICAgICcjMTkwMTMyJzogJ9Ci0LXQvNC90L4t0YTQuNC+0LvQtdGC0L7QstGL0LknLFxuICAgICcjMzIwMjYyJzogJ9Ci0LXQvNC90L4t0YTQuNC+0LvQtdGC0L7QstGL0LknLFxuICAgICcjNGIwMzk3JzogJ9CY0L3QtNC40LPQvicsXG4gICAgJyNhZjA4NjEnOiAn0KDQvtC30L7QstCw0YLQvi3Qu9C40LvQvtCy0YvQuScsXG4gICAgJyNlMTBhYzYnOiAn0JzQsNC70LjQvdC+0LLRi9C5JyxcbiAgICAnIzk2MDcyZSc6ICfQkdGD0YDQs9GD0L3QtNGB0LrQuNC5JyxcbiAgICAnIzY0MDRjYSc6ICfQn9GD0YDQv9GD0YDQvdC+LdGB0LjQvdC40LknLFxuICAgICcjN2QwNWZjJzogJ9Ck0LjQvtC70LXRgtC+0LLRi9C5JyxcbiAgICAnIzMyMDI2NSc6ICfQotC10LzQvdGL0Lkg0LjQvdC00LjQs9C+JyxcbiAgICAnIzAnOiAnIzAwMCcsXG4gICAgb3JhbmdlOiAn0J7RgNCw0L3QttC10LLRi9C5JyxcbiAgICBwdXJwbGU6ICfQpNC40L7Qu9C10YLQvtCy0YvQuScsXG4gICAgJyM0YmU3NGQnOiAn0JzQsNC70LDRhdC40YLQvtCy0YvQuScsXG4gICAgJyM2NTM0NjYnOiAn0J/Rg9GA0L/Rg9GA0L3Ri9C5JyxcbiAgICAnIzMyOWEzMyc6ICfQl9C10LvQtdC90YvQuScsXG4gICAgJyMxOTRkMWEnOiAn0KLQtdC80L3Qvi3Qt9C10LvQtdC90YvQuScsXG4gICAgJyNmZDAyZmYnOiAn0KDQvtC30L7QstGL0LknLFxuICAgICcjYjExYmIzJzogJ9Ck0LjQvtC70LXRgtC+0LLQvi3QsdCw0LrQu9Cw0LbQsNC90L3Ri9C5JyxcbiAgICAnI2UzYjVlNic6ICfQodCy0LXRgtC70L4t0YDQvtC30L7QstGL0LknLFxufTtcbmV4cG9ydHMuYWxsQ29sb3JzID0gYWxsQ29sb3JzO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc2xpZGVyLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJzb3VyY2VSb290IjoiIn0=