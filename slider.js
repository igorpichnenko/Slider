!function(e){var t={};function r(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(i,o,function(t){return e[t]}.bind(null,o));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=5)}([function(e,t,r){"use strict";var i,o;Object.defineProperty(t,"__esModule",{value:!0}),t.SliderType=t.Orientation=void 0,function(e){e[e.vertical=0]="vertical",e[e.horizontal=1]="horizontal"}(i||(i={})),t.Orientation=i,function(e){e[e.double=0]="double",e[e.single=1]="single"}(o||(o={})),t.SliderType=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var i=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var r=this.events[e];r&&r.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var r=t.isSeparate,i=t.separate,o="";if(!1===r)o=e.toString();else{var n="."===i,a=" "===i;","===i&&(i="en-US"),n&&(i="de-DE"),a&&(i=void 0),o=e.toLocaleString(i)}return o}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var i={orientation:"horizontal",type:"double",min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:r(13).allColors};t.standardOptions=i},function(e,t,r){"use strict";var i,o=function(){return void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i},n=function(){var e={};return function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[t]=r}return e[t]}}(),a=[];function s(e){for(var t=-1,r=0;r<a.length;r++)if(a[r].identifier===e){t=r;break}return t}function l(e,t){for(var r={},i=[],o=0;o<e.length;o++){var n=e[o],l=t.base?n[0]+t.base:n[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var u=s(d),f={css:n[1],media:n[2],sourceMap:n[3]};-1!==u?(a[u].references++,a[u].updater(f)):a.push({identifier:d,updater:m(f,t),references:1}),i.push(d)}return i}function c(e){var t=document.createElement("style"),i=e.attributes||{};if(void 0===i.nonce){var o=r.nc;o&&(i.nonce=o)}if(Object.keys(i).forEach((function(e){t.setAttribute(e,i[e])})),"function"==typeof e.insert)e.insert(t);else{var a=n(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var d,u=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function f(e,t,r,i){var o=r?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(e.styleSheet)e.styleSheet.cssText=u(t,o);else{var n=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(n,a[t]):e.appendChild(n)}}function p(e,t,r){var i=r.css,o=r.media,n=r.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),n&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n))))," */")),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h=null,v=0;function m(e,t){var r,i,o;if(t.singleton){var n=v++;r=h||(h=c(t)),i=f.bind(null,r,n,!1),o=f.bind(null,r,n,!0)}else r=c(t),i=p.bind(null,r,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var r=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var i=0;i<r.length;i++){var o=s(r[i]);a[o].references--}for(var n=l(e,t),c=0;c<r.length;c++){var d=s(r[c]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}r=n}}}},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=r(6),n=r(3);r(14),jQuery.fn.colorSlider=function(e){var t={init:function(e,t){var r=i(i({},n.standardOptions),t);return e.data("presenter",new o.Presenter(r,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe("newData",t),void 0===t||e.data("presenter").emitter.subscribe("newData",t),this}},r="object"==typeof e||!e;return"string"==typeof e&&"change"===e?t[e].call(this,this,arguments[1]):("string"==typeof e&&"getValue"===e&&t[e].call(this,this,arguments[1]),r?t.init(this,e):void 0)}},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var o=r(7),n=r(8),a=r(1),s=r(3),l=function(){function e(e,t){this.element=t,this.emitter=new a.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=i(i({},s.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new o.Model(e)},e.prototype.createView=function(e,t){return new n.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe("newData",this.getNewData),this.view.emitter.subscribe("newPosition",this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit("newData",e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,r=i(i({},t),e);this.model.setData(r)},e}();t.Presenter=l},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var o=r(0),n=r(1),a=function(){function e(e){this.emitter=new n.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),r=this.validateMinMaxStep(e);this.state=i(i(i({},e),t),r),this.emitter.emit("newData",this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,r=e.max,i=e.step;i<=0&&(e.step=.1);var o=t>=r&&r>0||r<0&&r<t;return r<=t&&r<0&&(e.min=t-i),o&&(e.min=t,e.max=t+i),e},e.prototype.validateFromTo=function(e){var t=e.from,r=e.to,i=e.max,n=e.min,a=e.type,s=e.step;a===o.SliderType[1]&&(e.to=i);var l=i<0&&0===n,c=n<0&&i<0,d=a===o.SliderType[0]&&t>=r,u=t>0&&c;return t>i&&(e.from=i-s),t<n&&(e.from=n),r>i&&(e.to=i),l&&(e.from=n,e.to=n),d&&(e.from=r-s),u&&(e.from=n),r<=n&&(e.to=n+s,e.from=n),i<n&&(e.to=n+s),e},e}();t.Model=a},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var o=r(0),n=r(1),a=r(9),s=r(10),l=r(11),c=r(12),d=function(){function e(e,t){this.emitter=new n.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),r=this.getOneStep(e),o=this.slider;return i(i({},e),{size:t,oneStep:r,slider:o})},e.prototype.createSlider=function(e,t){var r=e.orientation,i=document.createElement("div");return i.className="slider slider_"+r,t.append(i),i},e.prototype.createTrack=function(e){return new s.Track(e)},e.prototype.createBar=function(e){return new c.Bar(e)},e.prototype.createRollers=function(e){return new a.Rollers(e)},e.prototype.createScale=function(e){return new l.Scale(e)},e.prototype.upData=function(e){var t=i(i({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.upData(t),this.state=i({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,r=e.max,i=e.step,o=Math.ceil((r-t)/i);return this.getSliderSize(e)/o},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var r=this.drag.bind(this,t),i=function(){document.removeEventListener("mousemove",r),t.removeEventListener("touchmove",r),document.removeEventListener("mouseup",i),t.removeEventListener("touchend",i)};document.addEventListener("mousemove",r),t.addEventListener("touchmove",r),document.addEventListener("mouseup",i),t.addEventListener("touchend",i)}},e.prototype.drag=function(e,t){var r=this.state.orientation;t.preventDefault();var i=0;if(!!/tooltip || roller/.test(e.className)){var n="touchmove"===t.type&&r===o.Orientation[1],a="mousemove"===t.type&&r===o.Orientation[1],s="touchmove"===t.type&&r===o.Orientation[0],l="mousemove"===t.type&&r===o.Orientation[0];n&&(i=this.convertPxToValue(t.touches[0].clientX)),a&&(i=this.convertPxToValue(t.clientX)),s&&(i=this.convertPxToValue(t.touches[0].clientY)),l&&(i=this.convertPxToValue(t.clientY)),this.updatePosition(i,e)}},e.prototype.getTargetType=function(e){var t=this.slider.querySelectorAll(".js-slider__roller");return t[0].contains(e)?"from":t[1].contains(e)?"to":"undefined"},e.prototype.handleScaleClick=function(e){var t,r=this.state.scalePostfix,i=this.state.separate;" "===i&&(i="&nbsp;"),t=e.detail.value.split(r).join("").split(i).join("");var o=String(t).split(",").join(".");this.updatePosition(Number(o))},e.prototype.handleTrackClick=function(e){var t=this.state.orientation,r=e.target,i=0;if(!/scale/.test(r.className)){i=t===o.Orientation[1]?e.clientX:e.clientY;var n=this.convertPxToValue(i);this.updatePosition(n)}},e.prototype.updatePosition=function(e,t){var r=this.state,i=r.from,n=r.to,a=r.type,s=r.step,l=Math.abs(i-e),c=Math.abs(n-e);if(a===o.SliderType[1]&&l)return this.emitter.emit("newPosition",{from:e}),void this.convertValueToColor(e);var d=l<c?"from":"to",u=!t&&"to"===d;!t&&"from"===d&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),u&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e));var f=t&&this.getTargetType(t),p="from"===f&&a===o.SliderType[0],h="to"===f,v=p&&e>n-s,m=h&&e<i+s;p&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),v?this.emitter.emit("newPosition",{from:n-s}):(h&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e)),m&&this.emitter.emit("newPosition",{to:i+s}))},e.prototype.convertPxToValue=function(e){var t=this.state,r=t.min,i=t.max,n=t.step,a=t.oneStep,s=t.size,l=t.orientation,c=this.getSliderPosition(),d=c+s,u=0;return(u=l===o.Orientation[1]?e-c:d-e)>s?i:u<0?r:Math.round(u/a)*n+r},e.prototype.convertValueToColor=function(e){var t=this.state,r=t.color,i=t.gradient,o=this.state,n=o.max,a=o.isColor,s=o.changeColor,l=e/n,c=!0===a&&!0===s,d=0,u=0;!0===a&&!1===s&&(d=Math.round(255*l*255*255),u=Math.round(255*l*254*254)),c&&(d=Math.round(256*l*256*255),u=Math.round(254*l*254*254));var f=Math.abs(u);r="#"+Math.abs(d).toString(16),i="#"+f.toString(16),this.emitter.emit("newPosition",{color:r}),this.emitter.emit("newPosition",{gradient:i})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.orientation,r=e.slider;return t===o.Orientation[1]?r.getBoundingClientRect().left:r.getBoundingClientRect().top},e.prototype.getSliderSize=function(e){return e.orientation===o.Orientation[1]?this.slider.getBoundingClientRect().width:this.slider.getBoundingClientRect().height},e}();t.View=d},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var i=r(0),o=r(2),n=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,r=e.orientation,i=document.createElement("div");i.className="slider__roller js-slider__roller slider__roller_first js-slider__roller_first slider__roller_"+r+" js-slider__roller_"+r;var o=document.createElement("div");o.className="slider__roller_second js-slider__roller js-slider__roller_second\n    slider__roller\n    slider__roller_"+r+" js-slider__roller_"+r,t.append(i),t.append(o),this.createTooltip(i,o,e),this.moveRollersAtValue(e,i,o),this.toggleRollers(e,o),this.updataColor(e,i,o)},e.prototype.createTooltip=function(e,t,r){var i=r.orientation,o=document.createElement("div");o.className="slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip slider__tooltip_"+i+" js-slider__tooltip_"+i;var n=document.createElement("div");n.className="slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip slider__tooltip_"+i+" js-slider__tooltip_"+i,e.append(o),t.append(n),this.updataOutTooltip(o,n,r)},e.prototype.updataOutTooltip=function(e,t,r){var i=r.to,n=r.from,a=r.isPostfix,s=r.isLabel,l=r.isPrefix,c=r.postfix;!1===a&&(c="");var d=!0===s&&!0===l;!0===s&&!1===l&&(e.innerHTML=""+o.correctSeparate(n,r)+c,t.innerHTML=""+o.correctSeparate(i,r)+c),d&&(e.innerHTML=""+c+o.correctSeparate(n,r),t.innerHTML=""+c+o.correctSeparate(i,r)),this.setColor(e,t,r)},e.prototype.setColor=function(e,t,r){var i=r.color,o=r.gradient,n=r.isColorOut,a=r.allColors,s=r.isChangeColor,l=r.isLabel,c=a[i],d=a[o];void 0===d&&(d=o),void 0===c&&(c=i),!0===s&&!0===n&&(e.innerHTML=String(c),t.innerHTML=String(d),e.style.backgroundColor=""+i,t.style.backgroundColor=""+o,e.classList.add("slider__tooltip_white-color"),t.classList.add("slider__tooltip_white-color")),!1===l&&(e.classList.add("slider__tooltip_display-none"),t.classList.add("slider__tooltip_display-none"))},e.prototype.updataColor=function(e,t,r){var i=e.color,o=e.isGradient,n=e.gradient,a=e.isChangeColor,s=e.gradientDeg,l=!0===a&&!1===o;!0===a&&!0===o&&(t.style.background="linear-gradient("+s+"deg, "+i+", "+n+")",r.style.background="linear-gradient("+s+"deg, "+i+", "+n+")"),l&&(t.style.background=i,r.style.background=i)},e.prototype.moveRollersAtValue=function(e,t,r){var o=e.to,n=e.from,a=e.orientation,s=this.convertValueToPx(o,e),l=this.convertValueToPx(n,e),c=this.convertPxToProcent(s,e),d=this.convertPxToProcent(l,e);a===i.Orientation[1]?(t.style.left=d+"%",r.style.left=c+"%"):(t.style.bottom=d+"%",r.style.bottom=c+"%")},e.prototype.upData=function(e){var t=e.slider,r=t.querySelector(".js-slider__roller_first"),i=t.querySelector(".js-slider__roller_second"),o=t.querySelector(".js-slider__tooltip_first"),n=t.querySelector(".js-slider__tooltip_second");this.moveRollersAtValue(e,r,i),this.toggleRollers(e,i),this.updataColor(e,r,i),this.updataOutTooltip(o,n,e)},e.prototype.convertValueToPx=function(e,t){var r=t.min,i=t.max,o=t.step,n=t.size,a=t.oneStep;return e===i?n:Math.round((e-r)/o)*a},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e,t){e.type===i.SliderType[1]?t.style.display="none":t.style.display="block"},e}();t.Rollers=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var i=r(2),o=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,r=e.orientation,i=document.createElement("div");i.className="slider__track slider__track_"+r+" js-slider__track js-slider__track_"+r,t.append(i),this.createOutElement(i,e)},e.prototype.createOutElement=function(e,t){var r=t.orientation,i=document.createElement("div"),o=document.createElement("div");i.className="slider__out slider__out-start slider__out-start_"+r+" js-slider__out js-slider__out-start js-slider__out-start_"+r,o.className="slider__out slider__out-end slider__out-end_"+r+" js-slider__out js-slider__out-end js-slider__out-end_"+r,e.append(i),e.append(o),this.setStartEndTrackOut(i,o,t)},e.prototype.setStartEndTrackOut=function(e,t,r){var o=r.min,n=r.max,a=r.from,s=r.to,l=r.minMax,c=r.fromTo,d=r.isTrackPostfix,u=r.isPrefix,f=r.trackPostfix;!1===d&&(f=""),!0===l&&(e.innerHTML=""+i.correctSeparate(o,r)+f,t.innerHTML=""+i.correctSeparate(n,r)+f),!0===c&&(e.innerHTML=""+i.correctSeparate(a,r)+f,t.innerHTML=""+i.correctSeparate(s,r)+f);var p=!0===c&&!0===u;!0===l&&!0===u&&(e.innerHTML=""+f+i.correctSeparate(o,r),t.innerHTML=""+f+i.correctSeparate(n,r)),p&&(e.innerHTML=""+f+i.correctSeparate(a,r),t.innerHTML=""+f+i.correctSeparate(s,r))},e.prototype.upData=function(e){var t=e.slider,r=t.querySelector(".js-slider__out-start"),i=t.querySelector(".js-slider__out-end");this.setStartEndTrackOut(r,i,e)},e}();t.Track=o},function(e,t,r){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var o=r(0),n=r(2),a=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,r=e.orientation,i=document.createElement("div");i.className="slider__scale slider__scale_"+r+" js-slider__scale js-slider__scale_"+r,t.append(i),this.addEventListeners(i),this.addScaleMarker(e,i),this.checkScale(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__scale");this.options=i(i({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,r=e.slider,i=e.color;r.querySelectorAll(".js-slider__scale-value").forEach((function(e){!0===t?e.classList.add("slider__scale-value_fs-0"):e.classList.add("slider__scale-value_fs-normal")})),document.documentElement.style.setProperty("--scale-color"," "+i)},e.prototype.checkScale=function(e,t){var r=e.isScale;!1===r&&(t.style.display="none"),!0===r&&(t.style.display="")},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var r=e.min,i=e.max,o=e.step,n=e.size,a=e.oneStep,s=this.getIncrement(e),l=s/o*a,c=document.createDocumentFragment(),d=0,u=0,f=r;f<i&&!(d>n-50);f+=s,u+=1)this.createScaleMarker(c,f,d,e,u),d+=l;this.createScaleMarker(c,i,n,e,5),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,r=e.oneStep,i=e.step,o=Math.ceil(t/r);return Math.ceil(o/5)*i},e.prototype.createScaleMarker=function(e,t,r,i,a){var s=i.orientation,l=i.isScalePostfix,c=i.isPrefix,d=i.onlyDivisions,u=i.scalePostfix;t=Number(t.toFixed(1));var f=document.createElement("span");f.className="slider__scale-value slider__scale-value_"+s+" js-slider__scale-value js-slider__scale-value_"+s;var p=document.createElement("span"),h=document.createElement("span");p.className="slider__division-value js-slider__division-value slider__division-value_"+a,h.className="slider__division js-slider__division",f.append(p),f.append(h),e.append(f);var v=p;!1===d&&(v=f),!1===l&&(u=""),v.innerHTML=""+n.correctSeparate(t,i)+u,!0===c&&(v.innerHTML=""+u+n.correctSeparate(t,i)),this.updataScaleMarker(i);var m=this.convertPxToPercent(r,i);s===o.Orientation[1]?f.style.left=m+"%":f.style.bottom=m+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,r=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var i=!t.classList.contains("slider__division-value")&&!0===r,o=!t.classList.contains("slider__scale-value")&&!1===r;if(!i&&!o){var n=t.innerHTML,a=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:n}});t.dispatchEvent(a)}}},e}();t.Scale=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var i=r(0),o=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,r=e.orientation,i=document.createElement("div");i.className="slider__bar slider__bar_"+r+" js-slider__bar js-slider__bar_"+r,t.append(i),this.updataColor(e,i),this.updataBar(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(".js-slider__bar");this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var r=e.color,i=e.isGradient,o=e.gradient,n=e.gradientDeg,a=e.isChangeColor,s=!0===a&&!1===i;!0===a&&!0===i&&(t.style.background="linear-gradient("+n+"deg, "+r+", "+o+")"),s&&(t.style.background=r)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(".js-slider__roller");return[this.calculatePosition(t[0],e),this.calculatePosition(t[1],e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var r=t.orientation===i.Orientation[1]?"left":"top",o=Number.parseInt(getComputedStyle(e).width,10);return e.getBoundingClientRect()[r]+o/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var r=e.type,o=e.orientation===i.Orientation[1],n=o?"left":"top",a=o?"width":"height",s=this.getRollerPositions(e),l=r===i.SliderType[1],c=this.getNewSliderPos(e);if(l&&o){var d=this.convertPxToProcent(Math.abs(s[1]-c),e);t.style[n]="0%",t.style[a]=d+"%"}else{d=100-(u=this.convertPxToProcent(Math.abs(s[1]-c),e));t.style[n]=u+"%",t.style[a]=d+"%"}if(!l){var u=this.convertPxToProcent(Math.abs(s[0]-c),e);d=this.convertPxToProcent(Math.abs(s[1]-s[0]),e);t.style[n]=u+"%",t.style[a]=d+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.orientation,r=e.slider;return t===i.Orientation[1]?r.getBoundingClientRect().left:r.getBoundingClientRect().top},e}();t.Bar=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,r){var i=r(4),o=r(15);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var n={insert:"head",singleton:!1};i(o,n);e.exports=o.locals||{}},function(e,t,r){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,