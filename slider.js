!function(e){var t={};function i(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(r,o,function(t){return e[t]}.bind(null,o));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=5)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.classNames=void 0;t.classNames={slider:"slider",sliderVertical:"slider slider_orientation-vertical",trackOutStart:"slider__out slider__out-start js-slider__out js-slider__out-start",trackOutEnd:"slider__out slider__out-end js-slider__out js-slider__out-end",findTrackOut:".js-slider__out",track:"slider__track js-slider__track",findTrack:".js-slider__track",scale:"slider__scale js-slider__scale ",findScale:".js-slider__scale",scaleFsZero:"slider__scale-value_not-visible",bar:"slider__bar js-slider__bar",findBar:".js-slider__bar",rollerFirst:"slider__roller js-slider__roller slider__roller_first js-slider__roller_first",rollerSecond:"slider__roller_second js-slider__roller js-slider__roller_second slider__roller",findRollers:".js-slider__roller",firstTooltip:"slider__tooltip_first js-slider__tooltip_first js-slider__tooltip slider__tooltip",secondTooltip:"slider__tooltip_second js-slider__tooltip js-slider__tooltip_second slider__tooltip",findFirstTooltip:".js-slider__tooltip_first",findSecondTooltip:".js-slider__tooltip_second",findTooltip:".js-slider__tooltip",tooltipWhite:"slider__tooltip_white",notVisible:"slider__element_not-visible",scaleMarker:"slider__scale-value  js-slider__scale-value",findScaleValue:".js-slider__scale-value",isScaleValue:"slider__scale-value",divisionValue:"slider__division-value js-slider__division-value slider__element-",isScaleDivison:"slider__division-value",division:"slider__division js-slider__division"}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var r=function(){function e(){this.events={}}return e.prototype.subscribe=function(e,t){!this.events[e]&&(this.events[e]=[]),this.events[e].push(t)},e.prototype.emit=function(e,t){var i=this.events[e];i&&i.forEach((function(e){return e.call(null,t)}))},e}();t.EventEmitter=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.correctSeparate=void 0,t.correctSeparate=function(e,t){var i=t.isSeparate,r=t.separate,o="";if(!1===i)o=e.toString();else{var s="."===r,a=" "===r;","===r&&(r="en-US"),s&&(r="de-DE"),a&&(r=void 0),o=e.toLocaleString(r)}return o}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.standardOptions=void 0;var r={min:0,max:10,step:1,from:3,to:7,postfix:"₽",isPrefix:!1,isPostfix:!0,isLabel:!0,isScale:!0,isSeparate:!0,color:"orange",isScalePostfix:!0,scalePostfix:"₽",minMax:!1,fromTo:!1,isTrackPostfix:!0,trackPostfix:"₽",isColor:!0,changeColor:!0,isChangeColor:!0,isGradient:!0,gradient:"purple",gradientDeg:45,isColorOut:!1,onlyDivisions:!1,separate:" ",allColors:i(13).allColors,isVertical:!1,isDouble:!1};t.standardOptions=r},function(e,t,i){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},s=function(){var e={};return function(t){if(void 0===e[t]){var i=document.querySelector(t);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(e){i=null}e[t]=i}return e[t]}}(),a=[];function n(e){for(var t=-1,i=0;i<a.length;i++)if(a[i].identifier===e){t=i;break}return t}function l(e,t){for(var i={},r=[],o=0;o<e.length;o++){var s=e[o],l=t.base?s[0]+t.base:s[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var u=n(d),f={css:s[1],media:s[2],sourceMap:s[3]};-1!==u?(a[u].references++,a[u].updater(f)):a.push({identifier:d,updater:m(f,t),references:1}),r.push(d)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=i.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=s(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var d,u=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function f(e,t,i,r){var o=i?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(t,o);else{var s=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(s,a[t]):e.appendChild(s)}}function p(e,t,i){var r=i.css,o=i.media,s=i.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,v=0;function m(e,t){var i,r,o;if(t.singleton){var s=v++;i=h||(h=c(t)),r=f.bind(null,i,s,!1),o=f.bind(null,i,s,!0)}else i=c(t),r=p.bind(null,i,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(i)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var i=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<i.length;r++){var o=n(i[r]);a[o].references--}for(var s=l(e,t),c=0;c<i.length;c++){var d=n(i[c]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}i=s}}}},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var o in t=arguments[i])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},o=this&&this.__spreadArrays||function(){for(var e=0,t=0,i=arguments.length;t<i;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<i;t++)for(var s=arguments[t],a=0,n=s.length;a<n;a++,o++)r[o]=s[a];return r};Object.defineProperty(t,"__esModule",{value:!0});var s=i(6),a=i(3);i(14),jQuery.fn.colorSlider=function(e){for(var t,i=[],n=1;n<arguments.length;n++)i[n-1]=arguments[n];var l={init:function(e,t){var i=r(r({},a.standardOptions),t);return e.data("presenter",new s.Presenter(i,e)),e},change:function(e,t){return void 0===t?e.data("presenter"):(e.data("presenter").setOptions(t),e.data("presenter").upDataView(),this)},getValue:function(e,t){return e.data("presenter").emitter.subscribe("newData",t),void 0===t||e.data("presenter").emitter.subscribe("newData",t),this}},c="object"==typeof e||!e;return"string"==typeof e?(t=l[e]).call.apply(t,o([this,this],i)):c?l.init(this,e):void 0}},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var o in t=arguments[i])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Presenter=void 0;var o=i(7),s=i(8),a=i(1),n=i(3),l=function(){function e(e,t){this.element=t,this.emitter=new a.EventEmitter,this.model=this.createModel(e),this.view=this.createView(this.model.state,t),this.bindSubscribe()}return e.prototype.upDataView=function(){this.view.upDataSlider()},e.prototype.setOptions=function(e){var t=r(r({},n.standardOptions),e);this.model.setData(t)},e.prototype.getOptions=function(){return this.model.state},e.prototype.createModel=function(e){return new o.Model(e)},e.prototype.createView=function(e,t){return new s.View(e,t)},e.prototype.bindSubscribe=function(){this.getNewData=this.getNewData.bind(this),this.sendNewPosition=this.sendNewPosition.bind(this),this.addSubscribtions()},e.prototype.addSubscribtions=function(){this.model.emitter.subscribe("newData",this.getNewData),this.view.emitter.subscribe("newPosition",this.sendNewPosition)},e.prototype.getNewData=function(e){this.view.upData(e),this.emitter.emit("newData",e)},e.prototype.sendNewPosition=function(e){var t=this.model.state,i=r(r({},t),e);this.model.setData(i)},e}();t.Presenter=l},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var o in t=arguments[i])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;var o=i(1),s=function(){function e(e){this.emitter=new o.EventEmitter,this.state=this.init(e)}return e.prototype.setData=function(e){var t=this.validateFromTo(e),i=this.validateMinMaxStep(e);this.state=r(r(r({},e),t),i),this.emitter.emit("newData",this.state)},e.prototype.init=function(e){return this.setData(e),this.state},e.prototype.validateMinMaxStep=function(e){var t=e.min,i=e.max,r=e.step;r<=0&&(e.step=.1);var o=t>=i&&i>0||i<0&&i<t;return i<=t&&i<0&&(e.min=t-r),o&&(e.min=t,e.max=t+r),e},e.prototype.validateFromTo=function(e){var t=e.from,i=e.to,r=e.max,o=e.min,s=e.step,a=e.isDouble;a&&(e.to=r);var n=r<0&&0===o,l=!a&&t>=i,c=t>0&&(o<0&&r<0);return t>r&&(e.from=r-s),t<o&&(e.from=o),i>r&&(e.to=r),n&&(e.from=o,e.to=o),l&&(e.from=i-s),c&&(e.from=o),i<=o&&(e.to=o+s,e.from=o),r<o&&(e.to=o+s),e},e}();t.Model=s},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var o in t=arguments[i])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var o=i(1),s=i(9),a=i(10),n=i(11),l=i(12),c=i(0),d=function(){function e(e,t){this.emitter=new o.EventEmitter,this.element=t,this.slider=this.createSlider(e,t),this.state=this.init(e),this.rollers=this.createRollers(this.state),this.bar=this.createBar(this.state),this.track=this.createTrack(this.state),this.scale=this.createScale(this.state),this.upData(this.state),this.bindEventListeners()}return e.prototype.init=function(e){var t=this.getSliderSize(e),i=this.getOneStep(e),o=this.slider;return r(r({},e),{size:t,oneStep:i,slider:o})},e.prototype.createSlider=function(e,t){var i=e.isVertical,r=document.createElement("div");return r.className=c.classNames.slider,i&&(r.className=c.classNames.sliderVertical),t.append(r),r},e.prototype.createTrack=function(e){return new a.Track(e)},e.prototype.createBar=function(e){return new l.Bar(e)},e.prototype.createRollers=function(e){return new s.Rollers(e)},e.prototype.createScale=function(e){return new n.Scale(e)},e.prototype.upData=function(e){var t=r(r({},this.state),e);this.rollers.upData(t),this.bar.upData(t),this.scale.upData(t),this.track.setOut(t),this.state=r({},t)},e.prototype.upDataSlider=function(){this.slider.remove(),this.slider=this.createSlider(this.state,this.element),this.state=this.init(this.state),this.rollers=this.createRollers(this.state),this.scale=this.createScale(this.state),this.track=this.createTrack(this.state),this.bar=this.createBar(this.state),this.upData(this.state),this.bindEventListeners()},e.prototype.getOneStep=function(e){var t=e.min,i=e.max,r=e.step,o=Math.ceil((i-t)/r);return this.getSliderSize(e)/o},e.prototype.bindEventListeners=function(){this.handleTrackClick=this.handleTrackClick.bind(this),this.handleScaleClick=this.handleScaleClick.bind(this),this.addEventListeners()},e.prototype.addEventListeners=function(){var e=this.dragStart.bind(this);this.slider.addEventListener("touchstart",e),this.slider.addEventListener("mousedown",e),this.slider.addEventListener("click",this.handleTrackClick),this.slider.addEventListener("scaleclick",this.handleScaleClick)},e.prototype.dragStart=function(e){var t=e.target;if(this.getTargetType(t)){var i=this.drag.bind(this,t),r=function(){document.removeEventListener("mousemove",i),t.removeEventListener("touchmove",i),document.removeEventListener("mouseup",r),t.removeEventListener("touchend",r)};document.addEventListener("mousemove",i),t.addEventListener("touchmove",i),document.addEventListener("mouseup",r),t.addEventListener("touchend",r)}},e.prototype.drag=function(e,t){var i=this.state.isVertical;t.preventDefault();var r=0;if(!!/tooltip || roller/.test(e.className)){var o="touchmove"===t.type&&!i,s="mousemove"===t.type&&!i,a="touchmove"===t.type&&i,n="mousemove"===t.type&&i;o&&(r=this.convertPxToValue(t.touches[0].clientX)),s&&(r=this.convertPxToValue(t.clientX)),a&&(r=this.convertPxToValue(t.touches[0].clientY)),n&&(r=this.convertPxToValue(t.clientY)),this.updatePosition(r,e)}},e.prototype.getTargetType=function(e){var t=this.slider.querySelectorAll(c.classNames.findRollers),i=[t[0],t[1]],r=i[1];return i[0].contains(e)?"from":r.contains(e)?"to":"undefined"},e.prototype.handleScaleClick=function(e){var t,i=this.state.scalePostfix,r=this.state.separate;" "===r&&(r="&nbsp;"),t=e.detail.value.split(i).join("").split(r).join("");var o=String(t).split(",").join(".");this.updatePosition(Number(o))},e.prototype.handleTrackClick=function(e){var t=this.state.isVertical,i=e.target,r=0;if(!/scale/.test(i.className)){r=t?e.clientY:e.clientX;var o=this.convertPxToValue(r);this.updatePosition(o)}},e.prototype.updatePosition=function(e,t){var i=this.state,r=i.from,o=i.to,s=i.step,a=i.isDouble,n=Math.abs(r-e),l=Math.abs(o-e);if(a&&n)return this.emitter.emit("newPosition",{from:e}),void this.convertValueToColor(e);var c=n<l?"from":"to",d=!t&&"to"===c;!t&&"from"===c&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),d&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e));var u=t&&this.getTargetType(t),f="from"===u&&!a,p="to"===u&&!a,h=p&&e<r+s;f&&e>o-s?this.emitter.emit("newPosition",{from:o-s}):(f&&(this.emitter.emit("newPosition",{from:e}),this.convertValueToColor(e)),h?this.emitter.emit("newPosition",{to:r+s}):p&&(this.emitter.emit("newPosition",{to:e}),this.convertValueToColor(e)))},e.prototype.convertPxToValue=function(e){var t=this.state,i=t.min,r=t.max,o=t.step,s=t.oneStep,a=t.size,n=t.isVertical,l=this.getSliderPosition(),c=0;return(c=n?l+a-e:e-l)>a?r:c<0?i:Math.round(c/s)*o+i},e.prototype.convertValueToColor=function(e){var t=this.state,i=t.color,r=t.gradient,o=this.state,s=o.max,a=o.isColor,n=o.changeColor,l=e/s,c=a&&n,d=0,u=0;a&&!n&&(d=Math.round(255*l*255*255),u=Math.round(255*l*254*254)),c&&(d=Math.round(256*l*256*255),u=Math.round(254*l*254*254));var f=Math.abs(u);i="#"+Math.abs(d).toString(16),r="#"+f.toString(16),this.emitter.emit("newPosition",{color:i}),this.emitter.emit("newPosition",{gradient:r})},e.prototype.getSliderPosition=function(){var e=this.state,t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e.prototype.getSliderSize=function(e){return e.isVertical?this.slider.getBoundingClientRect().height:this.slider.getBoundingClientRect().width},e}();t.View=d},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Rollers=void 0;var r=i(2),o=i(0),s=function(){function e(e){this.rollers=this.create(e),this.tooltips=this.createTooltip(),this.moveRollersAtValue(e),this.toggleRollers(e)}return e.prototype.create=function(e){var t=e.slider,i=document.createElement("div");i.className=o.classNames.rollerFirst;var r=document.createElement("div");return r.className=o.classNames.rollerSecond,t.append(i),t.append(r),[i,r]},e.prototype.createTooltip=function(){var e=document.createElement("div");e.className=o.classNames.firstTooltip;var t=document.createElement("div");return t.className=o.classNames.secondTooltip,this.rollers[0].append(e),this.rollers[1].append(t),[e,t]},e.prototype.updataOutTooltip=function(e){var t=e.to,i=e.from,o=e.isPostfix,s=e.isLabel,a=e.isPrefix,n=e.postfix;o||(n="");var l=s&&a;s&&!a&&(this.tooltips[0].innerHTML=""+r.correctSeparate(i,e)+n,this.tooltips[1].innerHTML=""+r.correctSeparate(t,e)+n),l&&(this.tooltips[0].innerHTML=""+n+r.correctSeparate(i,e),this.tooltips[1].innerHTML=""+n+r.correctSeparate(t,e)),this.setColor(e)},e.prototype.setColor=function(e){var t=e.color,i=e.gradient,r=e.isColorOut,s=e.allColors,a=e.isChangeColor,n=e.isLabel,l=s[t],c=s[i];c||(c=i),l||(l=t),a&&r&&(this.tooltips[0].innerHTML=String(l),this.tooltips[1].innerHTML=String(c),this.tooltips[0].style.backgroundColor=""+t,this.tooltips[1].style.backgroundColor=""+i,this.tooltips[0].classList.add(o.classNames.tooltipWhite),this.tooltips[1].classList.add(o.classNames.tooltipWhite)),n||(this.tooltips[0].classList.add(o.classNames.notVisible),this.tooltips[1].classList.add(o.classNames.notVisible))},e.prototype.updataColor=function(e){var t=e.color,i=e.isGradient,r=e.gradient,o=e.isChangeColor,s=e.gradientDeg,a=o&&!i;o&&i&&(this.rollers[0].style.background="linear-gradient("+s+"deg, "+t+", "+r+")",this.rollers[1].style.background="linear-gradient("+s+"deg, "+t+", "+r+")"),a&&(this.rollers[0].style.background=t,this.rollers[1].style.background=t)},e.prototype.moveRollersAtValue=function(e){var t=e.to,i=e.from,r=e.isVertical,o=this.convertValueToPx(t,e),s=this.convertValueToPx(i,e),a=this.convertPxToProcent(o,e),n=this.convertPxToProcent(s,e);r?(this.rollers[0].style.bottom=n+"%",this.rollers[1].style.bottom=a+"%"):(this.rollers[0].style.left=n+"%",this.rollers[1].style.left=a+"%"),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.upData=function(e){this.moveRollersAtValue(e),this.toggleRollers(e),this.updataColor(e),this.updataOutTooltip(e)},e.prototype.convertValueToPx=function(e,t){var i=t.min,r=t.max,o=t.step,s=t.size,a=t.oneStep;return e===r?s:Math.round((e-i)/o)*a},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.toggleRollers=function(e){e.isDouble?this.rollers[1].classList.add(o.classNames.notVisible):this.rollers[1].classList.remove(o.classNames.notVisible)},e}();t.Rollers=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Track=void 0;var r=i(2),o=i(0),s=function(){function e(e){this.track=this.create(e),this.outElements=this.createOutElements(),this.setOut(e)}return e.prototype.create=function(e){var t=e.slider,i=document.createElement("div");return i.className=o.classNames.track,t.append(i),i},e.prototype.createOutElements=function(){var e=document.createElement("div"),t=document.createElement("div");return e.className=o.classNames.trackOutStart,t.className=o.classNames.trackOutEnd,this.track.append(e),this.track.append(t),[e,t]},e.prototype.setOut=function(e){var t=e.min,i=e.max,o=e.from,s=e.to,a=e.minMax,n=e.fromTo,l=e.isTrackPostfix,c=e.isPrefix,d=e.trackPostfix;l||(d=""),a&&(this.outElements[0].innerHTML=""+r.correctSeparate(t,e)+d,this.outElements[1].innerHTML=""+r.correctSeparate(i,e)+d),n&&(this.outElements[0].innerHTML=""+r.correctSeparate(o,e)+d,this.outElements[1].innerHTML=""+r.correctSeparate(s,e)+d);var u=n&&c;a&&c&&(this.outElements[0].innerHTML=""+d+r.correctSeparate(t,e),this.outElements[1].innerHTML=""+d+r.correctSeparate(i,e)),u&&(this.outElements[0].innerHTML=""+d+r.correctSeparate(o,e),this.outElements[1].innerHTML=""+d+r.correctSeparate(s,e))},e}();t.Track=s},function(e,t,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var o in t=arguments[i])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Scale=void 0;var o=i(2),s=i(0),a=function(){function e(e){this.create(e),this.options=e}return e.prototype.create=function(e){var t=e.slider,i=document.createElement("div");i.className=s.classNames.scale,t.append(i),this.addEventListeners(i),this.addScaleMarker(e,i),this.checkScale(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(s.classNames.findScale);this.options=r(r({},this.options),e),this.checkScale(e,t),this.updataScaleMarker(e)},e.prototype.updataScaleMarker=function(e){var t=e.onlyDivisions,i=e.slider,r=e.color;i.querySelectorAll(s.classNames.findScaleValue).forEach((function(e){t&&e.classList.add(s.classNames.scaleFsZero)})),document.documentElement.style.setProperty("--scale-color"," "+r)},e.prototype.checkScale=function(e,t){var i=e.isScale;i||t.classList.add(s.classNames.notVisible),i&&t.classList.remove(s.classNames.notVisible)},e.prototype.addEventListeners=function(e){this.handleScaleClick=this.handleScaleClick.bind(this),e.addEventListener("click",this.handleScaleClick)},e.prototype.addScaleMarker=function(e,t){for(var i=e.min,r=e.max,o=e.step,s=e.size,a=e.oneStep,n=this.getIncrement(e),l=n/o*a,c=document.createDocumentFragment(),d=0,u=0,f=i;f<r&&!(d>s-50);f+=n,u+=1){var p={fragment:c,value:f,position:d,options:e,val:u};this.createScaleMarker(p),d+=l}var h={fragment:c,value:r,position:s,options:e,val:5};this.createScaleMarker(h),t.append(c)},e.prototype.getIncrement=function(e){var t=e.size,i=e.oneStep,r=e.step,o=Math.ceil(t/i);return Math.ceil(o/5)*r},e.prototype.createScaleMarker=function(e){var t=e.fragment,i=e.value,r=e.position,a=e.options,n=e.val,l=a.isScalePostfix,c=a.isPrefix,d=a.onlyDivisions,u=a.isVertical,f=a.scalePostfix,p=document.createElement("span");p.className=s.classNames.scaleMarker;var h=document.createElement("span"),v=document.createElement("span");h.className=""+s.classNames.divisionValue+n,v.className=s.classNames.division,p.append(h),p.append(v),t.append(p);var m=h;d||(m=p),l||(f=""),m.innerHTML=""+o.correctSeparate(i,a)+f,c&&(m.innerHTML=""+f+o.correctSeparate(i,a)),this.updataScaleMarker(a);var b=this.convertPxToPercent(r,a);u?p.style.bottom=b+"%":p.style.left=b+"%"},e.prototype.convertPxToPercent=function(e,t){return 100*e/t.size},e.prototype.handleScaleClick=function(e){var t=e.target,i=this.options.onlyDivisions;if(e.stopPropagation(),t instanceof HTMLElement){var r=!t.classList.contains(s.classNames.isScaleDivison)&&i,o=!t.classList.contains(s.classNames.isScaleValue)&&!i;if(!r&&!o){var a=t.innerHTML,n=new CustomEvent("scaleclick",{bubbles:!0,detail:{event:e,value:a}});t.dispatchEvent(n)}}},e}();t.Scale=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bar=void 0;var r=i(0),o=function(){function e(e){this.create(e)}return e.prototype.create=function(e){var t=e.slider,i=document.createElement("div");i.className=r.classNames.bar,t.append(i),this.updataColor(e,i),this.updataBar(e,i)},e.prototype.upData=function(e){var t=e.slider.querySelector(r.classNames.findBar);this.updataColor(e,t),this.updataBar(e,t)},e.prototype.updataColor=function(e,t){var i=e.color,r=e.isGradient,o=e.gradient,s=e.gradientDeg,a=e.isChangeColor,n=a&&!r;a&&r&&(t.style.background="linear-gradient("+s+"deg, "+i+", "+o+")"),n&&(t.style.background=i)},e.prototype.getRollerPositions=function(e){var t=e.slider.querySelectorAll(r.classNames.findRollers),i=[t[0],t[1]],o=i[0],s=i[1];return[this.calculatePosition(o,e),this.calculatePosition(s,e)].sort((function(e,t){return e-t}))},e.prototype.calculatePosition=function(e,t){var i=t.isVertical?"top":"left",r=Number.parseInt(getComputedStyle(e).width,10);return e.getBoundingClientRect()[i]+r/2},e.prototype.convertPxToProcent=function(e,t){return 100*e/t.size},e.prototype.updataBar=function(e,t){var i=e.isVertical,r=e.isDouble,o=i?"top":"left",s=i?"height":"width",a=this.getRollerPositions(e),n=this.getNewSliderPos(e);if(r&&!i){var l=this.convertPxToProcent(Math.abs(a[1]-n),e);t.style[o]="0%",t.style[s]=l+"%"}else{l=100-(c=this.convertPxToProcent(Math.abs(a[1]-n),e));t.style[o]=c+"%",t.style[s]=l+"%"}if(!r){var c=this.convertPxToProcent(Math.abs(a[0]-n),e);l=this.convertPxToProcent(Math.abs(a[1]-a[0]),e);t.style[o]=c+"%",t.style[s]=l+"%"}},e.prototype.getNewSliderPos=function(e){var t=e.slider;return e.isVertical?t.getBoundingClientRect().top:t.getBoundingClientRect().left},e}();t.Bar=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allColors=void 0;t.allColors={"#f0f8ff":"aliceblue","#faebd7":"antiquewhite","#00ffff":"aqua","#7fffd4":"aquamarine","#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#000000":"black","#ffebcd":"blanchedalmond","#0000ff":"blue","#8a2be2":"blueviolet","#a52a2a":"brown","#deb887":"burlywood","#5f9ea0":"cadetblue","#7fff00":"chartreuse","#d2691e":"chocolate","#ff7f50":"coral","#6495ed":"cornflowerblue","#fff8dc":"cornsilk","#dc143c":"crimson","#00008b":"darkblue","#008b8b":"darkcyan","#b8860b":"darkgoldenrod","#a9a9a9":"darkgray","#006400":"darkgreen","#bdb76b":"darkkhaki","#8b008b":"darkmagenta","#556b2f":"darkolivegreen","#ff8c00":"darkorange","#9932cc":"darkorchid","#8b0000":"darkred","#e9967a":"darksalmon","#8fbc8f":"darkseagreen","#483d8b":"darkslateblue","#5ddfbe":"aquamarine","#198000":"Зеленый","#2f4f4f":"darkslategray","#00ced1":"darkturquoise","#9400d3":"darkviolet","#ff1493":"deeppink","#00bfff":"deepskyblue","#696969":"dimgray","#1e90ff":"dodgerblue","#b22222":"firebrick","#fffaf0":"floralwhite","#228b22":"forestgreen","#ff00ff":"fuchsia","#dcdcdc":"gainsboro","#f8f8ff":"ghostwhite","#daa520":"goldenrod","#ffd700":"gold","#808080":"gray","#008000":"Зеленый","#adff2f":"greenyellow","#f0fff0":"honeydew","#ff69b4":"hotpink","#cd5c5c":"indianred","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#fff0f5":"lavenderblush","#e6e6fa":"lavender","#7cfc00":"lawngreen","#fffacd":"lemonchiffon","#add8e6":"lightblue","#f08080":"lightcoral","#e0ffff":"lightcyan","#fafad2":"lightgoldenrodyellow","#d3d3d3":"lightgray","#90ee90":"lightgreen","#ffb6c1":"lightpink","#ffa07a":"lightsalmon","#20b2aa":"lightseagreen","#87cefa":"lightskyblue","#778899":"lightslategray","#b0c4de":"lightsteelblue","#ffffe0":"lightyellow","#00ff00":"lime","#32cd32":"limegreen","#faf0e6":"linen","#800000":"maroon","#66cdaa":"mediumaquamarine","#0000cd":"mediumblue","#ba55d3":"mediumorchid","#9370db":"mediumpurple","#3cb371":"mediumseagreen","#7b68ee":"mediumslateblue","#00fa9a":"mediumspringgreen","#48d1cc":"mediumturquoise","#c71585":"mediumvioletred","#191970":"midnightblue","#f5fffa":"mintcream","#ffe4e1":"mistyrose","#ffe4b5":"moccasin","#ffdead":"navajowhite","#000080":"navy","#fdf5e6":"oldlace","#808000":"olive","#6b8e23":"olivedrab","#ffa500":"orange","#ff4500":"orangered","#da70d6":"orchid","#eee8aa":"palegoldenrod","#98fb98":"palegreen","#afeeee":"paleturquoise","#db7093":"palevioletred","#ffefd5":"papayawhip","#ffdab9":"peachpuff","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#b0e0e6":"powderblue","#800080":"purple","#663399":"rebeccapurple","#ff0000":"Красный","#bc8f8f":"rosybrown","#4169e1":"royalblue","#8b4513":"saddlebrown","#fa8072":"salmon","#f4a460":"sandybrown","#2e8b57":"seagreen","#fff5ee":"seashell","#a0522d":"sienna","#c0c0c0":"silver","#87ceeb":"skyblue","#6a5acd":"slateblue","#708090":"slategray","#fffafa":"snow","#00ff7f":"springgreen","#4682b4":"steelblue","#d2b48c":"tan","#008080":"teal","#d8bfd8":"thistle","#ff6347":"tomato","#40e0d0":"turquoise","#ee82ee":"violet","#f5deb3":"wheat","#ffffff":"Белый","#f5f5f5":"whitesmoke","#ffff00":"Желтый","#9acd32":"Яблочно-зеленый","#e58000":"Морковный","#cc0000":"Бостонский-красный","#330000":"Коричневый","#7f8000":"Оливковый","#990000":"Сангрия","#b28000":"Темно-золотой","#4c8000":"Нежно-оливковый","#660000":"Коричнево-малиновый","#6c6000":"Оливковый","#6a55c3":"Пурпурно-синий","#67c8f6":"Ярко-голубой","#492f5c":"Глубокий-фиолетовый","#5cd1ec":"Голубой","#13ff42":"Ярко-зеленый","#1da426":"Пастельно-зеленый","#2fdbc0":"Бирюзовый","#386748":"Темно-зеленый","#59a9c1":"Темно-голубой","#146666":"Темно-бирюзовый","#c80993":"Фиолетово-красный","#fa0bf8":"Фуксия","#190132":"Темно-фиолетовый","#320262":"Темно-фиолетовый","#4b0397":"Индиго","#af0861":"Розовато-лиловый","#e10ac6":"Малиновый","#96072e":"Бургундский","#6404ca":"Пурпурно-синий","#7d05fc":"Фиолетовый","#320265":"Темный индиго","#0":"#000",orange:"Оранжевый",purple:"Фиолетовый","#4be74d":"Малахитовый","#653466":"Пурпурный","#329a33":"Зеленый","#194d1a":"Темно-зеленый","#fd02ff":"Розовый","#b11bb3":"Фиолетово-баклажанный","#e3b5e6":"Светло-розовый"}},function(e,t,i){var r=i(4),o=i(15);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var s={insert:"head",singleton:!1};r(o,s);e.exports=o.locals||{}},function(e,t,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,